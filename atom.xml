<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-12-28T07:37:20.101Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/05/02/hello-world/"/>
    <id>http://example.com/2021/05/02/hello-world/</id>
    <published>2021-05-02T10:57:43.062Z</published>
    <updated>2020-12-28T07:37:20.101Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>PC端微信防撤![10](C:/Users/Hmouren/Desktop/10.png)回</title>
    <link href="http://example.com/2021/05/02/PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/"/>
    <id>http://example.com/2021/05/02/PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/</id>
    <published>2021-05-02T03:03:43.000Z</published>
    <updated>2021-05-02T03:19:57.236Z</updated>
    
    <content type="html"><![CDATA[<p><strong>PC端微信消息防撤回</strong></p><blockquote><p>准备工具：</p><p>x64dbg</p><p>​    <a href="https://sourceforge.net/projects/x64dbg/">官网</a></p><p>​    <a href="https://wwi.lanzous.com/itjEVopv34h">蓝奏云</a>密码为WEhbmu更多请关注公众号<code>WEhbmu</code></p><p>​    蓝奏云中<code>.dll</code>文件可直接替换使用</p></blockquote><ol><li><p>扫码登录PC端微信</p></li><li><p>打开x32dbg工具，依次点击文件→附加→双击选择微信</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/1%E6%96%87%E4%BB%B6%E9%99%84%E5%8A%A0.png" alt="1文件附加"></p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/2%E7%82%B9%E5%87%BB%E5%BE%AE%E4%BF%A1.png" alt="2点击微信"></p></li><li><p>依次点击：符号→在左下搜索框中搜索<code>win.</code>→在搜索结果中选择<code>wechatwin.dll</code>双击进入</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/3%E6%90%9C%E7%B4%A2%E5%B9%B6%E8%BF%9B%E5%85%A5.png" alt="3搜索并进入"></p></li><li><p>在此界面依次点击：右键→搜索→当前模块→字符串</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/4.png" alt="4"></p></li><li><p>进入该界面后依次点击：搜索框搜索<code>revokemsg</code>→在结果中双击进入</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/5.png" alt="5"></p></li><li><p>进入该界面后：找到定位的上一个出现的<code>je</code>命令→选中该命令，右键选择<code>汇编（或直接space）</code>→在弹出框中直接将<code>je</code>修改为<code>jmp</code>并保存，其他东西不修改</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/%E6%9B%B4%E6%94%B9.png" alt="更改"></p></li><li><p>修改成功后，右键→补丁→修补文件导出为<code>WeChatWin.dll</code>即可</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/10.png" alt="10"></p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/11.png" alt="11"></p></li><li><p>最后将导出文件，覆盖微信安装根目录即可</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;PC端微信消息防撤回&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;准备工具：&lt;/p&gt;
&lt;p&gt;x64dbg&lt;/p&gt;
&lt;p&gt;​    &lt;a href=&quot;https://sourceforge.net/projects/x64dbg/&quot;&gt;官网&lt;/a&gt;</summary>
      
    
    
    
    <category term="反汇编" scheme="http://example.com/categories/%E5%8F%8D%E6%B1%87%E7%BC%96/"/>
    
    
    <category term="x32dbg" scheme="http://example.com/tags/x32dbg/"/>
    
  </entry>
  
  <entry>
    <title>EasyPOI官方文档</title>
    <link href="http://example.com/2021/05/02/EasyPOI%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/"/>
    <id>http://example.com/2021/05/02/EasyPOI%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</id>
    <published>2021-05-02T01:55:09.000Z</published>
    <updated>2021-05-02T01:55:09.344Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis动态SQL学习</title>
    <link href="http://example.com/2021/04/15/Mybatis%E5%8A%A8%E6%80%81SQL%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/04/15/Mybatis%E5%8A%A8%E6%80%81SQL%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-04-15T02:26:25.000Z</published>
    <updated>2021-04-15T09:43:06.463Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>动态 SQL</strong> 是 MyBatis 的强大特性之一。</p><ul><li>if</li><li>choose (when, otherwise)</li><li>trim (where, set)</li><li>foreach</li><li>等等</li></ul></blockquote><h1 id="Mybatis动态SQL"><a href="#Mybatis动态SQL" class="headerlink" title="Mybatis动态SQL"></a>Mybatis动态SQL</h1><h2 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h2><blockquote><p> 使用动态SQL最常见的情景是根据条件包含where子句的一部分，eg：</p><p>如果未传入color,price，则只按name查询。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line">select * from Commodity where name=&quot;手机&quot;</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span></span><br><span class="line">    and color like #&#123;color&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span></span><br><span class="line">    and price like #&#123;price&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="choose、when、otherwise"><a href="#choose、when、otherwise" class="headerlink" title="choose、when、otherwise"></a>choose、when、otherwise</h2><blockquote><p>适用于只想从多个条件中选择一个使用。</p><p>当传入color，则按color查询</p><p>当传入price，则按price查询</p><p>如果都没有传入，则按recommend=1，进行查询。（与其返回随机商品，不如返回推荐商品）</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line">select * from Commodity where status=&quot;active&quot;</span><br><span class="line">    <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span></span><br><span class="line">        and color like #&#123;color&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span></span><br><span class="line">        and price like &#123;price&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        and recommend = 1</span><br><span class="line">        <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="trim、where、set"><a href="#trim、where、set" class="headerlink" title="trim、where、set"></a>trim、where、set</h2><blockquote><p>①<em>where</em> 元素只会在子元素返回任何内容的情况下才插入 “WHERE” 子句。而且，若子句的开头为 “AND” 或 “OR”，<em>where</em> 元素也会将它们去除(会自动去除第一个and 或者 or)。</p><p>②<em>set</em> 元素可以用于动态包含需要更新的列，忽略其它不更新的列。</p><p>③trim可用于自定义where 和 set</p></blockquote><h3 id="where"><a href="#where" class="headerlink" title="where"></a>where</h3><blockquote><p>即时status为空，color！=color，where元素在生成sql语句时会自动将第一个and或者or去除！</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line">select * from Commodity</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span></span><br><span class="line">        status like #&#123;status&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span></span><br><span class="line">        and color like #&#123;color&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span></span><br><span class="line">        and price like #&#123;color&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCommodity&quot;</span>&gt;</span></span><br><span class="line">update Commodity</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span>status=#&#123;status&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span>color=#&#123;color&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span>price=#&#123;price&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h3><ol><li><p>完成<code>where</code>功能</p><blockquote><p>prefix：定义前缀；</p><p>prefixoverride：去掉第一个and或者or</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line">select * from Commodity</span><br><span class="line">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;WHERE&quot;</span> <span class="attr">prefixoverride</span>=<span class="string">&quot;AND |OR&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span>and status=#&#123;status&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != color&quot;</span>&gt;</span>and color=#&#123;color&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span>and price=#&#123;price&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>完成<code>or</code>功能</p><blockquote><p>prefix：定义前缀</p><p>suffixoverride：去除最后一个逗号</p><p>suffix：定义后缀</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCommodity&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;set&quot;</span> <span class="attr">suffixoverride</span>=<span class="string">&quot;,&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;where id=#&#123;id&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span>status=#&#123;status&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span>color=#&#123;color&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span>price=#&#123;price&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h2><p><a href="https://www.cnblogs.com/hooly/p/9090167.html">参考链接</a></p><blockquote><p>动态SQL的另一个常见使用场景就是对集合进行遍历（尤其是在构建IN条件语句的时候）</p><p>foreach元素的属性主要有：item、index、collection、open、separator、close、item。</p><ol><li><p>item：表示集合中每一个元素进行迭代时的别名，也就是常看的value值（本次迭代获取的元素）；</p></li><li><p>index：指定一个名字，用于表示在迭代过程中，每次迭代到的位置。（迭代次数）；</p></li><li><p>open：表示该语句以什么开始；</p></li><li><p>separator：表示每次进行迭代间以什么符号作为分隔符；</p></li><li><p>close：表示以什么结束；</p></li><li><p>collection：该属性必须指定，且在不同情况下。该属性的值不同，具体如下：</p></li></ol></blockquote><p><strong>collection属性不同情况区别：</strong></p><ol><li><p>如果传入的时单参数且参数类型时一个List时，collection属性值为list；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//与之对应的mappper代码</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Commodity&gt; <span class="title">dynamicForeachTest</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;  </span><br></pre></td></tr></table></figure></li><li><p>如果传入的时单参数且参数类型是一个array数组的时候，collection的属性值为array；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//与之对应的mappper代码</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Commodity&gt; <span class="title">dynamicForeachTest</span><span class="params">(<span class="keyword">int</span>[] ids)</span></span>;  </span><br></pre></td></tr></table></figure></li><li><p>如果传入的参数时多个的时候，我们就需要将它们封装成Map。单参数也可以封装成map。map的key时参数名。所以此时collection属性值就是传入的List或array对象在自己封装的map里面的key</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//与之对应的mappper代码</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Commodity&gt; <span class="title">dynamicForeachTest</span><span class="params">(Map&lt;String,Object&gt; params)</span></span>;  </span><br></pre></td></tr></table></figure></li></ol><p><strong>简单demo</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectPostIn&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;domain.blog.Post&quot;</span>&gt;</span></span><br><span class="line">  SELECT *</span><br><span class="line">  FROM POST P</span><br><span class="line">  WHERE ID in</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;item&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="script"><a href="#script" class="headerlink" title="script"></a>script</h2><blockquote><p>通过script元素，可以在带注解的映射器接口类中使用动态sql</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Update(&#123;</span></span><br><span class="line"><span class="meta">            &quot;&lt;script&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;update Commodity&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;set&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;if test=&#x27;status != null&#x27;&gt;status=#&#123;status&#125;,&lt;/if&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;if test=&#x27;color != null&#x27;&gt;color=#&#123;color&#125;,&lt;/if&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;if test=&#x27;price != null&#x27;&gt;price=#&#123;price&#125;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;/set&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;where id=#&#123;id&#125;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;/script&gt;&quot;</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateCommodity</span><span class="params">(Commodity commodity)</span></span></span><br></pre></td></tr></table></figure><h2 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h2><blockquote><p>bind元素允许你在OGNL表达式以外创建一个变量，并将其绑定到当前的上下文中</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bind</span> <span class="attr">name</span>=<span class="string">&quot;title&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%&quot;</span>+<span class="attr">Commodity.getTitle</span>()+&quot;%&quot; /&gt;</span></span><br><span class="line">    select * from Commodity</span><br><span class="line">    where title like #&#123;title&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="多数据库支持"><a href="#多数据库支持" class="headerlink" title="多数据库支持"></a>多数据库支持</h2><blockquote><p> 如果配置了 databaseIdProvider，你就可以在动态代码中使用名为 “_databaseId” 的变量来为不同的数据库构建特定的语句。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">selectKey</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">order</span>=<span class="string">&quot;BEFORE&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;_databaseId == &#x27;oracle&#x27;&quot;</span>&gt;</span></span><br><span class="line">      select seq_users.nextval from dual</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;_databaseId == &#x27;db2&#x27;&quot;</span>&gt;</span></span><br><span class="line">      select nextval for seq_users from sysibm.sysdummy1&quot;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">selectKey</span>&gt;</span></span><br><span class="line">  insert into users values (#&#123;id&#125;, #&#123;name&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/lydia88/article/details/83385607">参考文章</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;动态 SQL&lt;/strong&gt; 是 MyBatis 的强大特性之一。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if&lt;/li&gt;
&lt;li&gt;choose (when, otherwise)&lt;/li&gt;
&lt;li&gt;trim (where, set)&lt;/li&gt;</summary>
      
    
    
    
    <category term="Mybatis" scheme="http://example.com/categories/Mybatis/"/>
    
    
    <category term="动态SQL" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81SQL/"/>
    
  </entry>
  
  <entry>
    <title>上传8K图片导致内存溢出</title>
    <link href="http://example.com/2021/04/07/%E4%B8%8A%E4%BC%A08K%E5%9B%BE%E7%89%87%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/"/>
    <id>http://example.com/2021/04/07/%E4%B8%8A%E4%BC%A08K%E5%9B%BE%E7%89%87%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/</id>
    <published>2021-04-07T09:23:27.000Z</published>
    <updated>2021-04-07T09:37:17.963Z</updated>
    
    <content type="html"><![CDATA[<p><strong>上传8K图片报错，显示堆内存溢出</strong></p><p><a href="https://blog.csdn.net/lk519186921/article/details/7076105?utm_medium=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~default-11.control&dist_request_id=&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~default-11.control">参考文章</a></p><p><code>Handler dispatch failed; nested exception is java.lang.OutOfMemoryError: Java heap space</code></p><p><img src="%E4%B8%8A%E4%BC%A08K%E5%9B%BE%E7%89%87%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/image-20210407172525033.png" alt="image-20210407172525033"></p><blockquote><p>问题产生的原因是服务器端tomcat的内存不足，将服务器tomcat的内存扩充即可</p><p>溢出错误有三种</p><ol><li>java heap space堆内存溢出</li></ol></blockquote><h1 id="win版本"><a href="#win版本" class="headerlink" title="win版本"></a>win版本</h1><h2 id="堆溢出解决"><a href="#堆溢出解决" class="headerlink" title="堆溢出解决"></a>堆溢出解决</h2><h3 id="解压版的tomcat"><a href="#解压版的tomcat" class="headerlink" title="解压版的tomcat"></a>解压版的tomcat</h3><p>找到tomcat\bin中的<code>catalina.bat</code>文件，并设置内存大小<code>set JAVA_OPTS=-Xms1024m -Xmx=1024m</code>  xms和xmx一般配置为一致较好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rem ----- Execute The Requested Command ---------------------------------------</span><br><span class="line">set JAVA_OPTS&#x3D;-Xms512m -Xmx512m</span><br><span class="line">echo Using CATALINA_BASE:   &quot;%CATALINA_BASE%&quot;</span><br><span class="line">echo Using CATALINA_HOME:   &quot;%CATALINA_HOME%&quot;</span><br><span class="line">echo Using CATALINA_TMPDIR: &quot;%CATALINA_TMPDIR%&quot;</span><br></pre></td></tr></table></figure><h3 id="安装版tomcat"><a href="#安装版tomcat" class="headerlink" title="安装版tomcat"></a>安装版tomcat</h3><p>双击打开tomcat6w.exe，在java选项卡页面中分别设置<code>Initial memory pool</code>和<code>Maximun menory pool</code></p><p><img src="%E4%B8%8A%E4%BC%A08K%E5%9B%BE%E7%89%87%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/image-20210407173540071.png" alt="image-20210407173540071"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;上传8K图片报错，显示堆内存溢出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/lk519186921/article/details/7076105?utm_medium=distribute.pc_rele</summary>
      
    
    
    
    <category term="error" scheme="http://example.com/categories/error/"/>
    
    
    <category term="tomcat" scheme="http://example.com/tags/tomcat/"/>
    
    <category term="图片上传" scheme="http://example.com/tags/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java保存图片三种方式</title>
    <link href="http://example.com/2021/04/07/Java%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://example.com/2021/04/07/Java%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/</id>
    <published>2021-04-07T08:34:15.000Z</published>
    <updated>2021-04-07T08:34:44.970Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">if (fileWidth &gt; 4096) &#123;</span><br><span class="line">                       if (fileWidth &gt; 7683)&#123;</span><br><span class="line">                           &#x2F;*通过ImageIO保存*&#x2F;</span><br><span class="line">                           int scaleSize &#x3D; 1920;</span><br><span class="line">                           float scale &#x3D; fileWidth&#x2F;scaleSize;</span><br><span class="line">                           int fileHeight &#x3D; readFile.getHeight();</span><br><span class="line">                           BufferedImage bufferedImage &#x3D; new BufferedImage(scaleSize, (int) (fileHeight &#x2F; scale), BufferedImage.TYPE_INT_RGB);</span><br><span class="line">                           bufferedImage.getGraphics().drawImage(</span><br><span class="line">                                   readFile.getScaledInstance(scaleSize, (int)(fileHeight&#x2F;scale), Image.SCALE_SMOOTH), 0,</span><br><span class="line">                                   0, null);</span><br><span class="line">                           ImageIO.write(bufferedImage,type,new File(path));</span><br><span class="line">                       &#125;</span><br><span class="line">                      else&#123;</span><br><span class="line">                           File f &#x3D; new File(path);</span><br><span class="line">                           &#x2F;*直接通过file转存*&#x2F;</span><br><span class="line">                           file.transferTo(f);</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">                   else &#123;</span><br><span class="line">                       &#x2F;*通过谷歌插件Thumbnail*&#x2F;</span><br><span class="line">                       Thumbnails.of(file.getInputStream()).outputQuality(0.50).size(1920,1080).toFile(path);</span><br><span class="line">                   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="java图片保存" scheme="http://example.com/tags/java%E5%9B%BE%E7%89%87%E4%BF%9D%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>乐字节CRM项目学习实战</title>
    <link href="http://example.com/2021/04/06/%E4%B9%90%E5%AD%97%E8%8A%82CRM%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98/"/>
    <id>http://example.com/2021/04/06/%E4%B9%90%E5%AD%97%E8%8A%82CRM%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98/</id>
    <published>2021-04-06T13:55:57.000Z</published>
    <updated>2021-04-06T13:59:06.870Z</updated>
    
    <content type="html"><![CDATA[<p><strong>乐字节CRM项目学习实战</strong></p><p><img src="%E4%B9%90%E5%AD%97%E8%8A%82CRM%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98/image-20210406215905437.png" alt="image-20210406215905437"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;乐字节CRM项目学习实战&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;%E4%B9%90%E5%AD%97%E8%8A%82CRM%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98/image</summary>
      
    
    
    
    
    <category term="CRM" scheme="http://example.com/tags/CRM/"/>
    
    <category term="项目实战" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>利用Apache-POI操作word模板</title>
    <link href="http://example.com/2021/04/02/%E5%88%A9%E7%94%A8Apache-POI%E6%93%8D%E4%BD%9Cword%E6%A8%A1%E6%9D%BF/"/>
    <id>http://example.com/2021/04/02/%E5%88%A9%E7%94%A8Apache-POI%E6%93%8D%E4%BD%9Cword%E6%A8%A1%E6%9D%BF/</id>
    <published>2021-04-02T08:17:55.000Z</published>
    <updated>2021-04-05T12:12:10.428Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用Apache-POI操作word模板"><a href="#利用Apache-POI操作word模板" class="headerlink" title="利用Apache-POI操作word模板"></a><strong>利用Apache-POI操作word模板</strong></h1><ol><li>pom依赖</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--POI操作word--&gt;</span><br><span class="line">    &lt;!--导入操作excel所需要的jar包--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;poi&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.10-beta2&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;type&gt;jar&lt;&#x2F;type&gt;</span><br><span class="line">      &lt;scope&gt;compile&lt;&#x2F;scope&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;poi-ooxml&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.10-beta2&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;type&gt;jar&lt;&#x2F;type&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;poi-ooxml-schemas&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.10-beta2&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;type&gt;jar&lt;&#x2F;type&gt;</span><br><span class="line">      &lt;scope&gt;compile&lt;&#x2F;scope&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-scratchpad&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.0.2-FINAL&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;!--poi结束--&gt;</span><br></pre></td></tr></table></figure><ol><li>操作word模板导出（注意word模板中的占位符可以先通过记事本写，然后复制到word。直接在word中可能出现问题，无法替换）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@CrossOrigin(origins = &quot;*&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/GetSignWordByKGD&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetSignWordByKGD</span> <span class="params">(<span class="meta">@RequestParam(value = &quot;ID&quot;)</span>String ID, HttpServletResponse response, HttpServletRequest request)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        GCSB_OwnerProject project = _ownerProBO.FindEntity(ID);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * word模板路径</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String realPath = request.getSession().getServletContext().getRealPath(<span class="string">&quot;/WEB-INF/FileModel/template_Word.docx&quot;</span>);</span><br><span class="line"><span class="comment">//        构造数据，key为模板变量，value为新值</span></span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;$&#123;address&#125;&quot;</span>,project.getProjectAddress());</span><br><span class="line">        map.put(<span class="string">&quot;$&#123;company&#125;&quot;</span>,project.getCompanyAddress());</span><br><span class="line">        map.put(<span class="string">&quot;$&#123;name&#125;&quot;</span>,project.getLiableName());</span><br><span class="line">        map.put(<span class="string">&quot;$&#123;phone&#125;&quot;</span>,project.getLiableTel());</span><br><span class="line">        <span class="comment">/*文件提取器*/</span></span><br><span class="line">        XWPFDocument document = <span class="keyword">new</span> XWPFDocument(POIXMLDocument.openPackage(realPath));</span><br><span class="line">        Iterator&lt;XWPFParagraph&gt; iterator = document.getParagraphsIterator();</span><br><span class="line">        <span class="comment">/*遍历word元素与替换*/</span></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            XWPFParagraph paragraph = iterator.next();</span><br><span class="line">            Set&lt;String&gt; set = map.keySet();</span><br><span class="line">            Iterator&lt;String&gt; stringIterator = set.iterator();</span><br><span class="line">            <span class="keyword">while</span> (stringIterator.hasNext())&#123;</span><br><span class="line">                String key = stringIterator.next();</span><br><span class="line">                List&lt;XWPFRun&gt; runs = paragraph.getRuns();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;runs.size(); i++)&#123;</span><br><span class="line">                    String text = runs.get(i).getText(<span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">for</span> (Map.Entry&lt;String,String&gt; e : map.entrySet())&#123;</span><br><span class="line">                        <span class="keyword">if</span> (text != <span class="keyword">null</span> &amp;&amp; text.contains(e.getKey()))&#123;</span><br><span class="line">                            text = text.replace(e.getKey(),e.getValue());</span><br><span class="line">                            runs.get(i).setText(text,<span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//docs文件夹目录,因为直接将word通过response文件流输出，可能输出zip！所以先直接输出本地，在调用response，最后删除本地</span></span><br><span class="line">        String docsPath = request.getSession().getServletContext().getRealPath(<span class="string">&quot;docs&quot;</span>);</span><br><span class="line">        String filePath = docsPath + FILE_SEPARATOR +<span class="string">&quot;word测试输出.docx&quot;</span>;</span><br><span class="line">        <span class="comment">/*直接通过response输出，会输出zip，通过下方转一下*/</span></span><br><span class="line">        FileOutputStream stream = <span class="keyword">new</span> FileOutputStream(filePath);</span><br><span class="line">        document.write(stream);</span><br><span class="line">        stream.close();</span><br><span class="line">        <span class="comment">//download方法调用response读取输出本地文件流</span></span><br><span class="line">        ExportUtil.download(filePath,response);</span><br><span class="line">        <span class="comment">//cleanFile删除本地文件</span></span><br><span class="line">        ExportUtil.cleanFile(filePath);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>download方法即cleanFile方法实现</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExportUtil</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出下载,弹出下载框</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path  文件下载路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(String path, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// path是指欲下载的文件的路径。</span></span><br><span class="line">            File file = <span class="keyword">new</span> File(path);</span><br><span class="line">            <span class="comment">// 取得文件名。</span></span><br><span class="line">            String filename = file.getName();</span><br><span class="line">            <span class="comment">// 以流的形式下载文件。</span></span><br><span class="line">            InputStream fis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(path));</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[fis.available()];</span><br><span class="line">            fis.read(buffer);</span><br><span class="line">            fis.close();</span><br><span class="line">            <span class="comment">// 清空response</span></span><br><span class="line">            response.reset();</span><br><span class="line">            <span class="comment">// 设置response的Header</span></span><br><span class="line">            response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span>+ URLEncoder.encode(filename, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            response.addHeader(<span class="string">&quot;Content-Length&quot;</span>, <span class="string">&quot;&quot;</span> + file.length());</span><br><span class="line">            OutputStream toClient = <span class="keyword">new</span> BufferedOutputStream(response.getOutputStream());</span><br><span class="line">            response.setContentType(<span class="string">&quot;application/vnd.ms-excel;charset=gb2312&quot;</span>);</span><br><span class="line">            toClient.write(buffer);</span><br><span class="line">            toClient.flush();</span><br><span class="line">            toClient.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * 清除文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> docsPath  文件路径</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">cleanFile</span><span class="params">(String docsPath)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(docsPath);</span><br><span class="line">        file.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;利用Apache-POI操作word模板&quot;&gt;&lt;a href=&quot;#利用Apache-POI操作word模板&quot; class=&quot;headerlink&quot; title=&quot;利用Apache-POI操作word模板&quot;&gt;&lt;/a&gt;&lt;strong&gt;利用Apache-POI操作word</summary>
      
    
    
    
    
    <category term="ApachePOI" scheme="http://example.com/tags/ApachePOI/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch学习</title>
    <link href="http://example.com/2021/03/28/Elasticsearch%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/03/28/Elasticsearch%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-03-28T05:00:05.000Z</published>
    <updated>2021-03-28T05:07:27.117Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>首先在学习Elasticsearch前，需要理清其与MySQL间概念的对应关系</p></blockquote><table><thead><tr><th>Elasticsearch</th><th>MySQL</th></tr></thead><tbody><tr><td>Index索引</td><td>Database数据库</td></tr><tr><td>Type类型</td><td>Table表</td></tr><tr><td>Document文档</td><td>Row行</td></tr><tr><td>Field属性</td><td>Column列</td></tr><tr><td>Mapping</td><td>Schema</td></tr><tr><td>Everything is indexed</td><td>Index</td></tr><tr><td>Query</td><td>SQL</td></tr><tr><td>GET http://</td><td>select *  from….</td></tr><tr><td>POST http://</td><td>update table set….</td></tr></tbody></table><p>(1) 在关系型数据库中，schema定义了表，每个表的字段。还有表和字段间的关系。在ES中，Mapping定义索引下的Type字段处理规则，即索引如何建立、索引类型、是否保存原始索引JSON文档，是否压缩原始JSON文档，是否需要分词处理，如何进行分词处理等。</p><p>(2) 在数据库中的增删改查等价于ES中的PUT、Delete、POST、GET</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;首先在学习Elasticsearch前，需要理清其与MySQL间概念的对应关系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Elasticsearch&lt;/th&gt;
&lt;th&gt;MySQL&lt;/th&gt;
&lt;/tr&gt;
&lt;</summary>
      
    
    
    
    
    <category term="elasticsearch" scheme="http://example.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>乐字节SpringSecurity权限管理</title>
    <link href="http://example.com/2021/03/22/%E4%B9%90%E5%AD%97%E8%8A%82SpringSecurity%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    <id>http://example.com/2021/03/22/%E4%B9%90%E5%AD%97%E8%8A%82SpringSecurity%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</id>
    <published>2021-03-22T01:18:21.000Z</published>
    <updated>2021-03-22T02:43:34.142Z</updated>
    
    <content type="html"><![CDATA[<p><strong>SpringSecurity</strong></p><h1 id="SpringSecurity简介"><a href="#SpringSecurity简介" class="headerlink" title="SpringSecurity简介"></a>SpringSecurity简介</h1><h2 id="安全框架概述"><a href="#安全框架概述" class="headerlink" title="安全框架概述"></a>安全框架概述</h2><p>​        用于解决系统安全问题的框架。如果没有安全框架，需要手动处理每个资源的访问控制。使用安全框架后，可以通过配置的方式实现对资源的访问控制。</p><h2 id="常用安全框架"><a href="#常用安全框架" class="headerlink" title="常用安全框架"></a>常用安全框架</h2><ul><li>Spring Security：属于Spring体系。是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的安全框架。提供了一组可以在Spring应用上下文中配置的Bean，充分利用了Spring IOC（控制反转Inversion Of Control），DI（依赖注入Dependency Injection）和AOP（面向切片编程）功能，为应用系统提供声明式的安全访问控制功能，减少了为企业系统安全控制编写的大量重复代码。</li><li>Apache Shiro：Java安全框架，提供了认证，授权，加密，和会话管理。</li></ul><h2 id="Spring-Security简介"><a href="#Spring-Security简介" class="headerlink" title="Spring Security简介"></a>Spring Security简介</h2><p>概述：</p><blockquote><p>Spring Security是一个高度自定义的安全框架。利用 Spring loC/D和AOP功能，为系统提供了声明式安全访问控制功能，减少了为系统安全而编写大量重复代码的工作。使用 Spring Secruity的原因有很多，但大部分都是发现了javiER的 Servlet规范或EJB规范中的安全功能缺乏典型企业应用场景。同时认识到他们在WAR或EAR级别无法移植。因此如果你更换服务器环境，还有大量工作去重新配置你的应用程序。使用 Spring Security解决了这些问题也为你提供许多其他有用的、可定制的安全功能。正如你可能知道的两个应用程序的两个主要区域是“认证和授权”（或者访问控制）。这两点也是 Spring Security重要核心功能。“认证”，是建立一个他声明的主体的过程个“主体”一般是指用户，设备或一些可以在你的应用程序中执行动作的其他系统），通俗点说就是系统认为用户是否能登录。“授权”指确定一个主体是否允许在你的应用程序执行一个动作的过程。通俗点讲就是系统判断用户是否有权限去做某些事情。</p></blockquote><h2 id="UserDetailService类"><a href="#UserDetailService类" class="headerlink" title="UserDetailService类"></a>UserDetailService类</h2><h2 id="PasswordEncoder密码解析器详解"><a href="#PasswordEncoder密码解析器详解" class="headerlink" title="PasswordEncoder密码解析器详解"></a>PasswordEncoder密码解析器详解</h2><p>​        SpringSecurity要求容器必须有PasswordEncoder实例。所以当自定义登录逻辑时要求必须给容器注入PasswordEncoder的bean对象。</p><h3 id="接口介绍"><a href="#接口介绍" class="headerlink" title="接口介绍"></a>接口介绍</h3><ul><li>encode（）：将参数按照特定的解析规则进行解析；</li><li>matches（）：验证从存储中获取的编码密码与编码后提交的原始密码是否匹配。若匹配则返回true，若不匹配则返回false。第一个参数标识需要被解析的密码。第二个参数标识存储的密码。</li><li>upgrade Encoding（）：如果解析的密码能够再次进行解析且达到更安全的结果则返回true，否则返回false</li></ul><p>tip：BCrypt加密</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;SpringSecurity&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;SpringSecurity简介&quot;&gt;&lt;a href=&quot;#SpringSecurity简介&quot; class=&quot;headerlink&quot; title=&quot;SpringSecurity简介&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="权限管理" scheme="http://example.com/categories/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="SpringSecurity" scheme="http://example.com/tags/SpringSecurity/"/>
    
  </entry>
  
  <entry>
    <title>尚硅谷RBAC权限管理系统学习</title>
    <link href="http://example.com/2021/03/22/%E5%B0%9A%E7%A1%85%E8%B0%B7RBAC%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/03/22/%E5%B0%9A%E7%A1%85%E8%B0%B7RBAC%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-03-22T01:05:30.000Z</published>
    <updated>2021-03-22T01:05:53.197Z</updated>
    
    
    
    
    <category term="权限管理" scheme="http://example.com/categories/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="RBAC" scheme="http://example.com/tags/RBAC/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot通过JavaMailSender发生邮件</title>
    <link href="http://example.com/2021/03/19/SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/"/>
    <id>http://example.com/2021/03/19/SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/</id>
    <published>2021-03-19T05:43:26.000Z</published>
    <updated>2021-03-19T08:35:17.366Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前期准备：开启163SMTP服务，并构建基本项目结构</p></blockquote><p><img src="SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/image-20210319141749978.png" alt="image-20210319141749978"></p><ol><li>添加相关pom依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--发送邮件所需依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加相关配置</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9898</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">smtp</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">********@163.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">UU************NZM</span>  <span class="string">//授权码</span></span><br><span class="line">    <span class="attr">default-encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.163.com</span></span><br></pre></td></tr></table></figure><h1 id="发送简单文本邮件"><a href="#发送简单文本邮件" class="headerlink" title="发送简单文本邮件"></a>发送简单文本邮件</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String mailSetFrom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String mailSetTo = <span class="string">&quot;*****u@foxmail.com&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单邮件发送</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendSimpleMail</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">    message.setFrom(mailSetFrom);</span><br><span class="line">    message.setTo(mailSetTo);</span><br><span class="line">    message.setSubject(<span class="string">&quot;这是测试主题&quot;</span>);</span><br><span class="line">    message.setText(<span class="string">&quot;测试邮件内容&quot;</span>);</span><br><span class="line">    mailSender.send(message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/image-20210319143716296.png" alt="image-20210319143716296"></p><h1 id="带附件的邮件发送"><a href="#带附件的邮件发送" class="headerlink" title="带附件的邮件发送"></a>带附件的邮件发送</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mailSetFrom;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String mailSetTo = <span class="string">&quot;*****u@foxmail.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 带有附件的邮件发送</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMailWithAnnex</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">    MimeMessage mimeMessage = mailSender.createMimeMessage();</span><br><span class="line">    MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(mimeMessage,<span class="keyword">true</span>);</span><br><span class="line">    helper.setFrom(mailSetFrom);</span><br><span class="line">    helper.setTo(mailSetTo);</span><br><span class="line">    helper.setSubject(<span class="string">&quot;这是发送带有附件的邮件发送测试&quot;</span>);</span><br><span class="line">    helper.setText(<span class="string">&quot;这是一封带有附件的邮件的测试&quot;</span>);</span><br><span class="line">    <span class="comment">/*设置附件*/</span></span><br><span class="line">    FileSystemResource fileSystemResource = <span class="keyword">new</span> FileSystemResource(<span class="keyword">new</span> File(<span class="string">&quot;图片路径static\\images\\photo.jpg&quot;</span>));</span><br><span class="line">    helper.addAttachment(<span class="string">&quot;这是附件名附件-1.jpg&quot;</span>,fileSystemResource);</span><br><span class="line">    helper.addAttachment(<span class="string">&quot;附件-2.jpg&quot;</span>,fileSystemResource);</span><br><span class="line">    <span class="comment">/*发送邮件*/</span></span><br><span class="line">    mailSender.send(mimeMessage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="嵌入静态资源的邮件发送"><a href="#嵌入静态资源的邮件发送" class="headerlink" title="嵌入静态资源的邮件发送"></a>嵌入静态资源的邮件发送</h1><blockquote><p>经测试163邮箱SMTP发送静态资源有钱会被退回，误判为垃圾邮件；</p><p>这里采用QQ邮箱SMTP服务</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mailSetFrom;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String mailSetTo = <span class="string">&quot;hmoumou@foxmail.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在发送的邮件中迁入静态资源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMailWithStaticSource</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">    MimeMessage mimeMessage = mailSender.createMimeMessage();</span><br><span class="line">    MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(mimeMessage, <span class="keyword">true</span>);</span><br><span class="line">    helper.setFrom(mailSetFrom);</span><br><span class="line">    helper.setTo(mailSetTo);</span><br><span class="line">    helper.setSubject(<span class="string">&quot;这是一封嵌入静态资源的邮件发送主题&quot;</span>);</span><br><span class="line">    helper.setText(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&lt;h3&gt;这一封邮件静态资源&lt;/h3&gt;&lt;img src=\&quot;cid:photo\&quot;&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">    FileSystemResource fileSystemResource = <span class="keyword">new</span> FileSystemResource(<span class="keyword">new</span> File(<span class="string">&quot;static\\images\\photo.jpg&quot;</span>));</span><br><span class="line">    <span class="comment">/*addLine函数中的资源名称photo必须与正文text中的cid一致！！*/</span></span><br><span class="line">    helper.addInline(<span class="string">&quot;photo&quot;</span>,fileSystemResource);</span><br><span class="line">    mailSender.send(mimeMessage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/image-20210319151922078.png" alt="image-20210319151922078"></p><h1 id="使用freemark模板发送邮件"><a href="#使用freemark模板发送邮件" class="headerlink" title="使用freemark模板发送邮件"></a>使用freemark模板发送邮件</h1><blockquote><p>引入相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><ol><li><p>自定义模板文件样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>你好，$&#123;userName&#125;。欢迎注册本网站<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://dss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3461177213,1528805342&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><pre><code class="java">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)private String mailSetFrom;private static String mailSetTo = &quot;hmoumou@foxmail.com&quot;;@Autowiredprivate JavaMailSender mailSender;@Autowiredprivate Configuration configuration;    /**     * 使用模板文件发送邮件     */    @Test    public void sendMailWithTemplate() throws MessagingException, IOException, TemplateException &#123;        MimeMessage mimeMessage = mailSender.createMimeMessage();        MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);        helper.setFrom(mailSetFrom);        helper.setTo(mailSetTo);        helper.setSubject(&quot;通过模板文件进行&quot;);        HashMap&lt;String, Object&gt; model = new HashMap&lt;&gt;();        model.put(&quot;userName&quot;,&quot;章邯&quot;);        Template template = configuration.getTemplate(&quot;123.ftl&quot;);        String html = FreeMarkerTemplateUtils.processTemplateIntoString(template,model);        helper.setText(html,true);        mailSender.send(mimeMessage);    &#125;</code></pre></li></ol><p><img src="SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/image-20210319162630816.png" alt="image-20210319162630816"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前期准备：开启163SMTP服务，并构建基本项目结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82</summary>
      
    
    
    
    <category term="SpringBoot" scheme="http://example.com/categories/SpringBoot/"/>
    
    
    <category term="JavaMailSender" scheme="http://example.com/tags/JavaMailSender/"/>
    
    <category term="发邮件" scheme="http://example.com/tags/%E5%8F%91%E9%82%AE%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>IDEA实现文件上传FastDFS</title>
    <link href="http://example.com/2021/03/12/IDEA%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0FastDFS/"/>
    <id>http://example.com/2021/03/12/IDEA%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0FastDFS/</id>
    <published>2021-03-12T06:39:12.000Z</published>
    <updated>2021-03-25T02:11:11.325Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.hmoumou.xyz/2020/08/13/linux-centos7.5-an-zhuang-shi-yong-fastdfs/">fastDFS配置</a></p><ol><li><p>spring脚手架快速构建springweb项目</p></li><li><p>添加相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        使用fastDFS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.tobato<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.26.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--生成缩略图所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.coobird<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thumbnailator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>新建FastClientImporter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Import(FdfsClientConfig.class)</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 解决jmx重复注册bean的问题</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="meta">@EnableMBeanExport(registration = RegistrationPolicy.IGNORE_EXISTING)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastClientImporter</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>test类测试</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes = DemoApplication.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastDFSTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FastFileStorageClient storageClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ThumbImageConfig thumbImageConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpload</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;D:\\photo1.jpg&quot;</span>);</span><br><span class="line">        StorePath storePath = <span class="keyword">this</span>.storageClient.uploadImageAndCrtThumbImage(<span class="keyword">new</span> FileInputStream(file), file.length(), <span class="string">&quot;jpg&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(storePath.getFullPath()+ <span class="string">&quot; 带分组的路径&quot;</span>);</span><br><span class="line">        System.out.println(storePath.getPath()+ <span class="string">&quot; 不带分组的路径&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String path = thumbImageConfig.getThumbImagePath(storePath.getPath());</span><br><span class="line">        System.out.println(path+<span class="string">&quot; 缩略图路径&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="IDEA%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0FastDFS/1584850135123.jpg" alt="1584850135123"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.hmoumou.xyz/2020/08/13/linux-centos7.5-an-zhuang-shi-yong-fastdfs/&quot;&gt;fastDFS配置&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;spring脚手架快速构建spri</summary>
      
    
    
    
    
    <category term="fastDFS" scheme="http://example.com/tags/fastDFS/"/>
    
    <category term="demo" scheme="http://example.com/tags/demo/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习</title>
    <link href="http://example.com/2021/03/10/JavaScript%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/03/10/JavaScript%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-03-10T09:39:01.000Z</published>
    <updated>2021-03-10T09:39:13.853Z</updated>
    
    <content type="html"><![CDATA[<p><strong>JavaScript学习笔记</strong></p><h1 id="JavaScript教程"><a href="#JavaScript教程" class="headerlink" title="JavaScript教程"></a>JavaScript教程</h1><p><strong>依据菜鸟教程整理</strong></p><h2 id="JavaScript输出"><a href="#JavaScript输出" class="headerlink" title="JavaScript输出"></a>JavaScript输出</h2><blockquote><p>显示数据方式：</p><pre><code>1. window.alert()  弹出警示框2. document.write()  将内容写道HTML文档中3. innerHTML  将内容写入到HTML元素中4. console.log()   输出到控制台</code></pre></blockquote><p>在js中操作元素：<code>document.getElementById(&quot;元素id&quot;)</code></p><p>使用3    <code>document.getElementById(&quot;test&quot;).innerHTML = &quot;改变&quot;</code></p><h2 id="JavaScript数据类型"><a href="#JavaScript数据类型" class="headerlink" title="JavaScript数据类型"></a>JavaScript数据类型</h2><ul><li>基本数据类型：String, Boolean, Number, Null(空), Undefined(未定义), Symbol(独一无二的值)</li><li>引用数据类型：Array, Object, Function</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x;  <span class="comment">//x为undefined</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;I&#x27;m King&quot;</span>;  <span class="comment">//x为string，双引号中可以有单引号，如果嵌一个双引号最好转义 \</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">5</span>; <span class="comment">//x为number</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">2e10</span>;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">2e-10</span>;   <span class="comment">//科学计数法表示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数组创建</span></span><br><span class="line"><span class="keyword">var</span> arrs = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">arrs[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arrs[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arrs[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;walk&quot;</span>,<span class="string">&quot;bike&quot;</span>,<span class="string">&quot;car&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arrs=[<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//JavaScript对象的创建与寻址</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">name</span>:<span class="string">&quot;Peter&quot;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(person.name)</span><br><span class="line"><span class="built_in">console</span>.log(person[<span class="string">&quot;age&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">//undefined,null</span></span><br><span class="line"><span class="literal">undefined</span> == <span class="literal">null</span>;  <span class="comment">//true</span></span><br><span class="line"><span class="literal">undefined</span> === <span class="literal">null</span>;   <span class="comment">//false</span></span><br><span class="line"><span class="comment">//undefined表示变量不含值</span></span><br><span class="line"><span class="comment">//可以通过将变量的值设为null，来清空变量</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript对象"><a href="#JavaScript对象" class="headerlink" title="JavaScript对象"></a>JavaScript对象</h2><blockquote><p>对象是拥有属性和方法的数据</p></blockquote><p><strong>对象定义</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">name</span>:<span class="string">&quot;Peter&quot;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(person.name)</span><br><span class="line"><span class="built_in">console</span>.log(person[<span class="string">&quot;age&quot;</span>])</span><br></pre></td></tr></table></figure><p>通常认为JavaScript对象是键值对的容器。键值对（对象属性）写法    <code>name:value</code></p><p><strong>对象方法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=<span class="string">&quot;test&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    name:<span class="string">&quot;Peter&quot;</span>,</span><br><span class="line">    age：<span class="number">18</span>，</span><br><span class="line">    info: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name+<span class="string">&quot;&quot;</span>+<span class="built_in">this</span>.age</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>).innerHTML = person.info();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>对象方法的访问</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    methodName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>+<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问通过</span></span><br><span class="line">obj.methodName();   <span class="comment">//返回4</span></span><br><span class="line"><span class="comment">//如果未加（）</span></span><br><span class="line">obj.methodName;   <span class="comment">//返回函数的定义，function()&#123;return 1+3;d&#125;</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript函数"><a href="#JavaScript函数" class="headerlink" title="JavaScript函数"></a>JavaScript函数</h2><blockquote><p>函数是由时间驱动或当它被调用时执行的可重复使用的代码块</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//语法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//执行代买</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>可携带参数，调用带参数的函数</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 变量和参数对应顺序一致</span></span><br><span class="line">&lt;button onclick=<span class="string">&quot;cont(&#x27;Peter&#x27;,&#x27;Hello&#x27;)&quot;</span>&gt;&lt;/button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cont</span>(<span class="params">name,action</span>)</span>&#123;</span><br><span class="line">    alert(name + <span class="string">&quot;&quot;</span> + action)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>带返回值的函数：</strong></p><blockquote><p>在使用return语句时，函数停止执行并返回下相应值。返回值可选</p><p>停止的仅仅是函数，并不是整个JavaScript</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">num</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;   <span class="comment">// 作为参数的变量为形参</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(num(<span class="number">8</span>,<span class="number">9</span>))   <span class="comment">// HTML文档中输出9，带入的参数为实参</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>全局变量与局部变量：</strong></p><ul><li>局部变量：函数内部声明（通过var）的变量，作用域是局部的只能在函数内部访问。一次各不同函数间可使用同名的局部变量。局部变量在函数运行后被删除；</li><li>全局变量：在函数外声明的变量，作用域是网页上的所有脚本与函数。在页面关闭后被删除；</li><li>非严格模式下给为声明变量赋值创建的全局变量，是全局对象的可配置属性，可删除</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;   <span class="comment">//不可配置全局属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> b =<span class="number">2</span>;  <span class="comment">//局部变量</span></span><br><span class="line">&#125;</span><br><span class="line">c  = <span class="number">3</span>;   <span class="comment">//可配置全局属性，可删除</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> a;  <span class="comment">//无法删除</span></span><br><span class="line"><span class="keyword">delete</span> c;  <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>实现全选与取消全选：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    电影：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    电视：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    音乐：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    手机：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;checkAll()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;checkNull()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> cbList = <span class="built_in">document</span>.getElementsByName(<span class="string">&quot;checkbox&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">checkAll</span>(<span class="params">cb</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (cbList != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cbList.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                cbList[i].checked = <span class="string">&quot;checked&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">checkNull</span>(<span class="params">cb</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (cbList != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cbList.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                cbList[i].checked = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    电影：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    电视：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    音乐：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    手机：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkAll(this)&quot;</span> <span class="attr">value</span>=<span class="string">&quot;全选&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> checkd = <span class="literal">false</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">checkAll</span>(<span class="params">element</span>) </span>&#123;</span></span><br><span class="line">        checkd = !checkd;</span><br><span class="line"><span class="javascript">        element.value = checkd ? <span class="string">&quot;全不选&quot;</span> : <span class="string">&quot;全选&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> ckList = <span class="built_in">document</span>.getElementsByName(<span class="string">&quot;checkbox&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> ckList) &#123;</span></span><br><span class="line">            ckList[i].checked = checkd;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>函数定义：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span>sd<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test()&quot;</span>&gt;</span>点击test<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test1&quot;</span>&gt;</span>sd<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test1()&quot;</span>&gt;</span>点击test1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test2&quot;</span>&gt;</span>sd<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test2()&quot;</span>&gt;</span>点击test2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test3&quot;</span>&gt;</span>sd<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test3(this)&quot;</span>&gt;</span>点击test3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//传统定义函数方式</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>).innerHTML = <span class="string">&quot;订单&quot;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> test1 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;test1&quot;</span>).innerHTML = <span class="string">&quot;哈哈哈哈&quot;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">//使用箭头函数定义函数时可以省略function关键字</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> test2 = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;test2&quot;</span>).innerHTML = <span class="string">&quot;来浏览&quot;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="comment">//当函数只有一个参数是可以简写为</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> test3 = <span class="function"><span class="params">element</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;test3&quot;</span>).innerHTML = <span class="string">&quot;来dd浏览&quot;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript事件"><a href="#JavaScript事件" class="headerlink" title="JavaScript事件"></a>JavaScript事件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;some-HTML-element some-event=<span class="string">&quot;JavaScript 代码&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//eg</span></span><br><span class="line">&lt;button onclick=&quot;this.innerHTML=Date()&quot;&gt;&lt;/button&gt;;  //不推荐</span><br><span class="line">&lt;button onclick=<span class="string">&quot;test()&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><p><strong>常见的HTML事件：</strong></p><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>onchange</td><td>HTML元素改变</td></tr><tr><td>onclick</td><td>用户点击HTML元素时</td></tr><tr><td>onmouseover</td><td>用户在一个HTML元素上移动鼠标</td></tr><tr><td>onmouseout</td><td>用户在一个HTML元素上移开鼠标</td></tr><tr><td>onkeydown</td><td>用户按下按键</td></tr><tr><td>onload</td><td>浏览器已完成页面的加载</td></tr></tbody></table><p><a href="https://www.runoob.com/jsref/dom-obj-event.html">更多DOM事件</a></p><p><strong>事件句柄：</strong></p><ul><li>在为元素添加或删除事件句柄时，不可将event参数设置为onclick，而应该是click</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加事件句柄原型</span></span><br><span class="line"><span class="comment">//element.addEventListener(event, function, [useCapture])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除句柄原型</span></span><br><span class="line"><span class="comment">//element.removeEventListener(event, function, [useCapture])</span></span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;input id=<span class="string">&quot;test&quot;</span> type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;提交&quot;</span> /&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;button&quot;</span> id=<span class="string">&quot;test&quot;</span> value=<span class="string">&quot;提交&quot;</span> /&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> test = <span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">test.addEventListener(<span class="string">&quot;mouseout&quot;</span>,myfun2);</span><br><span class="line">test.addEventListener(<span class="string">&quot;mouseout&quot;</span>,myfun1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myfun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;你好1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myfun2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;你好2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="JavaScript字符串"><a href="#JavaScript字符串" class="headerlink" title="JavaScript字符串"></a>JavaScript字符串</h2><p>主要看一下字符串的属性与方法</p><p><strong>字符串属性：</strong></p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>constructor</td><td>返回创建字符串属性的函数</td></tr><tr><td>length</td><td>返回字符串长度</td></tr><tr><td>prototype</td><td>允许向对象添加属性和方法</td></tr></tbody></table><p><strong>字符串方法</strong></p><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">charAt()</td><td align="left">返回指定索引位置的字符</td></tr><tr><td align="left">charCodeAt()</td><td align="left">返回指定索引位置字符的 Unicode 值</td></tr><tr><td align="left">concat()</td><td align="left">连接两个或多个字符串，返回连接后的字符串</td></tr><tr><td align="left">fromCharCode()</td><td align="left">将 Unicode 转换为字符串</td></tr><tr><td align="left">indexOf()</td><td align="left">返回字符串中检索指定字符第一次出现的位置</td></tr><tr><td align="left">lastIndexOf()</td><td align="left">返回字符串中检索指定字符最后一次出现的位置</td></tr><tr><td align="left">localeCompare()</td><td align="left">用本地特定的顺序来比较两个字符串</td></tr><tr><td align="left">match()</td><td align="left">找到一个或多个正则表达式的匹配</td></tr><tr><td align="left">replace()</td><td align="left">替换与正则表达式匹配的子串</td></tr><tr><td align="left">search()</td><td align="left">检索与正则表达式相匹配的值</td></tr><tr><td align="left">slice()</td><td align="left">提取字符串的片断，并在新的字符串中返回被提取的部分</td></tr><tr><td align="left">split()</td><td align="left">把字符串分割为子字符串数组</td></tr><tr><td align="left">substr()</td><td align="left">从起始索引号提取字符串中指定数目的字符</td></tr><tr><td align="left">substring()</td><td align="left">提取字符串中两个指定的索引号之间的字符</td></tr><tr><td align="left">toLocaleLowerCase()</td><td align="left">根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td align="left">toLocaleUpperCase()</td><td align="left">根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td align="left">toLowerCase()</td><td align="left">把字符串转换为小写</td></tr><tr><td align="left">toString()</td><td align="left">返回字符串对象值</td></tr><tr><td align="left">toUpperCase()</td><td align="left">把字符串转换为大写</td></tr><tr><td align="left">trim()</td><td align="left">移除字符串首尾空白</td></tr><tr><td align="left">valueOf()</td><td align="left">返回某个字符串对象的原始值</td></tr></tbody></table><p>更多方法实例可以参见：<a href="https://www.runoob.com/jsref/jsref-obj-string.html">JavaScript String 对象</a>。</p><ul><li><p>在JS中 ==  与 === 不同</p><p>1、对于 string、number 等基础类型，== 和 === 是有区别的</p><ul><li>a）不同类型间比较，== 之比较 “转化成同一类型后的值” 看 “值” 是否相等，=== 如果类型不同，其结果就是不等。</li><li>b）同类型比较，直接进行 “值” 比较，两者结果一样。</li></ul><p>2、对于 Array,Object 等高级类型，== 和 === 是没有区别的</p><p>进行 “指针地址” 比较</p><p>3、基础类型与高级类型，== 和 === 是有区别的</p><ul><li>a）对于 ==，将高级转化为基础类型，进行 “值” 比较</li><li>b）因为类型不同，=== 结果为 false</li></ul><p>4、!= 为 == 的非运算，!== 为 === 的非运算</p></li></ul><h2 id="JavaScript比较"><a href="#JavaScript比较" class="headerlink" title="JavaScript比较"></a>JavaScript比较</h2><p>三目运算符（条件运算符）</p><p>语法： <em>variablename</em>=(<em>condition</em>)?<em>value1</em>:<em>value2</em> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">90</span>;</span><br><span class="line"><span class="keyword">var</span> result = age&gt;<span class="number">18</span>?<span class="string">&quot;成年&quot;</span>:<span class="string">&quot;未成年&quot;</span></span><br></pre></td></tr></table></figure><p> <strong>JavaScript多元运算符</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function test(p)&#123;</span><br><span class="line">    var a&#x3D;5,b&#x3D;12;</span><br><span class="line">    return p&gt;1?p&lt;b?p&gt;b:p&#x3D;6:p&#x3D;3; &#x2F;&#x2F; 这一行中出现了多个问号和冒号，看起来很乱怎么办呢</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.write(test(9));</span><br></pre></td></tr></table></figure><p>其实很简单，寻找到多元运算符的头 <strong>?</strong> 和尾 <strong>:</strong> 就好办多了</p><p>就成了这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p&gt;1?p&lt;b?p&gt;b:p&#x3D;6:p&#x3D;3</span><br><span class="line"></span><br><span class="line">p&gt;1? 整体 :p&#x3D;3</span><br></pre></td></tr></table></figure><p>1、当 p&gt;1 时返回 p&lt;b?p&gt;b:p=6</p><ul><li>1.1、当 p&lt;b 时返回 p&gt;b</li><li>1.2、当 p&gt;=b 时返回 p=6</li></ul><p>2、当 p&lt;=1 是返回 p=3 所以先执行 1</p><p>3、实例中当 p＝9 的时候，返回 p&lt;b?p&gt;b:p=6 接着执行 1.1，当 p＝9&lt;12 时，返回 p&gt;b，即 9&gt;12，条件不成立所以最终结果为 false。</p><p><strong>三元表达式扩展</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var a&#x3D;6;</span><br><span class="line">1&#x3D;&#x3D;a?console.log(&quot;a是1&quot;):2&#x3D;&#x3D;a?console.log(&quot;a是2&quot;):3&#x3D;&#x3D;a?console.log(&quot;a是3&quot;):console.log(&quot;a不是1,2,3&quot;);</span><br></pre></td></tr></table></figure><p>形如以上表达式，找到第一个与第二个问号之间的冒号，将其分开：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&#x3D;&#x3D;a?console.log(&#39;a是1&#39;)</span><br><span class="line">2&#x3D;&#x3D;a?console.log(&quot;a是2&quot;):3&#x3D;&#x3D;a?console.log(&quot;a是3&quot;):console.log(&quot;a不是1,2,3&quot;);</span><br></pre></td></tr></table></figure><p>此时判断上半部分 a 不为 1 进行下半部分判断：</p><p>再将其分开：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2&#x3D;&#x3D;a?console.log(&quot;a是2&quot;)</span><br><span class="line">3&#x3D;&#x3D;a?console.log(&quot;a是3&quot;):console.log(&quot;a不是1,2,3&quot;);</span><br></pre></td></tr></table></figure><p>此时判断上半部分 a 不为 2 进行下半部分判断。</p><p>此时判断下半部分 a 不为 3 输出 <strong>“不为1,2,3”</strong>。</p><h2 id="JavaScript条件语句"><a href="#JavaScript条件语句" class="headerlink" title="JavaScript条件语句"></a>JavaScript条件语句</h2><ul><li>**if语句 **只有当指定条件为 true 时，使用该语句来执行代码</li><li>**if…else语句 **当条件为 true 时执行代码，当条件为 false 时执行其他代码</li><li>**if…else if …else语句 **使用该语句来选择多个代码块之一来执行</li><li>**switch语句 **使用该语句来选择多个代码块之一来执行</li></ul><h2 id="JavaScript-switch语句"><a href="#JavaScript-switch语句" class="headerlink" title="JavaScript switch语句"></a>JavaScript switch语句</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(n)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        执行代码块 <span class="number">1</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        执行代码块 <span class="number">2</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        与 <span class="keyword">case</span> <span class="number">1</span> 和 <span class="keyword">case</span> <span class="number">2</span> 不同时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>default 关键词来规定匹配不存在时做的事情：</li><li>switch中的case判断是 === 判断</li></ul><h2 id="JavaScript-for循环"><a href="#JavaScript-for循环" class="headerlink" title="JavaScript for循环"></a>JavaScript for循环</h2><ul><li><strong>for</strong> - 循环代码块一定的次数 ，遍历字符串、数组</li><li><strong>for/in</strong> - 循环遍历对象的属性， 遍历对象</li><li><strong>while</strong> - 当指定的条件为 true 时循环指定的代码块</li><li><strong>do/while</strong> - 同样当指定的条件为 true 时循环指定的代码块</li></ul><ol><li>for/in循环，遍历</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//遍历循环对象</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">name</span>:<span class="string">&quot;Peter&quot;</span>,<span class="attr">age</span>:<span class="string">&quot;25&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> a <span class="keyword">in</span> person)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(person[a]+<span class="string">&quot;&lt;br&gt;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历循环数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> b <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(arr[b])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/js/js-loop-for.html">参考for/of循环</a></p><p><strong>for…of</strong> 是 ES6 新引入的特性。它既比传统的for循环简洁，同时弥补了forEach和for-in循环的短板。</p><h2 id="JavaScript-while-循环"><a href="#JavaScript-while-循环" class="headerlink" title="JavaScript while 循环"></a>JavaScript while 循环</h2><ul><li>while</li><li>do/while</li></ul><p>do…while至少执行一次</p><h2 id="JavaScript-break-和-continue-语句"><a href="#JavaScript-break-和-continue-语句" class="headerlink" title="JavaScript break 和 continue 语句"></a>JavaScript break 和 continue 语句</h2><blockquote><p>break是跳出循环；</p><p>continue是跳出循环中的一次迭代（简单就例如一个语句循环6此，但有一个不满足时跳出该次循环）</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (i==<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x=x + <span class="string">&quot;The number is &quot;</span> + i + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(x);</span><br></pre></td></tr></table></figure><ul><li>break：当 i!=3 时，跳出，for循环，输出结果只有0，1，2</li><li>continue：当 i!=3 时，跳出本次，进入下一次循环，结果0，1，2，4，5，6，7，8，9</li></ul><h2 id="JavaScript-typeof-null-undefined"><a href="#JavaScript-typeof-null-undefined" class="headerlink" title="JavaScript typeof   null   undefined"></a>JavaScript typeof   null   undefined</h2><ol><li><p>typeof操作符</p><p>用于检测变量的数据类型</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="string">&quot;John&quot;</span>                <span class="comment">// 返回 string</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">3.14</span>                  <span class="comment">// 返回 number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">false</span>                 <span class="comment">// 返回 boolean</span></span><br><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]             <span class="comment">// 返回 object</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;<span class="attr">name</span>:<span class="string">&#x27;John&#x27;</span>, <span class="attr">age</span>:<span class="number">34</span>&#125; <span class="comment">// 返回 object</span></span><br></pre></td></tr></table></figure><ol start="2"><li>undefined 和 null</li></ol><p>null 和 undefined 的值相等，但类型不等：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span>       <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span>         <span class="comment">// object</span></span><br><span class="line"><span class="literal">null</span> === <span class="literal">undefined</span>      <span class="comment">// false</span></span><br><span class="line"><span class="literal">null</span> == <span class="literal">undefined</span>      <span class="comment">// true</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = <span class="literal">null</span>;  <span class="comment">//值为null（空），类型为对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person = <span class="literal">undefined</span>;  <span class="comment">//值为undefined，类型为undefined。任何变量都可以通过设置值为undefined清空</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript类型转换"><a href="#JavaScript类型转换" class="headerlink" title="JavaScript类型转换"></a>JavaScript类型转换</h2><ul><li>数据类型：string    number    boolean    symbol    object    function</li><li>对象类型：Object    Date    Array</li><li>不含值的数据类型：null    undefined</li></ul><p>请注意：</p><ul><li>NaN 的数据类型是 number</li><li>数组(Array)的数据类型是 object</li><li>日期(Date)的数据类型为 object</li><li>null 的数据类型是 object</li><li>未定义变量的数据类型为 undefined</li></ul><ol><li><strong>constructor属性</strong></li></ol><p>返回变量的构造函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkArray</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr.constructor().toString().indexOf(<span class="string">&quot;Array&quot;</span>) &gt; -<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;它是数组&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;它不是数组&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/js/js-type-conversion.html">类型转换更多</a></p><h2 id="JavaScript正则表达式"><a href="#JavaScript正则表达式" class="headerlink" title="JavaScript正则表达式"></a>JavaScript正则表达式</h2><ol><li> 什么是正则表达式？</li></ol><p>正则表达式是由一个字符序列形成的搜索模式。</p><p>当你在文本中搜索数据时，你可以用搜索模式来描述你要查询的内容。</p><p>正则表达式可以是一个简单的字符，或一个更复杂的模式。</p><p>正则表达式可用于所有文本搜索和文本替换的操作。</p><ol start="2"><li>语法</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;正则表达式主体&#x2F;修饰符(可选)</span><br></pre></td></tr></table></figure><p>其中修饰符是可选的。</p><p>例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">str.search(<span class="regexp">/ello/i</span>)</span><br></pre></td></tr></table></figure><h2 id="正则表达式修饰符"><a href="#正则表达式修饰符" class="headerlink" title="正则表达式修饰符"></a>正则表达式修饰符</h2><p><strong>修饰符</strong> 可以在全局搜索中不区分大小写:</p><table><thead><tr><th align="left">修饰符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">i</td><td align="left">执行对大小写不敏感的匹配。</td></tr><tr><td align="left">g</td><td align="left">执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。</td></tr><tr><td align="left">m</td><td align="left">执行多行匹配。</td></tr></tbody></table><hr><h2 id="正则表达式模式"><a href="#正则表达式模式" class="headerlink" title="正则表达式模式"></a>正则表达式模式</h2><p>方括号用于查找某个范围内的字符：</p><table><thead><tr><th align="left">表达式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">[abc]</td><td align="left">查找方括号之间的任何字符。</td></tr><tr><td align="left">[0-9]</td><td align="left">查找任何从 0 至 9 的数字。</td></tr><tr><td align="left">(x|y)</td><td align="left">查找任何以 | 分隔的选项。</td></tr></tbody></table><p>元字符是拥有特殊含义的字符：</p><table><thead><tr><th align="left">元字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\d</td><td align="left">查找数字。</td></tr><tr><td align="left">\s</td><td align="left">查找空白字符。</td></tr><tr><td align="left">\b</td><td align="left">匹配单词边界。</td></tr><tr><td align="left">\uxxxx</td><td align="left">查找以十六进制数 xxxx 规定的 Unicode 字符。</td></tr></tbody></table><p>量词:</p><table><thead><tr><th align="left">量词</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">n+</td><td align="left">匹配任何包含至少一个 <em>n</em> 的字符串。</td></tr><tr><td align="left">n*</td><td align="left">匹配任何包含零个或多个 <em>n</em> 的字符串。</td></tr><tr><td align="left">n?</td><td align="left">匹配任何包含零个或一个 <em>n</em> 的字符串。</td></tr></tbody></table><ol start="3"><li>RegExp对象使用（它时一个预定义属性和方法的正则表达式对象）</li></ol><p><strong>完整的 RegExp 参考手册</strong></p><p>完整的 RegExp 对象参考手册，请参考我们的 <a href="https://www.runoob.com/jsref/jsref-obj-regexp.html">JavaScript RegExp 参考手册</a>。</p><p>该参考手册包含了所有 RegExp 对象的方法和属性。</p><h2 id="JavaScript错误-throw-try-catch"><a href="#JavaScript错误-throw-try-catch" class="headerlink" title="JavaScript错误  throw   try   catch"></a>JavaScript错误  throw   try   catch</h2><p><a href="https://www.runoob.com/js/js-errors.html">https://www.runoob.com/js/js-errors.html</a></p><p><strong>try</strong> 语句测试代码块的错误。</p><p><strong>catch</strong> 语句处理错误。</p><p><strong>throw</strong> 语句创建自定义错误。</p><p><strong>finally</strong> 语句在 try 和 catch 语句之后，无论是否有触发异常，该语句都会执行。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript 语句 try 和 catch 是成对出现的。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//语法</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    ...    <span class="comment">//异常的抛出</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">    ...    <span class="comment">//异常的捕获与处理</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    ...    <span class="comment">//结束处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> message, x;</span><br><span class="line">  message = <span class="built_in">document</span>.getElementById(<span class="string">&quot;p01&quot;</span>);</span><br><span class="line">  message.innerHTML = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  x = <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).value;</span><br><span class="line">  <span class="keyword">try</span> &#123; </span><br><span class="line">    <span class="keyword">if</span>(x == <span class="string">&quot;&quot;</span>) <span class="keyword">throw</span> <span class="string">&quot;值是空的&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isNaN</span>(x)) <span class="keyword">throw</span> <span class="string">&quot;值不是一个数字&quot;</span>;</span><br><span class="line">    x = <span class="built_in">Number</span>(x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">10</span>) <span class="keyword">throw</span> <span class="string">&quot;太大&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">5</span>) <span class="keyword">throw</span> <span class="string">&quot;太小&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">    message.innerHTML = <span class="string">&quot;错误: &quot;</span> + err + <span class="string">&quot;.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JavaScript调试"><a href="#JavaScript调试" class="headerlink" title="JavaScript调试"></a>JavaScript调试</h2><p>代码调试就是在程序代码中寻找错误的过程</p><ol><li>console.log()控制台打印输出；</li><li>在工具中打断点；</li><li>在js代码中添加<code>debugger</code></li></ol><p><strong>debugger 关键字</strong></p><p><strong>debugger</strong> 关键字用于停止执行 JavaScript，并调用调试函数。</p><p>这个关键字与在调试工具中设置断点的效果是一样的。</p><p>如果没有调试可用，debugger 语句将无法工作。</p><h2 id="JavaScript变量提升"><a href="#JavaScript变量提升" class="headerlink" title="JavaScript变量提升"></a>JavaScript变量提升</h2><p>​        原则上变量应该先声明后使用，但是程序员小白常常忘记声明就使用了变量，这样做js代码在执行的时候不报错，只是返回了一个undefined。这种情况就是变量提升。</p><pre><code>   计算机执行的时候会把未声明就使用的变量隐式的放到代码的最顶端。需要注意的是变量虽然发生了提升，但是给变量赋的值是不会随之提升的，所以就会得到结果undefined。</code></pre><p>什么是函数提升？</p><p>​        与变量提升的意思差不多，先使用函数，后再声明函数，这种违背逻辑的事情在JavaScript中是允许的，这门语言就是这么灵活。</p><p>​        与变量提升不同的是，函数的返回值也会随之提升，所以你会发现在<script>标签中的任何地方都能调用函数并且使用函数的返回值。</p><ul><li><p>需要注意的是初始化不会提升eg<code>var x = 7</code></p></li><li><p>变量提升就是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x= <span class="number">5</span></span><br><span class="line"><span class="built_in">document</span>.write(x)</span><br><span class="line"><span class="keyword">var</span> x</span><br><span class="line"><span class="comment">//也就是变量可以先使用再声明</span></span><br></pre></td></tr></table></figure></li><li><p>遇到 script 标签的话 js 就进行预解析，将变量 var 和 function 声明提升，但不会执行 function，然后就进入上下文执行，上下文执行还是执行预解析同样操作，直到没有 var 和 function，就开始执行上下文。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;5;</span><br><span class="line">show();</span><br><span class="line">var a;</span><br><span class="line">function show()&#123;&#125;;</span><br></pre></td></tr></table></figure><p>预解析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function show()&#123;&#125;;</span><br><span class="line">var a;</span><br><span class="line">a&#x3D;5;</span><br><span class="line">show();</span><br></pre></td></tr></table></figure><p>需要注意都是函数声明提升直接把整个函数提到执行环境的最顶端</p><h2 id="JavaScript严格模式（use-strict）"><a href="#JavaScript严格模式（use-strict）" class="headerlink" title="JavaScript严格模式（use strict）"></a>JavaScript严格模式（use strict）</h2><blockquote><p>严格模式通过在脚本或函数的头部添加 <strong>use strict</strong>; 表达式来声明。</p><p><a href="https://www.runoob.com/js/js-strict.html">https://www.runoob.com/js/js-strict.html</a></p></blockquote><p><strong>为什么使用严格模式:</strong></p><ul><li><p>消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;</p></li><li><p>消除代码运行的一些不安全之处，保证代码运行的安全；</p></li><li><p>提高编译器效率，增加运行速度；</p></li><li><p>为未来新版本的Javascript做好铺垫。</p></li></ul><p>“严格模式”体现了Javascript更合理、更安全、更严谨的发展方向，包括IE 10在内的主流浏览器，都已经支持它，许多大项目已经开始全面拥抱它。</p><p>另一方面，同样的代码，在”严格模式”中，可能会有不一样的运行结果；一些在”正常模式”下可以运行的语句，在”严格模式”下将不能运行。掌握这些内容，有助于更细致深入地理解Javascript，让你变成一个更好的程序员。</p><ul><li><p>严格模式中的限制：</p><ul><li>不允许使用未声明的变量</li><li>不允许删除变量或对象</li><li>不允许删除函数</li><li>不允许变量重名</li><li>不允许使用八进制</li><li>不允许使用转义符</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> x = \<span class="number">010</span>;            <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>不允许对只读属性赋值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj, <span class="string">&quot;x&quot;</span>, &#123;<span class="attr">value</span>:<span class="number">0</span>, <span class="attr">writable</span>:<span class="literal">false</span>&#125;);</span><br><span class="line"></span><br><span class="line">obj.x = <span class="number">3.14</span>;            <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>不允许对一个使用getter方法读取的属性进行赋值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="keyword">get</span> <span class="title">x</span>() &#123;<span class="keyword">return</span> <span class="number">0</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line">obj.x = <span class="number">3.14</span>;            <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>不允许删除一个不允许删除的属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="built_in">Object</span>.prototype; <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>变量名不能使用“eval”字符串</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="built_in">eval</span> = <span class="number">3.14</span>;         <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>变量名不能使用“arguments”字符串</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="built_in">arguments</span> = <span class="number">3.14</span>;    <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>不允许使用下述语句</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">with</span> (<span class="built_in">Math</span>)&#123;x = cos(<span class="number">2</span>)&#125;; <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>由于安全原因再作用域“eval（）”中创建的变量不能被调用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="built_in">eval</span> (<span class="string">&quot;var x = 2&quot;</span>);</span><br><span class="line">alert (x);               <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>禁止this关键字指向全局对象，使用必先new</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="built_in">this</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 返回false，因为&quot;this&quot;指向全局对象，&quot;!this&quot;就是false</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line"><span class="meta">    &quot;use strict&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> !<span class="built_in">this</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 返回true，因为严格模式下，this的值为undefined，所以&quot;!this&quot;为true。</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="JavaScript使用误区"><a href="#JavaScript使用误区" class="headerlink" title="JavaScript使用误区"></a>JavaScript使用误区</h2><p><a href="https://www.runoob.com/js/js-mistakes.html">https://www.runoob.com/js/js-mistakes.html</a></p><ol><li>赋值运算符应用错误 =    ==</li><li>比较运算符常见错误  ==   ===</li><li>加法与连接注意事项</li><li>浮点型数据使用注意</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">0.1</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="number">0.2</span>;</span><br><span class="line"><span class="keyword">var</span> z = x + y            <span class="comment">// z 的结果为 0.30000000000000004</span></span><br><span class="line"><span class="keyword">if</span> (z == <span class="number">0.3</span>)            <span class="comment">// 返回 false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//为解决以上问题，可以用整数的乘除法来解决：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">var</span> z = (x * <span class="number">10</span> + y * <span class="number">10</span>) / <span class="number">10</span>;       <span class="comment">// z 的结果为 0.3</span></span><br></pre></td></tr></table></figure><ol start="5"><li><p>JavaScript字符串分行</p></li><li><p>分号的使用</p></li><li><p>return语句注意事项</p></li><li><p>数组中使用名字来索引</p><p>①许多程序语言都允许使用名字来作为数组的索引。</p><p>​    <strong>使用名字来作为索引的数组称为关联数组(或哈希)。</strong></p><p>​    JavaScript 不支持使用名字来索引数组，只允许使用数字索引</p></li><li><p>定义数组元素、对象。最后不可由逗号</p></li><li><p>Undefined不是Null</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在 JavaScript 中, null 用于对象, undefined 用于变量，属性和方法。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对象只有被定义才有可能为 null，否则为 undefined。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果我们想测试对象是否存在，在对象还没定义时将会抛出一个错误。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//错误的使用方式：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (myObj !== <span class="literal">null</span> &amp;&amp; <span class="keyword">typeof</span> myObj !== <span class="string">&quot;undefined&quot;</span>) </span><br><span class="line"><span class="comment">//正确的方式是我们需要先使用 typeof 来检测对象是否已定义：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> myObj !== <span class="string">&quot;undefined&quot;</span> &amp;&amp; myObj !== <span class="literal">null</span>) </span><br></pre></td></tr></table></figure><ol start="11"><li>程序块作用域</li></ol><h2 id="JavaScript表单验证"><a href="#JavaScript表单验证" class="headerlink" title="JavaScript表单验证"></a>JavaScript表单验证</h2><p><a href="https://www.runoob.com/js/js-validation.html">https://www.runoob.com/js/js-validation.html</a></p><h2 id="JavaScript-this关键字"><a href="#JavaScript-this关键字" class="headerlink" title="JavaScript this关键字"></a>JavaScript this关键字</h2><blockquote><p>this表示对当前对象的引用，在js中，它会随着执行环境的改变而改变</p></blockquote><ol><li>单独使用this，指向全局（Global）对象，window；</li><li>在对象方法中，指向调用其所在方法的对象；</li><li>在函数中，指向函数的所属者；</li><li>在严格模式下，函数是没有绑定到this的，此时的this是 undefined；</li><li>在HTML事件句柄中，this指向接收事件的HTML元素；</li><li>使用call() 和apply() 可以切换函数执行的上下文环境，即this绑定的对象；</li></ol><h2 id="JavaScript-let和const"><a href="#JavaScript-let和const" class="headerlink" title="JavaScript let和const"></a>JavaScript let和const</h2><ol><li>使用var声明的全局作用域变量属于window对象</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>  a = <span class="number">34</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.a)   <span class="comment">//输出34</span></span><br></pre></td></tr></table></figure><ol start="2"><li>let声明的全局作用域变量不属于window对象，无法通过window.   调用</li><li>let声明的变量只在let命令所在的代码块内有效</li><li>console声明一个可读的常量，一旦声明常量值不可修改</li></ol><h2 id="JavaScript-JSON"><a href="#JavaScript-JSON" class="headerlink" title="JavaScript JSON"></a>JavaScript JSON</h2><ol><li>JSON.parse()    将json字符串转为javascript对象</li><li>JSON.stringify()   将JavaScript对象转为json字符串</li></ol><h2 id="JavaScript-void"><a href="#JavaScript-void" class="headerlink" title="JavaScript void"></a>JavaScript void</h2><blockquote><p>经常使用的就是<code>javascript:void(0)</code></p></blockquote><p>多用于在<a>标签中定义死链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阻止链接跳转 url不会发送变化 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void()&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;nofollow ugc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--阻止链接跳转，但是当前url会被改变，URL尾部多个‘#’   #多配合location.hash--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;nofollow ugc&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--阻止链接跳转，改变url，多一个“？”  多配合location.search--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;nofollow ugc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="HTML-DOM"><a href="#HTML-DOM" class="headerlink" title="HTML DOM"></a>HTML DOM</h1><h2 id="DOM-简介"><a href="#DOM-简介" class="headerlink" title="DOM 简介"></a>DOM 简介</h2><blockquote><p>在网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model）</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById()</span><br><span class="line"><span class="built_in">document</span>.getElementByName()</span><br><span class="line"><span class="built_in">document</span>.getElementByClassName()</span><br><span class="line"><span class="built_in">document</span>.getElementByTagName()   <span class="comment">//通过标签  eg p   a   div  </span></span><br></pre></td></tr></table></figure><h2 id="DOM-HTML"><a href="#DOM-HTML" class="headerlink" title="DOM HTML"></a>DOM HTML</h2><blockquote><p>HTML DOM允许JavaScript改变HTML元素的内容</p></blockquote><ol><li>改变HTML输出流</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="built_in">Date</span>())</span><br></pre></td></tr></table></figure><ol start="2"><li><p>改变HTML内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;id&quot;</span>).innerHTML = 新的HTML</span><br></pre></td></tr></table></figure></li><li><p>改变HTML属性</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;id&quot;</span>).attribute = 新属性值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//例子</span></span><br><span class="line">&lt;img src=<span class="string">&quot;smile.png&quot;</span> id=<span class="string">&quot;image&quot;</span> /&gt;</span><br><span class="line">&lt;button onclick=<span class="string">&quot;changeImg()&quot;</span>&gt;点击&lt;/button&gt;</span><br><span class="line">    </span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeImg</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;image&quot;</span>).src = <span class="string">&quot;change.png&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="DOM-CSS"><a href="#DOM-CSS" class="headerlink" title="DOM CSS"></a>DOM CSS</h2><ol><li>改变HTML样式</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(id).style.property &#x3D; 新样式</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;实例</span><br><span class="line">&lt;p id&#x3D;&quot;p1&quot;&gt;css改变&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p id&#x3D;&quot;p2&quot; onclick&#x3D;&quot;document.getElementById(&#39;p2&#39;).style.color&#x3D;&#39;red&#39;&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">document.getElementById(&quot;p1&quot;).style.color &#x3D; &quot;red&quot;;</span><br><span class="line">document.getElementById(&quot;p1&quot;).style.fontFamiley &#x3D; &quot;Arial&quot;;</span><br><span class="line">document.getElementById(&quot;p1&quot;).style.fontSize &#x3D; &quot;larger&quot;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="DOM-事件"><a href="#DOM-事件" class="headerlink" title="DOM 事件"></a>DOM 事件</h2><p>例子</p><table><thead><tr><th>用户点击鼠标时</th><th>onclick()</th></tr></thead><tbody><tr><td>网页已加载时</td><td>onload()</td></tr><tr><td>鼠标移动到元素上时</td><td>onmouseover()</td></tr><tr><td>输入字段被改变时</td><td>onchange()</td></tr><tr><td>当鼠标按下时</td><td>onmousedown()</td></tr></tbody></table><p><a href="https://www.runoob.com/js/js-htmldom-events.html">https://www.runoob.com/js/js-htmldom-events.html</a></p><p><a href="https://www.runoob.com/jsref/dom-obj-event.html">更多DOM事件</a></p><h2 id="HTML-DOM-EventListener"><a href="#HTML-DOM-EventListener" class="headerlink" title="HTML DOM EventListener"></a>HTML DOM EventListener</h2><blockquote><p>addEventListener()</p><p>removeEventListener()</p></blockquote><p>addEventListener() 语法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">element.addEventListener(event,<span class="function"><span class="keyword">function</span>,<span class="title">useCapture</span>)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//event: 事件的类型 click mousedown</span></span><br><span class="line"><span class="comment">//function： 事件触发后调用的函数</span></span><br><span class="line"><span class="comment">//useCapture： 布尔值 描述事件是冒泡还是捕获，此参数可选</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;button id=<span class="string">&quot;bt1&quot;</span>&gt;点击&lt;/button&gt;</span><br><span class="line">&lt;p id=<span class="string">&quot;p1&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showAlert</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;显示&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showWord</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;p1&quot;</span>).innerHTML = <span class="string">&quot;显示&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;bt1&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>,showAlert);</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;bt1&quot;</span>).addEventListener(<span class="string">&quot;mouseover&quot;</span>,showAlert);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol><li>事件冒泡或事件捕获</li></ol><p>事件传递的方式：冒泡与捕获</p><p>事件传递定义了元素事件触发的顺序。 如果你将 <p> 元素插入到 <div> 元素中，用户点击 <p> 元素, 哪个元素的 “click” 事件先被触发呢？</p><p>在 <em>冒泡</em> 中，内部元素的事件会先被触发，然后再触发外部元素，即： <p> 元素的点击事件先触发，然后会触发 <div> 元素的点击事件。</p><p>在 <em>捕获</em> 中，外部元素的事件会先被触发，然后才会触发内部元素的事件，即： <div> 元素的点击事件先触发 ，然后再触发 <p> 元素的点击事件。</p><p>addEventListener() 方法可以指定 “useCapture” 参数来设置传递类型：</p><p>addEventListener(<em>event</em>, <em>function</em>, useCapture);</p><p>默认值为 false, 即冒泡传递，当值为 true 时, 事件使用捕获传递。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&quot;myDiv&quot;).addEventListener(&quot;click&quot;, myFunction, true);</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_usecapture">尝试一下 »</a></p><ol start="2"><li>removeEventListener()</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myDIV&quot;</span>&gt;</span> div 元素添加了 onmousemove 事件句柄，鼠标在桔红色的框内移动时会显示随机数。</span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>点击按钮移除 DIV 的事件句柄。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;removeHandler()&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myBtn&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;myDIV&quot;</span>).addEventListener(<span class="string">&quot;mousemove&quot;</span>, myFunction);</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = <span class="built_in">Math</span>.random();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">removeHandler</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;myDIV&quot;</span>).removeEventListener(<span class="string">&quot;mousemove&quot;</span>, myFunction);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HTML-DOM-元素（节点）"><a href="#HTML-DOM-元素（节点）" class="headerlink" title="HTML DOM 元素（节点）"></a>HTML DOM 元素（节点）</h2><blockquote><p>appendChild()</p><p>insertBefore()</p><p>removeChild()</p><p>replaceChild()</p></blockquote><ol><li><p>创建新的HTML元素（节点）-appendChild()</p><p>创建新的 HTML 元素 (节点)需要先创建一个元素，然后在已存在的元素中添加它。(添加到尾部)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>这是另外一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> para = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>);  <span class="comment">//创建&lt;p&gt; 元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> node = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;这是一个新的段落。&quot;</span>); <span class="comment">// 创建一个新的文本节点</span></span></span><br><span class="line"><span class="javascript">para.appendChild(node);  <span class="comment">//将文本节点添加到&lt;p&gt;元素中</span></span></span><br><span class="line"> </span><br><span class="line"><span class="javascript"><span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">&quot;div1&quot;</span>);   <span class="comment">//查找一个已存在的元素</span></span></span><br><span class="line"><span class="javascript">element.appendChild(para);  <span class="comment">//将para添加到已有元素中</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建新的HTML元素（节点）-insertBefore()</p><p>需要将新元素添加到开始位置，可以使用 <strong>insertBefore()</strong> 方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>这是另外一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> para = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> node = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;这是一个新的段落。&quot;</span>);</span></span><br><span class="line">para.appendChild(node);</span><br><span class="line"> </span><br><span class="line"><span class="javascript"><span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">&quot;div1&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> child = <span class="built_in">document</span>.getElementById(<span class="string">&quot;p1&quot;</span>);</span></span><br><span class="line"><span class="javascript">element.insertBefore(para, child);   <span class="comment">// 在element节点的子节点child前添加新节点para</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>移除已存在的元素-removeChild()</p><ul><li>如果要移除一个元素，必须<strong>先找到该元素的父元素</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//借用上面的一些代码</span></span><br><span class="line">element.removeChild(child)   <span class="comment">//删除节点element中的 子节点child</span></span><br></pre></td></tr></table></figure></li><li><p>替换HTML元素-replaceChild()</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>只是吨<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> p2 = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> text2 = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;标签所显示的内容&quot;</span>)</span></span><br><span class="line">p2.appendChild(text2)</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">&quot;div1&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oldP = <span class="built_in">document</span>.getElementById(p1)</span></span><br><span class="line"><span class="javascript">element.replaceChild(p2,oldP)   <span class="comment">//替换参数前为新   后为旧</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="HTML-DOM集合（Collection）"><a href="#HTML-DOM集合（Collection）" class="headerlink" title="HTML DOM集合（Collection）"></a>HTML DOM集合（Collection）</h2><blockquote><p>通过getElementByTagName()方法返回的是HTML Collection对象</p><p>HTML Collection的属性</p><table><thead><tr><th>属性/方法</th><th>描述</th></tr></thead><tbody><tr><td>item（）</td><td>返回HTML Collection中指定索引的元素</td></tr><tr><td>length（）</td><td>返回HTMLCOllection中元素的数量</td></tr><tr><td>namedItem（）</td><td>返回HTMLCollection中指定ID或Name属性的元素</td></tr></tbody></table></blockquote><ul><li>HTMLCollection不是数组！！  但是可以使用索引来获取元素</li></ul><h1 id="JavaScript高级教程"><a href="#JavaScript高级教程" class="headerlink" title="JavaScript高级教程"></a>JavaScript高级教程</h1><h2 id="Array（数据）-对象"><a href="#Array（数据）-对象" class="headerlink" title="Array（数据） 对象"></a>Array（数据） 对象</h2><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_concat">合并两个数组 - concat()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_concat2">合并三个数组 - concat()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_join">用数组的元素组成字符串 - join()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_pop">删除数组的最后一个元素 - pop()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_push">数组的末尾添加新的元素 - push()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_reverse">将一个数组中的元素的顺序反转排序 - reverse()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_shift">删除数组的第一个元素 - shift()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_slice_array">从一个数组中选择元素 - slice()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_sort">数组排序（按字母顺序升序）- sort()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_sort2">数字排序（按数字顺序升序）- sort()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_sort3">数字排序（按数字顺序降序）- sort()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_splice">在数组的第2位置添加一个元素 - splice()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_tostring_array">转换数组到字符串 -toString()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_unshift">在数组的开头添加新元素 - unshift()</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;JavaScript学习笔记&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;JavaScript教程&quot;&gt;&lt;a href=&quot;#JavaScript教程&quot; class=&quot;headerlink&quot; title=&quot;JavaScript教程&quot;&gt;&lt;/a&gt;JavaScript教</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>编程不良人-VUE+ElementUI+Vue Element Admin学习</title>
    <link href="http://example.com/2021/03/10/%E7%BC%96%E7%A8%8B%E4%B8%8D%E8%89%AF%E4%BA%BA-VUE-ElementUI-Vue-Element-Admin%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/03/10/%E7%BC%96%E7%A8%8B%E4%B8%8D%E8%89%AF%E4%BA%BA-VUE-ElementUI-Vue-Element-Admin%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-03-10T09:34:48.000Z</published>
    <updated>2021-03-25T02:13:24.709Z</updated>
    
    <content type="html"><![CDATA[<p><strong>编程不良人-VUE+ElementUI+Vue Element Admin学习</strong></p><h1 id="Vue基础"><a href="#Vue基础" class="headerlink" title="Vue基础"></a>Vue基础</h1><h2 id="Vue介绍"><a href="#Vue介绍" class="headerlink" title="Vue介绍"></a>Vue介绍</h2><p>​    vue是一个渐进式的js框架，只注重视图层，结合了HTML+CSS+JS，易用，且有很好的生态系统，且体积小，速度快，优化到位；</p><h2 id="MVVM–双向绑定模式"><a href="#MVVM–双向绑定模式" class="headerlink" title="MVVM–双向绑定模式"></a>MVVM–双向绑定模式</h2><ul><li>Model：模型层，在这里表示JavaScript对象</li><li>View：视图层，在这里表示DOM（HTML操作的元素)</li><li>ViewModel：连接视图和数据的中间件，Vue.js就是MVVM中的ViewModel层的实现</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214103.png" alt="image-20210111221659041"></p><p>扩：cdn:内容分发网络，是一种加速策略，能从离自己最近的服务器上快速获取外部资源；</p><ul><li>在MVVM架构中，是不允许数据和视图直接通信的，只能通过ViewModel来通信，而ViewModel就是定义了一个Observer观察者；</li><li>ViewModel能够观察数据的变化，并对视图对应的内容进行更新；</li><li>ViewModel能够监听到视图的变化，并能够通知数据发送改变；</li></ul><p>Vue.js就是一个MVVM实现者，核心是实现了DOM监听，和数据绑定</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214104.png" alt="image-20210111223829168"></p><p>组件化：</p><pre><code>1. 页面上每个独立的可交互的区域视为一个组件；2. 每个组件对应一个工程目录，组件所需的各种资源在这个目录下就近维护3. 页面只是组件的容器，组件可以嵌套自由组合（复用）形成完整的页面</code></pre><p>为什么又要使用Vue</p><pre><code>1. 轻量级2. 移动优先，更适合移动端3. 易上手，文档齐全，学习曲线平稳4. 吸取了regular（模块化）和react（虚拟DOM）的长处，也有自己的独特功能：eg计算属性5. 开源</code></pre><h2 id="快速起步"><a href="#快速起步" class="headerlink" title="快速起步"></a>快速起步</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="comment">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;head&gt;</span></span><br><span class="line"><span class="comment">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;title&gt;Title&lt;/title&gt;</span></span><br><span class="line"><span class="comment">&lt;/head&gt;</span></span><br><span class="line"><span class="comment">&lt;body&gt;</span></span><br><span class="line"><span class="comment">    &lt;div id=&quot;app&quot;&gt;</span></span><br><span class="line"><span class="comment">        &#123;&#123;name&#125;&#125;,&#123;&#123;age&#125;&#125;岁</span></span><br><span class="line"><span class="comment">    &lt;/div&gt;</span></span><br><span class="line"><span class="comment">&lt;/body&gt;</span></span><br><span class="line"><span class="comment">&lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script&gt;</span></span><br><span class="line"><span class="comment">    new Vue(&#123;</span></span><br><span class="line"><span class="comment">        el: &#x27;#app&#x27;,    //element</span></span><br><span class="line"><span class="comment">        data: &#123;</span></span><br><span class="line"><span class="comment">            name: &#x27;Hmou&#x27;,</span></span><br><span class="line"><span class="comment">            age: 200</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;)   //json格式对象，大括号包裹，里面存放键值对，在js中键可以无引号，多个键用‘，’分割</span></span><br><span class="line"><span class="comment">&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;/html&gt;--&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>html中被vue绑定的元素中，通过插值表达式来获取vue对象中的数据</p></li><li><p>页面中使用vue，存在两部分</p><ol><li><p>html：<div id="app"></div></p></li><li><script>中创建Vue对象 new Vue({})</li></ol></li></ul><h2 id="插值表达式"><a href="#插值表达式" class="headerlink" title="插值表达式"></a>插值表达式</h2><pre><code>1. 插值表达式就是用在html中被绑定的元素中，目的是通过插值表达式来获取Vue对象中的属性和方法2. 语法 &#123;&#123;vue的内容&#125;，插值表达式不能卸载html的标签中，不能作为属性的值的部分&#125;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214105.png" alt="image-20210112114023741"></p><h2 id="Vue关键字"><a href="#Vue关键字" class="headerlink" title="Vue关键字"></a>Vue关键字</h2><blockquote><p>关键字作为html页面标签中的属性使用</p></blockquote><h3 id="v-model双向数据绑定"><a href="#v-model双向数据绑定" class="headerlink" title="v-model双向数据绑定"></a>v-model双向数据绑定</h3><ul><li>将标签的value值和vue实例中的data值进行绑定</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-model双向数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        Learn=====&gt; &#123;&#123;name&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            name: <span class="string">&quot;java&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-on事件绑定"><a href="#v-on事件绑定" class="headerlink" title="v-on事件绑定"></a>v-on事件绑定</h3><ul><li>通过配合具体的事件名，来绑定vue中定义的函数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;head&gt;</span></span><br><span class="line"><span class="comment">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;title&gt;v-on事件绑定&lt;/title&gt;</span></span><br><span class="line"><span class="comment">&lt;/head&gt;</span></span><br><span class="line"><span class="comment">&lt;body&gt;</span></span><br><span class="line"><span class="comment">&lt;div id=&quot;app&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;input type=&quot;text&quot; v-on:input=&quot;importConsole&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;/div&gt;</span></span><br><span class="line"><span class="comment">&lt;/body&gt;</span></span><br><span class="line"><span class="comment">&lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script&gt;</span></span><br><span class="line"><span class="comment">    new Vue(&#123;</span></span><br><span class="line"><span class="comment">        el: &quot;#app&quot;,</span></span><br><span class="line"><span class="comment">        data: &#123;</span></span><br><span class="line"><span class="comment">            name: &quot;java&quot;</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        methods: &#123;</span></span><br><span class="line"><span class="comment">            importConsole:function ()&#123;</span></span><br><span class="line"><span class="comment">                console.log(&quot;success&quot;)</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;)</span></span><br><span class="line"><span class="comment">&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;/html&gt; --&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>此处，事件是input，响应行为是importConsole。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214106.png" alt="image-20210112125634066"></p><p>补充： </p><pre><code>1. 简写：v-on:input   =========&gt;    @input2. event.target.value:例如在响应函数中，可以指明使用event内置的参数对象。该对象表示当前事件，可以通过event.target.value来获得当前事件对象的value值3. this用法：this表示当前vue对象      “new Vue()”，可通过this.    来调用当前vue对象的属性和方法。`如果在method里想要使用当前vue对象中的data里的内容，必须使用this`</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-on事件绑定 补充<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;importConsole&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &#123;&#123;name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            name: <span class="string">&quot;java&quot;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            importConsole:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.name = event.target.value;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>event.target.value == 当前事件的对象（input元素）的value值</li></ul><h3 id="v-bind属性绑定"><a href="#v-bind属性绑定" class="headerlink" title="v-bind属性绑定"></a>v-bind属性绑定</h3><ul><li>使用v-bind进行属性绑定，使html元素中的属性获得vue对象中的内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-bind属性绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>访问百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            url: <span class="string">&quot;https://www.baidu.com/&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>简写<ul><li><a v-bind:href="url">访问百度 等价于 <a :href="url">访问百度</li></ul></li></ul><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><ul><li>此时该标签中的插值表达式只获取一次数据。之后的数据变化不影响此插值表达式的值。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span></span><br><span class="line">            &#123;&#123;name&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue (&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            name: <span class="string">&quot;java&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-html和v-text"><a href="#v-html和v-text" class="headerlink" title="v-html和v-text"></a>v-html和v-text</h3><blockquote><ol><li>v-html会将vue中的属性作为html元素使用；</li><li>v-text会将vue中的属性的值只作为纯文本来使用；</li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-html和v-text<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;url&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">&quot;url&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue (&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">            url: &#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="vue中的事件"><a href="#vue中的事件" class="headerlink" title="vue中的事件"></a>vue中的事件</h2><h3 id="增减"><a href="#增减" class="headerlink" title="增减"></a>增减</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;num&gt;5?&#x27;大于5&#x27;:&#x27;不大于5&#x27;&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addBtn&quot;</span>&gt;</span>加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;decBtn&quot;</span>&gt;</span>减<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            num: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            addBtn:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.num++</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            decBtn:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.num--</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &#123;&#123;num&#125;&#125;</span><br><span class="line">        &lt;button @click&#x3D;&quot;addBtn&quot;&gt;加&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button @click&#x3D;&quot;decBtn&quot;&gt;减&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;input v-model&#x3D;&quot;step&quot; type&#x3D;&quot;number&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;vue&#x2F;2.6.12&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#39;#app&#39;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            num: 0,</span><br><span class="line">            step: 2</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            addBtn:function ()&#123;</span><br><span class="line">                &#x2F;&#x2F;parseInt()强转为int</span><br><span class="line">                this.num+&#x3D;parseInt(this.step)   </span><br><span class="line">            &#125;,</span><br><span class="line">            decBtn:function ()&#123;</span><br><span class="line">                this.num-&#x3D;parseInt(this.step)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="event鼠标移动坐标"><a href="#event鼠标移动坐标" class="headerlink" title="event鼠标移动坐标"></a>event鼠标移动坐标</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> event鼠标移动坐标<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> @<span class="attr">mousemove</span>=<span class="string">&quot;changeXY&quot;</span>&gt;</span></span><br><span class="line">            移动坐标改变<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;x&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;y&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            x: 0,</span><br><span class="line">            y: 10</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            changeXY:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.x = event.clientX;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.y = event.clientY;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="鼠标经过停止"><a href="#鼠标经过停止" class="headerlink" title="鼠标经过停止"></a>鼠标经过停止</h3><p>第一种：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> 停止鼠标移动事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> @<span class="attr">mousemove</span>=<span class="string">&quot;changeXY&quot;</span>&gt;</span></span><br><span class="line">            移动坐标改变<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;x&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;y&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> @<span class="attr">mousemove</span>=<span class="string">&quot;stopmo&quot;</span>&gt;</span></span><br><span class="line">                经过停止</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            x: 0,</span><br><span class="line">            y: 10</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            changeXY:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.x = event.clientX;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.y = event.clientY;</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            stopmo:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line">                event.stopPropagation()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> 停止鼠标移动事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> @<span class="attr">mousemove</span>=<span class="string">&quot;changeXY&quot;</span>&gt;</span></span><br><span class="line">            移动坐标改变<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;x&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;y&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> @<span class="attr">mousemove.stop</span>&gt;</span></span><br><span class="line">                经过停止</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            x: 0,</span><br><span class="line">            y: 10</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            changeXY:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.x = event.clientX;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.y = event.clientY;</span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h2><p><a href="https://cn.vuejs.org/v2/guide/events.html#%E4%BA%8B%E4%BB%B6%E4%BF%AE%E9%A5%B0%E7%AC%A6">文档</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阻止单击事件继续传播 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 提交事件不再重载页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 修饰符可以串联 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop.prevent</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只有修饰符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.capture</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.self</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h2><p><a href="https://cn.vuejs.org/v2/guide/events.html#%E6%8C%89%E9%94%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6">按键修饰符</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; @keyup.enter&#x3D;&quot;exportInf&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;vue&#x2F;2.6.12&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#39;#app&#39;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            exportInf:function ()&#123;</span><br><span class="line">                console.log(&#39;hello&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="计算属性computed"><a href="#计算属性computed" class="headerlink" title="计算属性computed"></a>计算属性computed</h2><blockquote><p>计算属性的重点在于 <code>属性</code>（属性是名词），首先是一个<code>属性</code>，其次这个属性有<code>计算</code>能力（计算是动词），这里的<code>计算</code>就是个函数。简单而言就是一个能将计算结果缓存起来的属性（将行为转化成了静态的属性）。所以可以用于存储页面中不需要经常刷新的数据</p><ul><li>computed里虽然存放函数，但在调用时，computed里的东西是一个属性。所以在调用时不能使用（）</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>computed计算属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;consoleDate1()&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        &#123;&#123;consoleDate2&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            consoleDate1:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="javascript">            consoleDate2:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214107.png" alt="image-20210112144118888"></p><h2 id="watch监控属性"><a href="#watch监控属性" class="headerlink" title="watch监控属性"></a>watch监控属性</h2><ul><li>通过watch里给属性绑定函数，当属性的值发送变化时，该函数就会自动被调用。调用时可以接收两个参数。第一个参数是属性改变后的值newValue，第二个是属性改变前的值oldValue</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>watch监控属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;name&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            name: <span class="string">&#x27;123&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">       watch: &#123;</span><br><span class="line"><span class="javascript">            name:<span class="function"><span class="keyword">function</span> (<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(newValue+<span class="string">&quot;:&quot;</span>+oldValue)</span></span><br><span class="line">            &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214108.png" alt="image-20210112145238000"></p><h2 id="Vue改变样式"><a href="#Vue改变样式" class="headerlink" title="Vue改变样式"></a>Vue改变样式</h2><h3 id="通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定"><a href="#通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定" class="headerlink" title="通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定"></a>通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .red&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过computed返回一个对象，对象里放多个键值对"><a href="#通过computed返回一个对象，对象里放多个键值对" class="headerlink" title="通过computed返回一个对象，对象里放多个键值对"></a>通过computed返回一个对象，对象里放多个键值对</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;myClassStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   red:<span class="built_in">this</span>.temp,</span></span><br><span class="line"><span class="javascript">                   mywidth:<span class="built_in">this</span>.temp</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="双向绑定的体现"><a href="#双向绑定的体现" class="headerlink" title="双向绑定的体现"></a>双向绑定的体现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .green&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#88b860</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;myClassStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;mycolor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;mycolor&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            mycolor: <span class="string">&#x27;green&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   red:<span class="built_in">this</span>.temp,</span></span><br><span class="line"><span class="javascript">                   mywidth:<span class="built_in">this</span>.temp</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在html中实现多个样式的组合"><a href="#在html中实现多个样式的组合" class="headerlink" title="在html中实现多个样式的组合"></a>在html中实现多个样式的组合</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .green&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#88b860</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;myClassStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[mycolor,mw]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;mycolor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;mycolor&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            mycolor: <span class="string">&#x27;green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            mw: <span class="string">&#x27;mywidth&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   red:<span class="built_in">this</span>.temp,</span></span><br><span class="line"><span class="javascript">                   mywidth:<span class="built_in">this</span>.temp</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214109.png" alt="image-20210112152928135"></p><h3 id="在内嵌的css样式中指明style属性的值"><a href="#在内嵌的css样式中指明style属性的值" class="headerlink" title="在内嵌的css样式中指明style属性的值"></a>在内嵌的css样式中指明style属性的值</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .green&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#88b860</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .yellow&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#be9117</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;backgroundColor:bg23&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;myClassStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[mycolor,mw]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;mycolor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;mycolor&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            mycolor: <span class="string">&#x27;green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            mw: <span class="string">&#x27;mywidth&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            bg23: <span class="string">&#x27;yellow&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   red:<span class="built_in">this</span>.temp,</span></span><br><span class="line"><span class="javascript">                   mywidth:<span class="built_in">this</span>.temp</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214110.png" alt="image-20210112153717471"></p><p>采用内嵌style时，style中放json对象，键是驼峰式写法，值是变量bg23</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214111.png" alt="image-20210112153848834"></p><h3 id="内嵌使用computed"><a href="#内嵌使用computed" class="headerlink" title="内嵌使用computed"></a>内嵌使用computed</h3><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214112.png" alt="image-20210112154003797"></p><h3 id="设置style属性的多个样式"><a href="#设置style属性的多个样式" class="headerlink" title="设置style属性的多个样式"></a>设置style属性的多个样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .green&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#88b860</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .yellow&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#be9117</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;[myClassStyle,&#123;width:mywidth23+&#x27;px&#x27;&#125;]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;mywidth23&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            mycolor: <span class="string">&#x27;green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            mw: <span class="string">&#x27;mywidth&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            bg23: <span class="string">&#x27;yellow&#x27;</span>,</span></span><br><span class="line">            mywidth23: 300</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   backgroundColor:<span class="built_in">this</span>.bg23,</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue的核心，虚拟DOM和diff算法"><a href="#Vue的核心，虚拟DOM和diff算法" class="headerlink" title="Vue的核心，虚拟DOM和diff算法"></a>Vue的核心，虚拟DOM和diff算法</h2><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214113.png" alt="image-20210112155541977"></p><blockquote><p>vue的高效的核心，就是虚拟的dom和diff算法，vue不通过dom树来达到修改的效果，而是直接在页面上该元素修改。此时这个元素就是一个虚拟的DOM。vue通过diff算法，计算出虚拟的dom修改后和修改前的区别，然后在虚拟dom的原基础上进行修改，效率大幅提高。</p></blockquote><h2 id="Vue中的语句"><a href="#Vue中的语句" class="headerlink" title="Vue中的语句"></a>Vue中的语句</h2><h3 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h3><ul><li>v-if</li><li>v-else-if</li><li>v-else</li><li>v-show：实际上是让该元素的display属性为nong，隐藏的效果，所以性能好</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>点击切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp2=!temp2&quot;</span>&gt;</span>点击切换temp2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;temp&quot;</span>&gt;</span>执行v-if<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;temp1&quot;</span>&gt;</span>执行v-else-if<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>=<span class="string">&quot;temp&quot;</span>&gt;</span>执行v-else<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;temp2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            temp1: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">            temp2:<span class="literal">false</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214114.png" alt="image-20210112163006014"></p><ul><li>v-show和v-if用法相同，即布尔值为true时v-show显示内容，否则不显示。但是v-show是通过style样式来实现元素的显示与隐藏，效率更高。</li></ul><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><p>vue中只有for循环</p><ol><li>基本for循环，首先定义数据源，通过v-for遍历数据，再使用插值表达式输出数据</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;a in args&quot;</span>&gt;</span>&#123;&#123;a&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            args: [2,3,4,5,6,77,8]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>建议添加key值，作为表示，i作为下标</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(a,i) in args&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;i&quot;</span>&gt;</span>&#123;&#123;a&#125;&#125;,其下标为&#123;&#123;i&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            args: [2,3,4,5,6,77,8]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>v-for遍历对象数组，嵌套for循环</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;student in students&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--（v,k,i）分别对应value，key和下标--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">&quot;(v,k,i) in student&quot;</span>&gt;</span>&#123;&#123;i&#125;&#125;-----&#123;&#123;k&#125;&#125;----&#123;&#123;v&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            students: [&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span><br><span class="line">                age: 18</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;lisi&#x27;</span>,</span></span><br><span class="line">                age: 19</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;wangwu&#x27;</span>,</span></span><br><span class="line">                age: 20</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhaoliu&#x27;</span>,</span></span><br><span class="line">                age: 10</span><br><span class="line">            &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>v-for案例</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(user,i) in users&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;i&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i+1&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">v-for</span>=<span class="string">&quot;value in user&quot;</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            users: [&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span><br><span class="line">                age: 18</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;lisi&#x27;</span>,</span></span><br><span class="line">                age: 19</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;wangwu&#x27;</span>,</span></span><br><span class="line">                age: 20</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhaoliu&#x27;</span>,</span></span><br><span class="line">                age: 10</span><br><span class="line">            &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="template模板标签使用"><a href="#template模板标签使用" class="headerlink" title="template模板标签使用"></a>template模板标签使用</h2><h3 id="配合v-if实现多个元素的显示隐藏（v-show不适用）"><a href="#配合v-if实现多个元素的显示隐藏（v-show不适用）" class="headerlink" title="配合v-if实现多个元素的显示隐藏（v-show不适用）"></a>配合v-if实现多个元素的显示隐藏（v-show不适用）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>点击切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;temp&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;&#123;name&#125;&#125;</span><br><span class="line">                &#123;&#123;age&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            name: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span><br><span class="line">            age: 283</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue对象的操作"><a href="#Vue对象的操作" class="headerlink" title="Vue对象的操作"></a>Vue对象的操作</h2><ol><li>可以通过一个Vue对象操作另一个Vue对象</li><li>Vue对象操作另一个vue对象的内容，维度有两个，操作属性和操作方法；</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>两个vue对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;word&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;upWord&quot;</span>&gt;</span>点击大写<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;lowWord&quot;</span>&gt;</span>改变小写<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">         word: <span class="string">&#x27;hello&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            upWord:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.word = <span class="built_in">this</span>.word.toUpperCase();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">       el: <span class="string">&#x27;#app2&#x27;</span>,</span></span><br><span class="line">       methods: &#123;</span><br><span class="line"><span class="javascript">           lowWord:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line">               v1.word = v1.word.toLowerCase();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Vue的实例属性"><a href="#Vue的实例属性" class="headerlink" title="Vue的实例属性"></a>Vue的实例属性</h3><p><a href="https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B-property">实例属性property</a></p><pre><code>1. 直接通过     ``对象.``   的方式调用的属性，是来自与data或computed中的属性。vue对象中的el、data等也被称为实例属性</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue实例属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;name&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> data = &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&#x27;zhangsan&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:data,</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意执行顺序</li></ul><ol start="2"><li>ref的使用：在vue里面吗，往往使用ref来代替id属性的使用。可以通过调用ref 的值来快速获得某个元素</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue实例属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">ref</span>=<span class="string">&quot;button1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeShow&quot;</span>&gt;</span>button1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">ref</span>=<span class="string">&quot;button2&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeShow&quot;</span>&gt;</span>button2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            changeShow:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.button1.innerHTML = <span class="string">&quot;changign&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>mount使用：实现了页面元素与vue对象的动态绑定，以往是通过el，也可以通过mount实例属性进行绑定</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue实例属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: &quot;<span class="tag">&lt;<span class="name">h1</span>&gt;</span>mount绑定<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">   v1.$mount(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue组件"><a href="#Vue组件" class="headerlink" title="Vue组件"></a>Vue组件</h2><blockquote><p>可以将vue对象作为一个组件，被反复使用。要实现组件化，需要在页面中注册组件；关于注册的方式：全局注册，本地注册</p></blockquote><h3 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h3><p>​    Vue.component(“组件名”,{vue对象})</p><ol><li><p>使用组件</p><p>​    在被vue绑定了的html元素中才可以使用组件。如果一个div未被绑定，那么此div不可使用注册的组件</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue组件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">model1</span>&gt;</span><span class="tag">&lt;/<span class="name">model1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;model1&quot;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        template: <span class="string">&quot;&lt;div&gt;&quot;</span> +</span></span><br><span class="line"><span class="handlebars"><span class="xml">            &quot;<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;showHi&#x27;</span>&gt;</span>click<span class="tag">&lt;/<span class="name">button</span>&gt;</span> &quot; +</span></span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;&lt;/div&gt;&quot;</span>,</span></span><br><span class="line"><span class="javascript">        data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhangsan&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            showHi:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;Hi&quot;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意事项</li></ul><ol><li>data的写法存在区别</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data:function()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        name: &#x27;zhangsan&#x27;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>组件中的template写法：template是将内容展现在页面上 的一个键。值是一个字符串。template中必须有且只能有一个根元素</li></ol><h3 id="本地注册"><a href="#本地注册" class="headerlink" title="本地注册"></a>本地注册</h3><ul><li>如果是对vue组件进行本地注册，那么其他违背绑定的div中不能使用该组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue组件本地（局部）注册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">model1</span>&gt;</span><span class="tag">&lt;/<span class="name">model1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">model1</span>&gt;</span><span class="tag">&lt;/<span class="name">model1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        components: &#123;</span><br><span class="line"><span class="javascript">            <span class="string">&quot;model1&quot;</span>: &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                template: &quot;<span class="tag">&lt;<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;showHi&#x27;</span>&gt;</span>click<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>&quot;,</span></span></span><br><span class="line"><span class="javascript">                data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                        name: <span class="string">&#x27;zhangsan&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line"><span class="javascript">                    showHi: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&quot;Hi&quot;</span>)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> v2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app2&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><blockquote><p>一个Vue对象会经历 初始化、创建、绑定、更新、销毁等阶段，不同的阶段都会有响应的生命周期钩子函数被调用</p></blockquote><p><a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90">生命周期</a></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214115.png" alt="Vue 实例生命周期"></p><h1 id="vue开发模式"><a href="#vue开发模式" class="headerlink" title="vue开发模式"></a>vue开发模式</h1><h2 id="vue-cli骨架"><a href="#vue-cli骨架" class="headerlink" title="vue-cli骨架"></a>vue-cli<a href="https://cli.vuejs.org/zh/guide/">骨架</a></h2><p><a href="https://cli.vuejs.org/zh/guide/installation.html">安装</a></p><ul><li>使用</li></ul><ol><li>下载安装nodejs，然后<code>npm install vue-cli -g</code></li><li>创建vue项目文件夹并打开</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> vuedemo</span><br><span class="line"><span class="built_in">cd</span> ./vuedemo</span><br></pre></td></tr></table></figure><ol start="3"><li>使用vue list命令查看当前可用的vue骨架</li><li>使用vue命令创建基于vue-webpack-simple骨架的项目，vue-cli-demo时项目名，过程中需要输入一些参数，回车是使用提示的值</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack-simple vue-cli-demo</span><br></pre></td></tr></table></figure><ol start="5"><li>创建基于webpack骨架的项目</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vue-cli-demo</span><br></pre></td></tr></table></figure><h2 id="三个核心"><a href="#三个核心" class="headerlink" title="三个核心"></a>三个核心</h2><p><strong>index.html，App.vue，main,js</strong></p><h3 id="在App-vue组件中使用另一个组件"><a href="#在App-vue组件中使用另一个组件" class="headerlink" title="在App.vue组件中使用另一个组件"></a>在App.vue组件中使用另一个组件</h3><h4 id="全局注册，"><a href="#全局注册，" class="headerlink" title="全局注册，"></a>全局注册，</h4><p>在components中新建Home.vue,header.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &#123;&#123;title&#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Home&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      title: &#39;开始搭建学习vue&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><ul><li>创建后，在main.js中通过import先导入；然后通过Vue.component()调用。注意顺序！！！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214116.png" alt="image-20210113225708232"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214117.png" alt="image-20210113225729451"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214118.png" alt="image-20210113224532066"></p><h4 id="本地（局部）注册"><a href="#本地（局部）注册" class="headerlink" title="本地（局部）注册"></a>本地（局部）注册</h4><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214119.png" alt="image-20210113230051357"></p><ul><li>本地注册就是直接在App.vue下的components中绑定，格式有两种。</li></ul><h3 id="组件间的参数传递"><a href="#组件间的参数传递" class="headerlink" title="组件间的参数传递"></a>组件间的参数传递</h3><h4 id="父传子"><a href="#父传子" class="headerlink" title="父传子"></a>父传子</h4><blockquote><p>通过子组件的props部分，来指明可以接收的参数，父组件通过在标签中写明参数的键值对来传递参数</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214120.png" alt="image-20210115160521344"></p><ul><li>props有两种写法（①数组；②对象，有三个参数）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214121.png" alt="image-20210115160956959"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214122.png" alt="image-20210115161226737"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214123.png" alt="image-20210115161445410"></p><h4 id="子传父"><a href="#子传父" class="headerlink" title="子传父"></a>子传父</h4><p>第一种方式：</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214124.png" alt="image-20210115162508422"></p><p>第二种方式：(常用)</p><p>​    通过事件发射的方式来实现子传父的效果；</p><ol><li>在子组件中，使用 <code>this.$emit(&quot;键&quot;,&quot;值&quot;)</code></li><li>在父组件中，子组件的标签中，使用 <code>@键=&quot;msg=$event&quot;</code> ，其中$event就能得到值，msg是父组件中vue属性，自定义</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214125.png" alt="image-20210115171003052"></p><h1 id="HTTP请求—axios"><a href="#HTTP请求—axios" class="headerlink" title="HTTP请求—axios"></a>HTTP请求—axios</h1><h2 id="什么是Axios"><a href="#什么是Axios" class="headerlink" title="什么是Axios"></a>什么是Axios</h2><blockquote><p>Axios是一个开源的用于在浏览器端和NodeJS的异步通信框架，主要作用是实现Ajax的异步通信</p></blockquote><p>功能特点如下：</p><pre><code>1. 从浏览器中创建`XMLHttpRequests`2. 从`node.js`中创建`http`请求3. 拦截请求数据和响应数据4. 转换请求数据和响应数据5. 取消请求6. 自动转换`JSON`数据7. 客户端支持防御`XSRF`（跨站请求伪造）</code></pre><p><a href="http://www.axios-js.com/">axios中文网</a></p><h2 id="为何使用axios"><a href="#为何使用axios" class="headerlink" title="为何使用axios"></a>为何使用axios</h2><p>由于Vue.js是一个视图层框架并且作者(尤雨溪)严格准守SoC (关注度分离原则) ，所以Vue.js<br>并不包含AJAX的通信功能，为了解决通信问题，作者单独开发了一个名为vue-resource 的插件,不<br>过在进入2.0版本以后停止了对该插件的维护并推荐了Axios框架</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>安装</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save axios vue-axios</span><br></pre></td></tr></table></figure><ol start="2"><li>在main.js中引入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">import axios from &#39;axios&#39;</span><br><span class="line">import VueAxios from &#39;vue-axios&#39;</span><br><span class="line"></span><br><span class="line">Vue.use(VueAxios,axios)</span><br></pre></td></tr></table></figure><h1 id="vue-router路由"><a href="#vue-router路由" class="headerlink" title="vue-router路由"></a>vue-router路由</h1><blockquote><p>在一个vue组件中实现其他组件的相互切换，可用通过路由模块，将制定的组件显示在路由视图中</p></blockquote><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><ol><li>初始化项目</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vueDemo</span><br></pre></td></tr></table></figure><ol start="2"><li>在components中创建所需组件</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214126.png" alt="image-20210121155724748"></p><ol start="3"><li>配置静态路由表</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214127.png" alt="image-20210121155804318"></p><ol start="4"><li>在main.js中导入VueRouter并使用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214128.png" alt="image-20210121155855118"></p><ol start="5"><li>在App.vue中使用<router-view/></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>访问即可</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214129.png" alt="image-20210121160036101"></p><h2 id="整合elementUI"><a href="#整合elementUI" class="headerlink" title="整合elementUI"></a>整合elementUI</h2><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214130.png" alt="image-20210121164422830"></p><ol><li>创建Navigation</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-menu</span><br><span class="line">      :default-active&#x3D;&quot;activeIndex2&quot;</span><br><span class="line">      class&#x3D;&quot;el-menu-demo&quot;</span><br><span class="line">      mode&#x3D;&quot;horizontal&quot;</span><br><span class="line">      @select&#x3D;&quot;handleSelect&quot;</span><br><span class="line">      background-color&#x3D;&quot;#545c64&quot;</span><br><span class="line">      text-color&#x3D;&quot;#fff&quot;</span><br><span class="line">      active-text-color&#x3D;&quot;#ffd04b&quot;&gt;</span><br><span class="line">      &lt;el-menu-item index&#x3D;&quot;1&quot; @click&#x3D;&quot;toHome&quot;&gt;首页&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">      &lt;el-submenu index&#x3D;&quot;2&quot;&gt;</span><br><span class="line">        &lt;template slot&#x3D;&quot;title&quot;&gt;我的工作台&lt;&#x2F;template&gt;</span><br><span class="line">        &lt;el-menu-item index&#x3D;&quot;2-1&quot;&gt;选项1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;el-menu-item index&#x3D;&quot;2-2&quot;&gt;选项2&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;el-menu-item index&#x3D;&quot;2-3&quot;&gt;选项3&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;el-submenu index&#x3D;&quot;2-4&quot;&gt;</span><br><span class="line">          &lt;template slot&#x3D;&quot;title&quot;&gt;选项4&lt;&#x2F;template&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-4-1&quot;&gt;选项1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-4-2&quot;&gt;选项2&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-4-3&quot;&gt;选项3&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-submenu&gt;</span><br><span class="line">      &lt;&#x2F;el-submenu&gt;</span><br><span class="line">      &lt;el-menu-item index&#x3D;&quot;3&quot; disabled&gt;消息中心&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">      &lt;el-menu-item index&#x3D;&quot;4&quot;&gt;&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;www.ele.me&quot; target&#x3D;&quot;_blank&quot;&gt;订单管理&lt;&#x2F;a&gt;&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">    &lt;&#x2F;el-menu&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Navigation&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      activeIndex: &#39;1&#39;,</span><br><span class="line">      activeIndex2: &#39;1&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleSelect (key, keyPath) &#123;</span><br><span class="line">      console.log(key, keyPath)</span><br><span class="line">    &#125;,</span><br><span class="line">    toHome () &#123;</span><br><span class="line">      this.$router.push(&#39;&#x2F;home&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>App.vue使用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214131.png" alt="image-20210121164553454"></p><ul><li>主要的点击事件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">toHome () &#123;</span><br><span class="line">  this.$router.push(&#39;&#x2F;home&#39;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h2><blockquote><p>三步走： 设参，传参，接参</p></blockquote><ol><li>设参，通过路由表，设置路由参数</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214132.png" alt="image-20210121172317730"></p><ol start="2"><li>传参，通过this.$rounter.push()</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214133.png" alt="image-20210121172413615"></p><ol start="3"><li>在目标vue中，通过vue中 的 this.$route.params.id接参，id自定义</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214134.png" alt="image-20210121172732053"></p><h2 id="路由间跳转方式"><a href="#路由间跳转方式" class="headerlink" title="路由间跳转方式"></a>路由间跳转方式</h2><ol><li>通过HTML中的路由链接进行跳转  <router-link to="路由地址"></li><li>通过js实现路由跳转    this.$router.push(“路由地址”)</li></ol><h2 id="Vue中组件样式表的作用范围"><a href="#Vue中组件样式表的作用范围" class="headerlink" title="Vue中组件样式表的作用范围"></a>Vue中组件样式表的作用范围</h2><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214135.png" alt="image-20210121173504109"></p><p>若vue组件中的style标签无scoped属性，则此style样式将会作用在整个页面上。</p><p>若有scoped则样式只作用在当前组件中</p><h1 id="Vue静态资源打包"><a href="#Vue静态资源打包" class="headerlink" title="Vue静态资源打包"></a>Vue静态资源打包</h1><ol><li>在开发环境中，各种修改够可以看到实施效果，因为开发环境中会自动编译资源；</li><li>在生产环境中，静态资源需要手部署，此时需要通过<code>npm run build</code>来构建资源。此时产生一个dist文件夹，在静态资源存于此。</li></ol><h1 id="Mock假数据"><a href="#Mock假数据" class="headerlink" title="Mock假数据"></a>Mock假数据</h1><blockquote><p>提供假数据，可以让前端不需要等待后端的接口，而直接进行下一步的开发。推荐使用fastMock和easyMock</p></blockquote><p><a href="https://www.fastmock.site/#/projects">fastMock</a></p><h1 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h1><h2 id="什么是嵌套路由"><a href="#什么是嵌套路由" class="headerlink" title="什么是嵌套路由"></a>什么是嵌套路由</h2><p>​    嵌套路由也称为子路由，在实际应用中，通常由多层嵌套的组件构成。同样，URL中各段动态路径也按某种结构对应嵌套的各层组件，例如：</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214136.png" alt="image-20210124224053214"></p><h2 id="嵌套路由使用"><a href="#嵌套路由使用" class="headerlink" title="嵌套路由使用"></a>嵌套路由使用</h2><ol><li>创建对应页面</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214137.png" alt="image-20210125001241150"></p><ol start="2"><li>配置路由(在哪一个界面嵌套就在哪一个界面的children中添加)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214138.png" alt="image-20210125001357331"></p><p>3.选择被<router-view></router-view>显示区域</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214139.png" alt="image-20210125001502110"></p><ol start="4"><li>使用router-link 或者是$router.push跳转</li></ol><h1 id="组件-重定向"><a href="#组件-重定向" class="headerlink" title="组件 重定向"></a>组件 重定向</h1><blockquote><p>首先需要明白，Vue中的重定向是作用在路径不同但组件相同的情况下</p></blockquote><h2 id="配置重定向"><a href="#配置重定向" class="headerlink" title="配置重定向"></a>配置重定向</h2><ol><li>修改路由配置，重定向直接调用另一个已配置好的路由对象即可。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: &#39;&#x2F;login&#39;,</span><br><span class="line">  name: &#39;Login&#39;,</span><br><span class="line">  component: Login</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  path: &#39;logout&#39;,</span><br><span class="line">  redirect: &#39;&#x2F;login&#39;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214140.png" alt="image-20210125091239596"></p><ol start="2"><li>使用</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-menu-item index&#x3D;&quot;2-3&quot;&gt;&lt;router-link to&#x3D;&quot;&#x2F;login&quot;&gt;退出&lt;&#x2F;router-link&gt;&lt;&#x2F;el-menu-item&gt;</span><br></pre></td></tr></table></figure><h1 id="参数传递-1"><a href="#参数传递-1" class="headerlink" title="参数传递"></a>参数传递</h1><blockquote><p>长需要把某种模式匹配到所有路由，全部映射到同个组件。例如，有一个User组件，对于所有ID各不相同的用户，都要使用这个组件渲染。此时就需要使用传递参数了</p></blockquote><h2 id="使用路径匹配的方式"><a href="#使用路径匹配的方式" class="headerlink" title="使用路径匹配的方式"></a>使用路径匹配的方式</h2><p>1） 修改路由配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: &#39;&#x2F;home&#39;,</span><br><span class="line">  name: &#39;Home&#39;,</span><br><span class="line">  component: Home,</span><br><span class="line">  children: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &#39;&#x2F;clistDefault&#x2F;:id&#39;,</span><br><span class="line">      name: &#39;&#x2F;CListDefault&#39;,</span><br><span class="line">      component: CListDefault</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &#39;&#x2F;clistLatest&#x2F;:id&#39;,</span><br><span class="line">      name: &#39;&#x2F;CListLatest&#39;,</span><br><span class="line">      component: CListLatest</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>主要是在path属性上增加了<code>:id</code>占位符</li></ul><p>2） 传递参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-menu-item index&#x3D;&quot;1-1&quot;&gt;&lt;router-link to&#x3D;&quot;&#x2F;clistDefault&#x2F;1&quot;&gt;默认&lt;&#x2F;router-link&gt;&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">&lt;el-menu-item index&#x3D;&quot;1-2&quot;&gt;&lt;router-link :to&#x3D;&quot;&#123;name:&#39;CListLatest&#39;,params:&#123;id:22&#125;&#125;&quot;&gt;最新&lt;&#x2F;router-link&gt;&lt;&#x2F;el-menu-item&gt;</span><br></pre></td></tr></table></figure><ul><li>此时将to改为<code>:to</code>，是为了将这一属性当成对象使用，注意<strong>router-link</strong>中的name属性名称一定要和路由中的name属性名称匹配。</li></ul><p>3）</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214141.png" alt="image-20210125133142286"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214142.png" alt="image-20210125133111259"></p><h2 id="代码方式"><a href="#代码方式" class="headerlink" title="代码方式"></a>代码方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123;name: &#39;CListDefault&#39;, params: &#123;id: 2323&#125;&#125;)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214143.png" alt="image-20210125134116081"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214144.png" alt="image-20210125134125054"></p><h2 id="实现点击查看详情做法"><a href="#实现点击查看详情做法" class="headerlink" title="实现点击查看详情做法"></a>实现点击查看详情做法</h2><ol><li>在展示表中通过点击事件，将id传入详情页</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214145.png" alt="image-20210125213804916"></p><ol start="2"><li>在详情页通过<code>this.$route.params.id</code>接收传来的参数id。并向后端发送请求，限定词为id即可获取所需数据</li></ol><h1 id="路由中的钩子函数"><a href="#路由中的钩子函数" class="headerlink" title="路由中的钩子函数"></a>路由中的钩子函数</h1><ul><li><code>beforeRouteEnter</code>:在进入路由前执行</li><li><code>beforeRouteLeave</code>:在离开路由前执行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteEnter: (to, from, next) &#x3D;&gt; &#123;</span><br><span class="line">  console.log(&#39;你好这是beforeRouteEnter&#39;)</span><br><span class="line">  next()</span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteLeave: (to, from, next) &#x3D;&gt; &#123;</span><br><span class="line">  console.log(&#39;this is beforeRouteLeave&#39;)</span><br><span class="line">  next()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Vue-Element-Admin"><a href="#Vue-Element-Admin" class="headerlink" title="Vue-Element-Admin"></a>Vue-Element-Admin</h1><blockquote><p><a href="http://panjiachen.github.io/vue-element-admin">vue-element-admin</a> 是一个后台前端解决方案，它基于 <a href="https://github.com/vuejs/vue">vue</a> 和 <a href="https://github.com/ElemeFE/element">element-ui</a>实现。它使用了最新的前端技术栈，内置了 i18 国际化解决方案，动态路由，权限验证，提炼了典型的业务模型，提供了丰富的功能组件，它可以帮助你快速搭建企业级中后台产品原型。</p></blockquote><p><a href="https://panjiachen.github.io/vue-element-admin-site/zh/">官网</a></p><p><a href="https://github.com/PanJiaChen/vue-admin-template">基础版</a></p><p><a href="https://github.com/PanJiaChen/vue-element-admin">集成版</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆项目</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/PanJiaChen/vue-element-admin.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入项目目录</span></span><br><span class="line"><span class="built_in">cd</span> vue-element-admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建议不要用 cnpm 安装 会有各种诡异的bug 可以通过如下操作解决 npm 下载速度慢的问题</span></span><br><span class="line">npm install --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地开发 启动项目</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h2 id="路由和侧边栏"><a href="#路由和侧边栏" class="headerlink" title="路由和侧边栏"></a>路由和侧边栏</h2><blockquote><p>项目侧边栏和路由是绑定在一起的，所以你只有在 <code>@/router/index.js</code> 下面配置对应的路由，侧边栏就能动态的生成了。大大减轻了手动重复编辑侧边栏的工作量。当然这样就需要在配置路由的时候遵循一些约定的规则</p></blockquote><ul><li>其中的<code>@</code>就是<code>src</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214146.png" alt="image-20210125144743146"></p><h1 id="分页实现"><a href="#分页实现" class="headerlink" title="分页实现"></a>分页实现</h1><h2 id="分页原理"><a href="#分页原理" class="headerlink" title="分页原理"></a>分页原理</h2><blockquote><p>通过element ui的内置组件， Pagination实现分页</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">任何的分页都有五个部分组成</span><br><span class="line">1.记录的总条数</span><br><span class="line">2.每页显示的记录条数</span><br><span class="line">3.总页数</span><br><span class="line">4.当前是第几页</span><br><span class="line">5.当前页的所有记录</span><br></pre></td></tr></table></figure><ul><li>分页有两种<ol><li>真分页：根据当前选择的页数去后端获取数据；</li><li>假分页：先一次性从数据库获取所有数据，然后根据当前页码从浏览器中查询；</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214147.png" alt="image-20210126222657828"></p><ol><li><p>Pagination实现分页（真分页）</p><blockquote><p>Pagination实际上是一个组件，组件里设置了分页常用的参数。通过父组件使用Pagination组件，向该组件中传递参数，让Pagination组件得到分页常用到的参数值，就可以实现分页。通过组件参数传递（父传子）</p></blockquote></li><li><p>提供后端的分页数据</p></li></ol><h2 id="PageHelper"><a href="#PageHelper" class="headerlink" title="PageHelper"></a>PageHelper</h2><p><a href="https://pagehelper.github.io/docs/howtouse/">Mybatis-PageHelper</a></p><ol><li>添加pom依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        pagehelper所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>覆盖默认配置</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置pagehelper</span></span><br><span class="line"><span class="attr">pagehelper:</span></span><br><span class="line"><span class="comment">#  指定分页插件使用哪种语言，不指定会自动识别</span></span><br><span class="line">  <span class="attr">helper-dialect:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">reasonable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">support-methods-arguments:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">params:</span> <span class="string">count=countSql</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写controller接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实现商品的分页查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageNum  表示第几页</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageSize 表示一页显示多少数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getPaging&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageInfo&lt;Product&gt; <span class="title">getPaging</span><span class="params">(<span class="keyword">int</span> pageNum, <span class="keyword">int</span> pageSize)</span></span>&#123;</span><br><span class="line"><span class="comment">//        使用pageHelper的静态方法获取分页数据</span></span><br><span class="line">        PageHelper.startPage(pageNum,pageSize);</span><br><span class="line"><span class="comment">//        获取所有的商品数据备用</span></span><br><span class="line">        List&lt;Product&gt; products = <span class="keyword">this</span>.productService.selectAllProduct();</span><br><span class="line"><span class="comment">//        获取分页对象</span></span><br><span class="line">        PageInfo&lt;Product&gt; productPageInfo = <span class="keyword">new</span> PageInfo&lt;&gt;(products);</span><br><span class="line">        <span class="keyword">return</span> productPageInfo;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>利用postMan测试接口</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214148.png" alt="image-20210127101509806"></p><h2 id="前端使用Pagination组件"><a href="#前端使用Pagination组件" class="headerlink" title="前端使用Pagination组件"></a>前端使用Pagination组件</h2><p><strong>在页面中使用Pagination组件重点</strong></p><ol><li>total：记录的总条数</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;编程不良人-VUE+ElementUI+Vue Element Admin学习&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;Vue基础&quot;&gt;&lt;a href=&quot;#Vue基础&quot; class=&quot;headerlink&quot; title=&quot;Vue基础&quot;&gt;&lt;/a&gt;Vue基础&lt;/</summary>
      
    
    
    
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
    <category term="elementui" scheme="http://example.com/tags/elementui/"/>
    
  </entry>
  
  <entry>
    <title>SpringSecurity学习与使用</title>
    <link href="http://example.com/2021/03/10/SpringSecurity%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2021/03/10/SpringSecurity%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2021-03-10T09:33:49.000Z</published>
    <updated>2021-03-12T13:37:30.365Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Spring Security OAuth2.0认证授权</strong></p><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="什么是认证"><a href="#什么是认证" class="headerlink" title="什么是认证"></a>什么是认证</h2><p>​        进入移动互联网时代,大家每天都在刷手机,常用的软件有微信、支付宝、头条等，下边拿微信来举例子说<br>明认证相关的基本概念,在初次使用微信前需要注册成为微信用户,然后输入账号和密码即可登录微信,输入账<br>号和密码登录微信的过程就是认证。<br>​        <strong>系统为什么要认证?</strong><br>​        认证是为了保护系统的隐私数据与资源,户的身份合法方可访问该系统的资源。</p><p>​        <strong>认证</strong>:用户认证就是<strong>判断一个用户的身份是否合法的过程</strong>,户去访问系统资源时系统要求验证用户的身份<br>信息,身份合法方可继续访问,不合法则拒绝访问。常见的用户身份认证方式有:用户名密码登录,二维码登<br>录,手机短信登录,指纹认证等方式。</p><h2 id="什么是会话"><a href="#什么是会话" class="headerlink" title="什么是会话"></a>什么是会话</h2><p>​        用户认证通过后,为了避免用户的每次操作都进行认证可将用户的信息保证在会话中。会话就是系统为了保<br>持当前用户的登录状态所提供的机制,常见的有基于session方式、基于token方式等。<br>​        <strong>基于session的认证方式如下图:</strong><br>它的交互流程是,胪认证成功后,在服务端生成用户相关的数据保存在session(当前会话)中,发给客户端<br>的sesssion id 存放到cookie中,这样用户客户端请求时带上session. id就可以验证服务器端是否存在session<br>数据,以此完成用户的合法校验,当用户退出系统或session过期销毁时,客户端的session. _id也就无效了。</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213616.png" alt="image-20210131130455565"></p><p><strong>基于token的认证方式</strong><br>        它的交互流程是,户认证成功后,服务端生成一个token发给客户端 ,客户端可以放到cookie或<br>localStorage 等存储中,每次请求时带上token ,服务端收到token通过验证后即可确认用户身份。</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213617.png" alt="image-20210131130651486"></p><ul><li>基于session的认证方式由Servlet规范定制,服务端要存储session信息需要占用内存资源,客户端需要支持<br>cookie ;基于token的方式则一般不需要服务端存储token ,并且不限制客户端的存储方式。如今移动互联网时代更多类型的客户端需要接入系统,系统多是采用前后端分离的架构进行实现,<strong>所以基于token的方式更适合</strong>。</li></ul><h2 id="什么是授权"><a href="#什么是授权" class="headerlink" title="什么是授权"></a>什么是授权</h2><p>​        还拿微信来举例子,微信登录成功后用户即可使用微信的功能,比如,发红包、发朋友圈、添加好友等, 没<br>有绑定银行卡的用户是无法发送红包的,绑定银行卡的用户才可以发红包,发红包功能、发朋友圈功能都是微信<br>的资源即功能资源,户拥有发红包功能的权限才可以正常使用发送红包功能,拥有发朋友圈功能的权限才可以<br>使用发朋友圈功能,这个根据用户的权限来控制用户使用资源的过程就是授权。</p><p><strong>为什么要授权?</strong><br>        认证是为了保证用户身份的合法性,授权则是为了更细粒度的对隐私数据进行划分,授权是在认证通过后发<br>生的,控制不同的用户能够访问不同的资源。<br>        <strong>授权</strong>:授权是用户认证通过根据用户的权限来控制用户访问资源的过程,拥有资源的访问权限则正常访问,<br>没有权限则拒绝访问。</p><h2 id="授权的数据模型"><a href="#授权的数据模型" class="headerlink" title="授权的数据模型"></a>授权的数据模型</h2><p>​        如何进行授权即如何对用户访问资源进行控制,首先需要学习授权相关的数据模型。</p><p>​        授权可简单理解为Who对What(which)进行How操作,<strong>包括如下:</strong><br>​        <strong>Who</strong> ,即主体( Subject) , 主体-般是指用户,也可以是程序,需要访问系统中的资源。<br>​        <strong>What</strong> ,即资源( Resource),如系统菜单、 面、按钮、代码方法、系统商品信息、系统订单信息等。系<br>统菜单、页面、按钮、代码方法都属于系统功能资源,对于web系统每个功能资源通常对应一个URL ;系统商品<br>信息、系统订单信息都属于实体资源(数据资源) , 实体资源由资源类型和资源实例组成,比如商品信息为资源<br>类型,商品编号为001的商品为资源实例。<br>​        <strong>How</strong> ,权限/许可( Permission) , 规定了用户对资源的操作许可,权限离开资源没有意义,如用户查询权<br>限、用户添加权限、某个代码方法的调用权限、编号为001的用户的修改权限等,通过权限可知用户对哪些资源<br>都有哪些操作许可。</p><p>主体、资源、权限关系如下图:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213618.png" alt="image-20210131142846001"></p><p><strong>主体、资源、权限相关的数据模型如下:</strong><br>主体(用户id、账号、密码、..）<br>资源(资源id、资源名称、访问地址、..）<br>权限(权限id、权限标识、权限名称、资源id、..<br>角色(角色id、角色名称、..)<br>角色和权限关系(角色id、权限id、..）<br>主体(用户)和角色关系(用户id、角色id、..）<br>主体(用户)、资源、权限关系如下图:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213619.png" alt="image-20210131143324352"></p><p>通常企业开发中将资源和权限表合并为一张权限表，如下:<br>资源(资源id、资源名称、访问地址、.. )<br>权限(权限id、权限标识、权限名称、资源id、..<br>合并为:<br>权限(权限id、权限标识、权限名称、资源名称、资源访问地址、..)<br>修改后数据模型之间的关系如下图:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213620.png" alt="image-20210131143705581"></p><h2 id="RBAC"><a href="#RBAC" class="headerlink" title="RBAC"></a>RBAC</h2><p>如何实现授权？业界通常基于RBAC实现授权</p><h3 id="基于角色的访问控制"><a href="#基于角色的访问控制" class="headerlink" title="基于角色的访问控制"></a>基于角色的访问控制</h3><p>​        RBAC基于角色的访问控制( Role- Based Access Control )是按角色进行授权,比如:主体的角色为总经理<br>可以查询企业运营报表,查询员工工资信息等,访问控制流程如下:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213621.png" alt="image-20210131144048191"></p><p>根据上图中的逻辑判断，授权代码可表示如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(主体.hasRole(<span class="string">&quot;总经理角色id&quot;</span>))&#123;</span><br><span class="line">    查询工资</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果上图中查询工资所需要的角色变化为总经理和部门经理,此时就需要修改判断逻辑为”判断用户的角色是否是<br>总经理或部门]经理”,修改代码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(主体.hasRole(<span class="string">&quot;总经理角色id&quot;</span>) || 主体.hasRole(<span class="string">&quot;部门经理角色id&quot;</span>))&#123;</span><br><span class="line">    查询工资</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据上面的例子发现，当需要修改角色的权限时就需要修改授权的相关代码，<strong>系统可扩展性差</strong></p><h3 id="基于资源的访问控制"><a href="#基于资源的访问控制" class="headerlink" title="基于资源的访问控制"></a>基于资源的访问控制</h3><p>​        RBAC基于资源的访问控制( Resource- Based Access-Control )是按资源(或权限)进行授权,比如:用户必须具有查询工资权限才可以查询员工工资信息等,访问控制流程如下:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213622.png" alt="image-20210131144218458"></p><p>根据上图中的逻辑判断，授权代码可表示如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(主体.hasPermission(<span class="string">&quot;查询工资权限标识&quot;</span>))&#123;</span><br><span class="line">    查询工资</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优点：</strong>系统设计时定义好查询工资的权限标识，即使查询工资所需要 角色变化为总经理或者部门经理也不需要修改授权代码，系统可扩展性强。</p><h1 id="基于Session的认证方式"><a href="#基于Session的认证方式" class="headerlink" title="基于Session的认证方式"></a>基于Session的认证方式</h1><h2 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h2><p>​        基于Session认证方式的流程是,用户认证成功后,在服务端生成用户相关的数据保存在session(当前会<br>话) ,而发给客户端的sesssion. id存放到cookie 中,这样用客户端请求时带上session. id就可以验证服务器端<br>是否存在session数据,以此完成用户的合法校验。当用户退出系统或session过期销毁时客户端的session. id也<br>就无效了。下图是session认证方式的流程图: T</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213623.png" alt="image-20210131150045751"></p><p>​        基于Session的认证机制由Servlet规范定制, Servlet容器已实现,用户通过HttpSession的操作方法即可实<br>现，如下是HttpSession相关的操作APl。</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213624.png" alt="image-20210131150247694"></p><h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><p>​    本案例工程使用maven</p><p>这是用spring-mvc时间再看</p><p><a href="https://www.bilibili.com/video/BV1VE411h7aL?p=6">地址</a></p><h1 id="Spring-Security快速上手"><a href="#Spring-Security快速上手" class="headerlink" title="Spring Security快速上手"></a>Spring Security快速上手</h1><h2 id="Spring-Security介绍"><a href="#Spring-Security介绍" class="headerlink" title="Spring Security介绍"></a>Spring Security介绍</h2><p>​        Spring Security是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的安全框架。<br>于它是Spring生态系统中的一员,因此它伴随着整个Spring生态系统不断修正、升级,在spring boot项目中加<br>入spring security更是十分简单,使用Spring Security减少了为企业系统安全控制编写大量重复代码的工作。</p><h2 id="创建简单springboot工程"><a href="#创建简单springboot工程" class="headerlink" title="创建简单springboot工程"></a>创建简单springboot工程</h2><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityDemo01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello security&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pom依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213625.png" alt="image-20210131152845802"></p><h2 id="SpringSecurity基本原理"><a href="#SpringSecurity基本原理" class="headerlink" title="SpringSecurity基本原理"></a>SpringSecurity基本原理</h2><blockquote><p>其本质时一个过滤器链，代码底层重点看三个过滤器</p></blockquote><h3 id="FilterSecurityInterceptor"><a href="#FilterSecurityInterceptor" class="headerlink" title="FilterSecurityInterceptor"></a>FilterSecurityInterceptor</h3><blockquote><p>它是一个方法级的权限过滤器，基本位于过滤链的最底部</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">super</span>.beforeInvocation(filterInvocation); <span class="comment">//标识查看之前的filter是否通过</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filterInvocation.getChain().doFilter(filterInvocation.getRequest(), filterInvocation.getResponse());   <span class="comment">//表示真正的调用后台的服务</span></span><br></pre></td></tr></table></figure><h3 id="ExceptionTranslationFilter"><a href="#ExceptionTranslationFilter" class="headerlink" title="ExceptionTranslationFilter"></a>ExceptionTranslationFilter</h3><blockquote><p>是异常过滤器，用来处理正在认证授权过程中抛出的异常</p></blockquote><h3 id="UsernamePasswordAuthenticationFilter"><a href="#UsernamePasswordAuthenticationFilter" class="headerlink" title="UsernamePasswordAuthenticationFilter"></a>UsernamePasswordAuthenticationFilter</h3><blockquote><p>对/login的POST请求做拦截，校验表单中用户名，密码</p></blockquote><h2 id="两个重要接口"><a href="#两个重要接口" class="headerlink" title="两个重要接口"></a>两个重要接口</h2><h3 id="UserDetailService"><a href="#UserDetailService" class="headerlink" title="UserDetailService"></a>UserDetailService</h3><blockquote><p>查询数据库用户名和密码的过程</p></blockquote><ul><li>创建类继承UsernamePasswordAuthenticationFilter, 重写三个方法</li><li>创建类实现UserDetailService,编写查询数据过程，返回User对象,这个User对象是安全框架提供对象</li></ul><p>当什么也没有配置的时候,账号和密码是由Spring Security 定义生成的。而在实际项<br>目中账号和密码都是从数据库中查询出来的。所以我们要通过自定 义逻辑控制认证逻<br>辑。<br>如果需要自定义逻辑时,只需要实现UserDetailService接口即可。接口定义如下:。</p><h3 id="PasswordEncoder"><a href="#PasswordEncoder" class="headerlink" title="PasswordEncoder"></a>PasswordEncoder</h3><blockquote><p>数据加密接口，用于返回User对象里面密码加密</p></blockquote><h2 id="简单使用-设置用户名与密码"><a href="#简单使用-设置用户名与密码" class="headerlink" title="简单使用 设置用户名与密码"></a>简单使用 设置用户名与密码</h2><blockquote><ol><li>通过配置文件</li><li>通过配置类</li><li>自定义编写实现类</li></ol></blockquote><h3 id="方式一：application-yml中"><a href="#方式一：application-yml中" class="headerlink" title="方式一：application.yml中"></a>方式一：application.yml中</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">      <span class="attr">password:</span> <span class="number">123123</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213626.png" alt="image-20210131180214665"></p><h3 id="方式二：编写类实现接口"><a href="#方式二：编写类实现接口" class="headerlink" title="方式二：编写类实现接口"></a>方式二：编写类实现接口</h3><p>SecurityConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 调用方法实现密码加密</span></span><br><span class="line">        BCryptPasswordEncoder passwordEncoder = <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">        String password = passwordEncoder.encode(<span class="string">&quot;123123&quot;</span>);</span><br><span class="line">        auth.inMemoryAuthentication().withUser(<span class="string">&quot;test2&quot;</span>).password(password).roles(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">password</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方式三：自定义实现类设置"><a href="#方式三：自定义实现类设置" class="headerlink" title="方式三：自定义实现类设置"></a>方式三：自定义实现类设置</h3><blockquote><ol><li>创建配置类，设置使用了哪个userDetailsService实现类</li><li>编写实现类，返回User对象，User对象有用户名密码和操作权限</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig03</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(password());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">password</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213627.png" alt="image-20210131183318174"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;userDetailsService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUserDetailsService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String s)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">        List&lt;GrantedAuthority&gt; auths = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;role&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User(<span class="string">&quot;test3&quot;</span>,<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123123&quot;</span>),auths);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213628.png" alt="image-20210131183340147"></p><h2 id="绑定数据库数据实现认证"><a href="#绑定数据库数据实现认证" class="headerlink" title="绑定数据库数据实现认证"></a>绑定数据库数据实现认证</h2><p>实体类User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;userDetailsService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUserDetailsService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mybatisPlus的条件构造器</span></span><br><span class="line">        QueryWrapper&lt;com.springsecurity.securitydemo01.entity.User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">&quot;username&quot;</span>,username);</span><br><span class="line">        com.springsecurity.securitydemo01.entity.User user = userMapper.selectOne(wrapper);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span>  <span class="keyword">new</span> UsernameNotFoundException(<span class="string">&quot;用户名不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;GrantedAuthority&gt; auths = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;role&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User(user.getUsername(),<span class="keyword">new</span> BCryptPasswordEncoder().encode(user.getPassword()),auths);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Mapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义用户登录界面"><a href="#自定义用户登录界面" class="headerlink" title="自定义用户登录界面"></a>自定义用户登录界面</h2><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>界面自己随便写</p><p>重点是下面的config配置类SecurityConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig03</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(password());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">password</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.formLogin()    <span class="comment">//自定义登录界面</span></span><br><span class="line">                .loginPage(<span class="string">&quot;/user/login&quot;</span>)   <span class="comment">//登录界面设置</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/user/login&quot;</span>)  <span class="comment">//登录界面访问路径</span></span><br><span class="line">                .defaultSuccessUrl(<span class="string">&quot;/user/index&quot;</span>).permitAll()   <span class="comment">//登录成功后所跳转的路径</span></span><br><span class="line">                .and().authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/test/hello&quot;</span>,<span class="string">&quot;/user/login&quot;</span>).permitAll()   <span class="comment">//设置哪些路径可以直接访问不需要认证</span></span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and().csrf().disable();    <span class="comment">//关闭csrf防护</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基于角色或权限进行访问控制"><a href="#基于角色或权限进行访问控制" class="headerlink" title="基于角色或权限进行访问控制"></a>基于角色或权限进行访问控制</h2><h3 id="hasAuthority方法"><a href="#hasAuthority方法" class="headerlink" title="hasAuthority方法"></a>hasAuthority方法</h3><ul><li><p>如果当前的主体具有指定的权限，则返回true，否则返回false</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasAuthority(<span class="string">&quot;admin&quot;</span>)   <span class="comment">//只有具有admin权限的用户才能访问</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213629.png" alt="image-20210131202427381"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213630.png" alt="image-20210131202453611"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213631.png" alt="image-20210131202500271"></p><h3 id="hasAnyAuthority方法"><a href="#hasAnyAuthority方法" class="headerlink" title="hasAnyAuthority方法"></a>hasAnyAuthority方法</h3><ul><li>如果当前的主体有任何提供的角色（给定的作为一个都好分割的字符串列表），返回true</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasAnyAuthority(<span class="string">&quot;admin,user&quot;</span>) <span class="comment">//具有这两个权限的用户都可以访问</span></span><br></pre></td></tr></table></figure><h3 id="hasRole方法"><a href="#hasRole方法" class="headerlink" title="hasRole方法"></a>hasRole方法</h3><ul><li><p>如果用户具备给定角色就允许访问，否则出现403</p></li><li><p>如果当前主体具有指定的角色，则返回true</p></li><li><p>注意角色前缀<code>ROLE_</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasRole(<span class="string">&quot;sale&quot;</span>)   <span class="comment">//具备sale角色即可访问</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;GrantedAuthority&gt; auths = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;admin,ROLE_sale&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><h3 id="hasAnyRole方法"><a href="#hasAnyRole方法" class="headerlink" title="hasAnyRole方法"></a>hasAnyRole方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasAnyRole(<span class="string">&quot;sale,manage&quot;</span>)  <span class="comment">//具备任意角色均可访问</span></span><br></pre></td></tr></table></figure><h2 id="自定义403界面"><a href="#自定义403界面" class="headerlink" title="自定义403界面"></a>自定义403界面</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig03</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(password());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">password</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 配置自定义403界面</span></span><br><span class="line">        http.exceptionHandling().accessDeniedPage(<span class="string">&quot;/user/forbidden&quot;</span>);</span><br><span class="line">        http.formLogin()    <span class="comment">//自定义登录界面</span></span><br><span class="line">                .loginPage(<span class="string">&quot;/user/login&quot;</span>)   <span class="comment">//登录界面设置</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/user/login&quot;</span>)  <span class="comment">//登录界面访问路径</span></span><br><span class="line">                .defaultSuccessUrl(<span class="string">&quot;/user/index&quot;</span>).permitAll()   <span class="comment">//登录成功后所跳转的路径</span></span><br><span class="line">                .and().authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/test/hello&quot;</span>,<span class="string">&quot;/user/login&quot;</span>).permitAll()   <span class="comment">//设置哪些路径可以直接访问不需要认证</span></span><br><span class="line">               <span class="comment">// .antMatchers(&quot;/user/index&quot;).hasAuthority(&quot;admin&quot;)   //只有具有admin权限的用户才能访问</span></span><br><span class="line">               <span class="comment">// .antMatchers(&quot;/user/index&quot;).hasAnyAuthority(&quot;admin,user&quot;) //具有这两个权限的用户都可以访问</span></span><br><span class="line">              <span class="comment">//  .antMatchers(&quot;/user/index&quot;).hasRole(&quot;sale&quot;)   //具备sale角色即可访问</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasAnyRole(<span class="string">&quot;sale,manage&quot;</span>)  <span class="comment">//具备任意角色均可访问</span></span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and().csrf().disable();    <span class="comment">//关闭csrf防护</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Spring Security OAuth2.0认证授权&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h1&gt;&lt;h2 id=&quot;什么是认</summary>
      
    
    
    
    
    <category term="SpringSecurity" scheme="http://example.com/tags/SpringSecurity/"/>
    
  </entry>
  
  <entry>
    <title>Redis学习与使用</title>
    <link href="http://example.com/2021/03/10/Redis%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2021/03/10/Redis%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2021-03-10T09:32:52.000Z</published>
    <updated>2021-03-12T13:38:36.074Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Redis学习与使用</strong></p><ol><li>win10安装</li></ol><p><a href="https://github.com/tporadowski/redis/releases">github地址</a></p><p><a href="https://www.runoob.com/redis/redis-install.html">菜鸟教程redis</a></p><p>启动</p><p><img src="Redis%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/20210310173203.png" alt="image-20210122171050363"></p><ol start="2"><li>redis可视化工具</li></ol><p><a href="https://www.cnblogs.com/aimu/p/7047671.html">博客园链接</a></p><p><img src="Redis%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/20210310173204.png" alt="image-20210122171218209"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ul><li>Spring Data Redis提供了一个工具类： RedisTemplate。里面 封装了对于Redis的五种数据结构的各种操作，包括如下：</li></ul><ol><li>redis Template.opsForValue()：操作字符串</li><li>redis.Template.opsForHash(): 操作hash</li><li>redis.Template.opsForList():操作list </li><li>redis.Template.opsForSet():操作set</li><li>redis.Template.opsForZSet():操作zset</li></ol><p>其他一些通用命令，如expire可通过redisTemplate.xx来直接调用</p><ul><li>5种结构</li></ul><ol><li>String：等同于java中的，Map&lt;String,String&gt;</li><li>list:等同于java中的，Map&lt;String,List<String>&gt;</li><li>set:等同于java中的，Map&lt;String,Set<String>&gt;</li><li>sort_set:等同于java中的，可排序的set</li><li>hash:等同于java中的，Map&lt;String,Map&lt;String,String&gt;&gt;</li></ol><h2 id="项目使用"><a href="#项目使用" class="headerlink" title="项目使用"></a>项目使用</h2><ol><li>首先开启redis服务</li><li>添加依赖</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--        配置redis--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>3.覆盖默认配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">#    配置redis</span></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">password:</span></span><br><span class="line">  <span class="attr">jedis:</span></span><br><span class="line">    <span class="attr">pool:</span></span><br><span class="line">      <span class="attr">max-idle:</span> <span class="number">9</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">-1</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">5000</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><ol start="4"><li>注入配置</li></ol><p>！！！  一般注入的是<code>StringRedisTemplate</code>，因为RedisTemplate需自定义序列化数据，不方便</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br></pre></td></tr></table></figure><h1 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h1><ol><li>forValue</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testRedis</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//存储数据并指定过期时间为2min</span></span><br><span class="line">    <span class="keyword">this</span>.redisTemplate.opsForValue().set(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;value1&quot;</span>,<span class="number">2</span>,TimeUnit.MINUTES);</span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    String val = <span class="keyword">this</span>.redisTemplate.opsForValue().get(<span class="string">&quot;key1&quot;</span>).toString();</span><br><span class="line">    System.out.println(<span class="string">&quot;val = &quot;</span>+ val);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>boundHash</li></ol><p><img src="Redis%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/20210310173205.png" alt="image-20210124163658885"></p><ol start="3"><li>一般在使用的时候会为key设置前缀，与以后的验证码加以区分，以便未维护</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    定义前缀信息区分邮箱有验证码</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_PREFIX = <span class="string">&quot;user:verify:&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//            获取redis保存的验证码校验</span></span><br><span class="line">            String valCode = <span class="keyword">this</span>.redisTemplate.opsForValue().get(<span class="string">&quot;KEY_PREFIX:&quot;</span> + email).toString();</span><br></pre></td></tr></table></figure><h1 id="项目代码"><a href="#项目代码" class="headerlink" title="项目代码"></a>项目代码</h1><ol><li><p>前端 vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注册--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;register_box&quot;&gt;</span><br><span class="line">    &lt;h1&gt;智易校园二手平台欢迎你&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;el-row :gutter&#x3D;&quot;20&quot;&gt;</span><br><span class="line">      &lt;el-col&gt;&lt;div class&#x3D;&quot;grid-content bg-purple&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;el-form :model&#x3D;&quot;ruleForm&quot; status-icon :rules&#x3D;&quot;rules&quot; ref&#x3D;&quot;ruleForm&quot; label-width&#x3D;&quot;100px&quot; class&#x3D;&quot;demo-ruleForm&quot; s&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;用户名&quot; prop&#x3D;&quot;userName&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;ruleForm.userName&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;学号&quot; prop&#x3D;&quot;stuNum&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;ruleForm.stuNum&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;性别&quot;&gt;</span><br><span class="line">            &lt;el-radio v-model&#x3D;&quot;ruleForm.sex&quot; label&#x3D;&quot;1&quot;&gt;男&lt;&#x2F;el-radio&gt;</span><br><span class="line">            &lt;el-radio v-model&#x3D;&quot;ruleForm.sex&quot; label&#x3D;&quot;2&quot;&gt;女&lt;&#x2F;el-radio&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;联系方式&quot; prop&#x3D;&quot;phone&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;tel&quot; v-model&#x3D;&quot;ruleForm.phone&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;所在校区&quot; prop&#x3D;&quot;options&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;block&quot;&gt;</span><br><span class="line">              &lt;el-cascader</span><br><span class="line">                placeholder&#x3D;&quot;试试搜索：校区&quot;</span><br><span class="line">                :options&#x3D;&quot;ruleForm.options&quot;</span><br><span class="line">                filterable&gt;&lt;&#x2F;el-cascader&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;密码&quot; prop&#x3D;&quot;pass&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;password&quot; v-model&#x3D;&quot;ruleForm.pass&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;确认密码&quot; prop&#x3D;&quot;checkPass&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;password&quot; v-model&#x3D;&quot;ruleForm.checkPass&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;邮箱&quot; prop&#x3D;&quot;email&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;email&quot; v-model&#x3D;&quot;ruleForm.email&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;验证码&quot; prop&#x3D;&quot;code&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;ruleForm.code&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;sendEmail&quot;&gt;发送验证码&lt;&#x2F;el-button&gt;</span><br><span class="line">            &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;submitForm(&#39;ruleForm&#39;)&quot;&gt;提交&lt;&#x2F;el-button&gt;</span><br><span class="line">            &lt;el-button @click&#x3D;&quot;resetForm(&#39;ruleForm&#39;)&quot;&gt;重置&lt;&#x2F;el-button&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;&#x2F;el-form&gt;</span><br><span class="line">      &lt;&#x2F;el-col&gt;</span><br><span class="line">    &lt;&#x2F;el-row&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import axios from &#39;axios&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Register&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    var validatePass &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;请输入密码&#39;))</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        if (value !&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">          var reg &#x3D; &#x2F;(?&#x3D;.*[0-9])(?&#x3D;.*[a-zA-Z]).&#123;8,30&#125;&#x2F;</span><br><span class="line">          if (!reg.test(value)) &#123;</span><br><span class="line">            callback(new Error(&#39;密码中必须包含字母、数字，至少8位，至多30&#39;))</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        callback()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    var validatePass2 &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;请再次输入密码&#39;))</span><br><span class="line">      &#125; else if (value !&#x3D;&#x3D; this.ruleForm.pass) &#123;</span><br><span class="line">        callback(new Error(&#39;两次输入密码不一致!&#39;))</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        callback()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    var checkUserName &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;请输入用户名&#39;))</span><br><span class="line">      &#125;</span><br><span class="line">      callback()</span><br><span class="line">    &#125;</span><br><span class="line">    var checkStuNum &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;请输入学号&#39;))</span><br><span class="line">      &#125;</span><br><span class="line">      callback()</span><br><span class="line">    &#125;</span><br><span class="line">    var checkPhone &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;手机号不可为空&#39;))</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        if (value !&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">          var reg &#x3D; &#x2F;^1[3456789]\d&#123;9&#125;$&#x2F;</span><br><span class="line">          if (!reg.test(value)) &#123;</span><br><span class="line">            callback(new Error(&#39;请输入有效的手机号码&#39;))</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        callback()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    var checkEmail &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;邮箱不可为空&#39;))</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        if (value !&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">          var reg &#x3D; &#x2F;^\w+((.\w+)|(-\w+))@[A-Za-z0-9]+((.|-)[A-Za-z0-9]+).[A-Za-z0-9]+$&#x2F;</span><br><span class="line">          if (!reg.test(value)) &#123;</span><br><span class="line">            callback(new Error(&#39;邮箱格式不正确，请输入有效的邮箱账号&#39;))</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return &#123;</span><br><span class="line">      ruleForm: &#123;</span><br><span class="line">        pass: &#39;&#39;,</span><br><span class="line">        checkPass: &#39;&#39;,</span><br><span class="line">        userName: &#39;&#39;,</span><br><span class="line">        stuNum: &#39;&#39;,</span><br><span class="line">        sex: &#39;1&#39;,</span><br><span class="line">        phone: &#39;&#39;,</span><br><span class="line">        email: &#39;&#39;,</span><br><span class="line">        code: &#39;&#39;,</span><br><span class="line">        options: [&#123;</span><br><span class="line">          value: &#39;hbmu&#39;,</span><br><span class="line">          label: &#39;湖北医药学院&#39;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            value: &#39;xnb&#39;,</span><br><span class="line">            label: &#39;校本部&#39;</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            value: &#39;dfxq&#39;,</span><br><span class="line">            label: &#39;东风校区&#39;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">      rules: &#123;</span><br><span class="line">        pass: [</span><br><span class="line">          &#123; required: true, validator: validatePass, trigger: &#39;blur&#39; &#125;</span><br><span class="line">        ],</span><br><span class="line">        checkPass: [</span><br><span class="line">          &#123; required: true, validator: validatePass2, trigger: &#39;blur&#39; &#125;</span><br><span class="line">        ],</span><br><span class="line">        userName: [</span><br><span class="line">          &#123; required: true, validator: checkUserName, trigger: &#39;blur&#39; &#125;</span><br><span class="line">        ],</span><br><span class="line">        stuNum: [</span><br><span class="line">          &#123;required: true, validator: checkStuNum, trigger: &#39;blur&#39;&#125;</span><br><span class="line">        ],</span><br><span class="line">        phone: [</span><br><span class="line">          &#123;required: true, validator: checkPhone, trigger: &#39;blur&#39;&#125;</span><br><span class="line">        ],</span><br><span class="line">        email: [</span><br><span class="line">          &#123;required: true, validator: checkEmail, trigger: &#39;blur&#39;&#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    submitForm (formName) &#123;</span><br><span class="line">      var vm &#x3D; this</span><br><span class="line">      var formData &#x3D; new FormData()</span><br><span class="line">      formData.append(&#39;userName&#39;, this.ruleForm.userName)</span><br><span class="line">      formData.append(&#39;pass&#39;, this.ruleForm.pass)</span><br><span class="line">      formData.append(&#39;stuNum&#39;, this.ruleForm.stuNum)</span><br><span class="line">      formData.append(&#39;sex&#39;, this.ruleForm.sex)</span><br><span class="line">      formData.append(&#39;phone&#39;, this.ruleForm.phone)</span><br><span class="line">      formData.append(&#39;email&#39;, this.ruleForm.email)</span><br><span class="line">      formData.append(&#39;code&#39;, this.ruleForm.code)</span><br><span class="line">      axios.post(&#39;http:&#x2F;&#x2F;127.0.0.1:9999&#x2F;WEhbmu&#x2F;register&#39;, formData).then(res &#x3D;&gt; &#123;</span><br><span class="line">        console.log(res)</span><br><span class="line">        if (res.data &#x3D;&#x3D;&#x3D; &#39;success&#39;) &#123;</span><br><span class="line">          vm.$message(&#123;</span><br><span class="line">            message: &#39;注册成功，请登录&#39;,</span><br><span class="line">            type: &#39;success&#39;</span><br><span class="line">          &#125;)</span><br><span class="line">          vm.$router.push(&#39;&#x2F;login&#39;)</span><br><span class="line">        &#125;</span><br><span class="line">        if (res.data &#x3D;&#x3D;&#x3D; &#39;error&#39;) &#123;</span><br><span class="line">          vm.$message(&#123;</span><br><span class="line">            message: &#39;学号重复请检查或联系管理员&#39;,</span><br><span class="line">            type: &#39;error&#39;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        if (res.data &#x3D;&#x3D;&#x3D; &#39;codeError&#39;) &#123;</span><br><span class="line">          vm.$message(&#123;</span><br><span class="line">            message: &#39;验证码不正确&#39;,</span><br><span class="line">            type: &#39;error&#39;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    resetForm (formName) &#123;</span><br><span class="line">      this.$refs[formName].resetFields()</span><br><span class="line">    &#125;,</span><br><span class="line">    sendEmail (email) &#123;</span><br><span class="line">      var formData &#x3D; new FormData()</span><br><span class="line">      var vm &#x3D; this</span><br><span class="line">      formData.append(&#39;email&#39;, this.ruleForm.email)</span><br><span class="line">      axios.post(&#39;http:&#x2F;&#x2F;127.0.0.1:9999&#x2F;WEhbmu&#x2F;sendEmail&#39;, formData).then(res &#x3D;&gt; &#123;</span><br><span class="line">        vm.$message(&#123;</span><br><span class="line">          message: &#39;验证码发送成功，请及时查收&#39;,</span><br><span class="line">          type: &#39;success&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#register_box&#123;</span><br><span class="line">  border: 1px grey solid;</span><br><span class="line">  margin: 5% auto;</span><br><span class="line">  width: 20%;</span><br><span class="line">  padding: 20px 20px;</span><br><span class="line">  border-radius: 20px;</span><br><span class="line">  box-shadow: 0px 0px 20px grey;</span><br><span class="line">&#125;</span><br><span class="line">h1&#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #63b86b;</span><br><span class="line">  margin-left: 3px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure></li><li><p>controller</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.huangl.project.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.core.util.TimeUtil;</span><br><span class="line"><span class="keyword">import</span> com.huangl.project.config.RedisConfig;</span><br><span class="line"><span class="keyword">import</span> com.huangl.project.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.huangl.project.service.UserService;</span><br><span class="line"><span class="keyword">import</span> io.lettuce.core.ScriptOutputType;</span><br><span class="line"><span class="keyword">import</span> io.netty.util.internal.StringUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.BoundHashOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.ValueOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.MailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSenderImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.spring5.context.SpringContextUtils;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/WEhbmu&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    定义前缀信息区分邮箱有验证码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_PREFIX = <span class="string">&quot;user:verify:&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 实现用户注册功能</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="meta">@CrossOrigin</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">saveUser</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;userName&quot;)</span> String userName,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;pass&quot;)</span> String pass,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;stuNum&quot;)</span> Integer stuNum,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;sex&quot;)</span> Integer sex,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;phone&quot;)</span> String phone,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;code&quot;)</span> String code,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;email&quot;)</span> String email</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">this</span>.userService.queryAllByStuNum(stuNum);</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(users)) &#123;</span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setUserName(userName);</span><br><span class="line">            user.setPass(pass);</span><br><span class="line">            user.setStuNum(stuNum);</span><br><span class="line">            user.setPhone(phone);</span><br><span class="line"></span><br><span class="line"><span class="comment">//            获取redis保存的验证码校验</span></span><br><span class="line">            String valCode = <span class="keyword">this</span>.redisTemplate.opsForValue().get(<span class="string">&quot;KEY_PREFIX:&quot;</span> + email).toString();</span><br><span class="line">            <span class="keyword">if</span> (valCode.equals(code)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (sex == <span class="number">1</span>) &#123;</span><br><span class="line">                    user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                user.setSex(<span class="string">&quot;女&quot;</span>);</span><br><span class="line"></span><br><span class="line">                user.setSchool(<span class="string">&quot;湖北医药学院&quot;</span>);</span><br><span class="line">                user.setArea(<span class="string">&quot;校本部&quot;</span>);</span><br><span class="line">                user.setStuPic(<span class="string">&quot;http://125&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">this</span>.userService.saveUser(user);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;codeError&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> email 利用smtp实现邮箱验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sendEmail&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendEmail</span><span class="params">(<span class="meta">@RequestParam(value = &quot;email&quot;)</span> String email)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 测试邮箱验证</span></span><br><span class="line">        <span class="keyword">int</span> s = (<span class="keyword">int</span>) ((Math.random() * <span class="number">9</span> + <span class="number">1</span>) * <span class="number">100000</span>);</span><br><span class="line">        String code = String.valueOf(s);</span><br><span class="line">        SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        message.setSubject(<span class="string">&quot;欢迎注册校园二手交易平台，请查收验证码&quot;</span>);</span><br><span class="line">        message.setText(<span class="string">&quot;尊敬的用户,您好:\n&quot;</span></span><br><span class="line">                + <span class="string">&quot;\n本次请求的邮件验证码为:&quot;</span> + code + <span class="string">&quot;,本验证码2分钟内有效，请及时输入。（请勿泄露此验证码）\n&quot;</span></span><br><span class="line">                + <span class="string">&quot;\n如非本人操作，请忽略该邮件。\n(这是一封自动发送的邮件，请不要直接回复）&quot;</span>);</span><br><span class="line">        message.setFrom(<span class="string">&quot;wehbmu@qq.com&quot;</span>);</span><br><span class="line">        message.setTo(email);</span><br><span class="line">        javaMailSender.send(message);</span><br><span class="line"></span><br><span class="line"><span class="comment">//向redis里存入数据并设置过期事件2min</span></span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.opsForValue().set(<span class="string">&quot;KEY_PREFIX:&quot;</span> + email, code, <span class="number">2</span>, TimeUnit.MINUTES);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stuNum</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 实现登录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@CrossOrigin</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;stuNum&quot;)</span> String stuNum,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;password&quot;)</span> String password</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">this</span>.userService.queryUserByUserNameAndPassword(stuNum, password);</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(users)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>service</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.huangl.project.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.huangl.project.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.huangl.project.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 实现用户注册</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userMapper.saveUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryAllByStuNum</span><span class="params">(Integer stuNum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.queryAllByStuNum(stuNum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stuNum</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * 实现登录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  List&lt;User&gt; <span class="title">queryUserByUserNameAndPassword</span><span class="params">(String stuNum, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.queryUserByUserNameAndPassword(stuNum,password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>mapper</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.huangl.project.mapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.huangl.project.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert(&quot;INSERT into `USER` VALUES(#&#123;id&#125;,#&#123;userName&#125;,#&#123;phone&#125;,#&#123;pass&#125;,#&#123;stuNum&#125;,#&#123;sex&#125;,#&#123;school&#125;,#&#123;area&#125;,#&#123;stuPic&#125;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where stuNum like #&#123;stuNum&#125;&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryAllByStuNum</span><span class="params">(Integer stuNum)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where stuNum like #&#123;stuNum&#125; and pass like #&#123;password&#125;&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryUserByUserNameAndPassword</span><span class="params">(String stuNum, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Redis学习与使用&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;win10安装&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tporadowski/redis/releases&quot;&gt;github地址&lt;/a&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="redis" scheme="http://example.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>centos7.5安装Mysql8，并本地连接</title>
    <link href="http://example.com/2021/03/10/centos7-5%E5%AE%89%E8%A3%85Mysql8%EF%BC%8C%E5%B9%B6%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5/"/>
    <id>http://example.com/2021/03/10/centos7-5%E5%AE%89%E8%A3%85Mysql8%EF%BC%8C%E5%B9%B6%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5/</id>
    <published>2021-03-10T08:48:14.000Z</published>
    <updated>2021-03-22T07:35:19.049Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装centos7-5"><a href="#安装centos7-5" class="headerlink" title="安装centos7.5"></a>安装centos7.5</h1><h1 id="安装MySQL8-0"><a href="#安装MySQL8-0" class="headerlink" title="安装MySQL8.0"></a>安装MySQL8.0</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.下载并添加存储库</span></span><br><span class="line">sudo yum localinstall https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm</span><br><span class="line">（如果是在centos8中安装</span><br><span class="line">sudo yum localinstall https://dev.mysql.com/get/mysql80-community-release-el8-1.noarch.rpm</span><br><span class="line">）</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 安装MySQL8.0包</span></span><br><span class="line">（如果是在centos8中安装先执行`yum module disable mysql`）</span><br><span class="line">yum install mysql-community-server</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 重载所有修改过的配置文件</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4.开启服务</span></span><br><span class="line">systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 5.开机自启</span></span><br><span class="line">systemctl enable mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 6.获取初始密码</span></span><br><span class="line">grep &#x27;password&#x27; /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 7.登录mysql</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 8.设置密码强度为低级</span></span><br><span class="line">set global validate_password.policy=0;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 9.设置密码长度</span></span><br><span class="line">set global validate_password.length=4;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10.修改本地密码</span></span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 11.退出并用新密码登录</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 12.创建用户</span></span><br><span class="line">create user &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 13.允许远程连接</span></span><br><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; with grant option;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 14.刷新权限</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h1 id="本地连接虚拟机中的MySQL8-0"><a href="#本地连接虚拟机中的MySQL8-0" class="headerlink" title="本地连接虚拟机中的MySQL8.0"></a>本地连接虚拟机中的MySQL8.0</h1><blockquote><p>如果配置到上面直接navicate连接的话会报错，因为8.0和5.x的密码策略不同</p></blockquote><p><img src="centos7-5%E5%AE%89%E8%A3%85Mysql8%EF%BC%8C%E5%B9%B6%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5/image-20210310170043956.png" alt="image-20210310170043956"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上网搜索解决方案，网上说出现这种情况的原因是：mysql8 之前的版本中加密规则是mysql_native_password,而在mysql8之后,加密规则是caching_sha2_password, </span><br></pre></td></tr></table></figure><p>8.0解决方法</p><ol><li>更新navicate驱动；</li><li>修改mysql密码策略；</li></ol><p>法二解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">1.登录mysql</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">2.</span></span><br><span class="line">use mysql;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">3.修改加密规则</span></span><br><span class="line">alter user &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27; password expire never;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">4.更新用户密码</span></span><br><span class="line">alter user &#x27;root&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">5.刷新权限</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>此时连接就是没有问题了</p><h1 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h1><blockquote><p> 由于端口3306默认未开放，方法关闭防火墙，或者是开放3306端口</p></blockquote><p>由于安全考虑，选择开放3306端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看防火墙状态</span></span><br><span class="line">firewall-cmd --state</span><br><span class="line">或  systemctl status firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">若防火墙关闭则开启</span></span><br><span class="line">systemctl start firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">开启3306端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line"><span class="meta">#</span><span class="bash">--zone=public：表示作用域为公共</span></span><br><span class="line"><span class="meta">#</span><span class="bash">--add-port=3306/tcp：添加tcp协议的端口3306</span></span><br><span class="line"><span class="meta">#</span><span class="bash">--permanent：永久生效，若无此参数配置重启后失效</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">重启防火墙</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line">或systemctl restart firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">移除端口</span></span><br><span class="line">firewall-cmd -permanent --remove-port=3306/tcp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看端口是否开放</span></span><br><span class="line">firewall-cmd --query-port=3306/tcp</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装centos7-5&quot;&gt;&lt;a href=&quot;#安装centos7-5&quot; class=&quot;headerlink&quot; title=&quot;安装centos7.5&quot;&gt;&lt;/a&gt;安装centos7.5&lt;/h1&gt;&lt;h1 id=&quot;安装MySQL8-0&quot;&gt;&lt;a href=&quot;#安装MySQL</summary>
      
    
    
    
    <category term="配置" scheme="http://example.com/categories/%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="centos7.5" scheme="http://example.com/tags/centos7-5/"/>
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Vesper脚手架搭建</title>
    <link href="http://example.com/2021/02/25/Vesper%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2021/02/25/Vesper%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/</id>
    <published>2021-02-25T01:40:21.000Z</published>
    <updated>2021-03-12T13:39:48.689Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Vesper脚手架搭建</strong></p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h2 id="创建项目com-vesper-base"><a href="#创建项目com-vesper-base" class="headerlink" title="创建项目com.vesper.base"></a>创建项目com.vesper.base</h2><h2 id="添加相关依赖"><a href="#添加相关依赖" class="headerlink" title="添加相关依赖"></a>添加相关依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.vesper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>base<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-oauth2-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置SMTP邮箱--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置redis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        alibaba连接--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        pagehelper所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置MybatisPlus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.75<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        Mybatis-Plus代码自动生成所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="覆盖相关配置"><a href="#覆盖相关配置" class="headerlink" title="覆盖相关配置"></a>覆盖相关配置</h2><blockquote><p>在这里application.properties中配置公共项</p><p>在application-dev.properties中配置测试环境下的配置项</p><p>在application-dev.properties中配置生产环境下</p><p>! 通过spring.profiles.active=dev  来使用测试环境的配置项</p></blockquote><p>①application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动端口配置</span></span><br><span class="line"><span class="meta">server.port</span>=<span class="string">2006</span></span><br><span class="line"><span class="comment"># session的失效时间</span></span><br><span class="line"><span class="meta">server.servlet.session.timeout</span>=<span class="string">1800</span></span><br><span class="line"><span class="comment"># 日期格式化</span></span><br><span class="line"><span class="meta">spring.jackson.date-format</span>=<span class="string">yyyy-MM-dd HH:mm:ss</span></span><br><span class="line"><span class="meta">spring.jackson.time-zone</span>=<span class="string">GMT+8</span></span><br><span class="line"><span class="comment"># 定义加载的配置文件</span></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pagehelper配置</span></span><br><span class="line"><span class="comment">## 指定分页插件使用何种语言,不指定则自动识别</span></span><br><span class="line"><span class="meta">pagehelper.helper-dialect</span>=<span class="string">mysql</span></span><br><span class="line"><span class="comment">## 分页合理化参数,设为true,则当pageNum&lt;0时,会查询第一页</span></span><br><span class="line"><span class="meta">pagehelper.reasonable</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 支持通过Mapper接口参数来传递分页参数</span></span><br><span class="line"><span class="meta">pagehelper.support-methods-arguments</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 用于从对象中工具属性名取值</span></span><br><span class="line"><span class="meta">pagehelper.params</span>=<span class="string">count=countSql</span></span><br></pre></td></tr></table></figure><p> ②application-dev.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置SMTP服务</span></span><br><span class="line"><span class="meta">spring.mail.default-encoding</span>=<span class="string">utf-8</span></span><br><span class="line"><span class="meta">spring.mail.host</span>=<span class="string">smtp.qq.com</span></span><br><span class="line"><span class="meta">spring.mail.protocol</span>=<span class="string">smtp</span></span><br><span class="line"><span class="comment">## 发送端的用户名邮箱</span></span><br><span class="line"><span class="meta">spring.mail.username</span>=<span class="string">wehbmu@qq.com</span></span><br><span class="line"><span class="comment">## 发送端的密码</span></span><br><span class="line"><span class="meta">spring.mail.password</span>=<span class="string">zdqcvphkicqlbcgh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置redis</span></span><br><span class="line"><span class="comment">## 连接工厂使用的数据库索引</span></span><br><span class="line"><span class="meta">spring.redis.database</span>=<span class="string">0</span></span><br><span class="line"><span class="comment">## redis服务器主机</span></span><br><span class="line"><span class="meta">spring.redis.host</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="comment">## redis服务器登录密码</span></span><br><span class="line"><span class="meta">spring.redis.password</span>=<span class="string"></span></span><br><span class="line"><span class="comment">## 池中空闲连接的最大数量,使用负值表示无限数量的空闲连接</span></span><br><span class="line"><span class="meta">spring.redis.jedis.pool.max-idle</span>=<span class="string">9</span></span><br><span class="line"><span class="comment">## 在池消耗时,在抛出异常前连接分配应阻塞的最长时间.使用负值无限期阻止</span></span><br><span class="line"><span class="meta">spring.redis.jedis.pool.max-wait</span>=<span class="string">-1</span></span><br><span class="line"><span class="comment">## 目标时池中维护的最小空闲连接数.只在为正时生效</span></span><br><span class="line"><span class="meta">spring.redis.jedis.pool.min-idle</span>=<span class="string">0</span></span><br><span class="line"><span class="comment">## 连接超时</span></span><br><span class="line"><span class="meta">spring.redis.timeout</span>=<span class="string">5000</span></span><br><span class="line"><span class="comment">## Redis服务器端口</span></span><br><span class="line"><span class="meta">spring.redis.port</span>=<span class="string">6379</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库连接配置</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/db_boot_base?serverTimezone=GMT%2b8&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="comment">## 在连接归还到连接池时是否测试该连接</span></span><br><span class="line"><span class="meta">spring.datasource.test-on-return</span>=<span class="string">false</span></span><br><span class="line"><span class="comment">## 获取连接时验证,影响性能</span></span><br><span class="line"><span class="meta">spring.datasource.test-on-borrow</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">spring.datasource.validation-query</span>=<span class="string">SELECT 1 FROM DUAL</span></span><br><span class="line"><span class="comment">## 空闲连接回收的时间间隔,与test-while-idle一起使用,设置5min</span></span><br><span class="line"><span class="meta">spring.datasource.time-between-eviction-runs-millis</span>=<span class="string">300000</span></span><br><span class="line"><span class="meta">spring.datasource.test-while-idle</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 连接池空闲连接的有效时间,设置30min</span></span><br><span class="line"><span class="meta">spring.datasource.min-evictable-idle-time-millis</span>=<span class="string">1800000</span></span><br><span class="line"><span class="meta">spring.datasource.initial-size</span>=<span class="string">5</span></span><br><span class="line"><span class="comment">## 指定连接池中最大的活跃连接数</span></span><br><span class="line"><span class="meta">spring.datasource.max-active</span>=<span class="string">50</span></span><br><span class="line"><span class="comment">## 指定连接池等待连接返回的最大等待时间,毫秒时间</span></span><br><span class="line"><span class="meta">spring.datasource.max-wait</span>=<span class="string">60000</span></span><br><span class="line"><span class="comment">## 指定必须保持连接的最小值</span></span><br><span class="line"><span class="meta">spring.datasource.min-idle</span>=<span class="string">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Mybatis-Plus</span></span><br><span class="line"><span class="comment">## 将带有下划线的表字段映射未驼峰格式的实体类属性</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.map-underscore-to-camel-case</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 自动映射策略,指定Mybatis是否且如何来自动映射数据库字段与对象的属性</span></span><br><span class="line"><span class="comment">### full 对所有的resultMap都进行自动映射</span></span><br><span class="line"><span class="comment">### partial 支队非嵌套的resultMap进行自动映射</span></span><br><span class="line"><span class="comment">### none 不启用自动映射</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.auto-mapping-behavior</span>=<span class="string">full</span></span><br><span class="line"><span class="comment">## 配置控制台打印完整带参数的SQL语句</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"><span class="comment">## 可以配置多个mapper.xml路径,逗号分隔</span></span><br><span class="line"><span class="meta">mybatis-plus.mapper-locations</span>=<span class="string">classpath:mapper/*Mapper.xml</span></span><br><span class="line"><span class="comment">## 逻辑删除配置 删除前</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.logic-not-delete-value</span>=<span class="string">1</span></span><br><span class="line"><span class="comment">## 逻辑删除配置 删除后</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.logic-delete-value</span>=<span class="string">0</span></span><br><span class="line"><span class="comment">## 驼峰命名</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.table-underline</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 设置实体扫描类,多个package用逗号或分号分隔</span></span><br><span class="line"><span class="meta">mybatis-plus.type-aliases-package</span>=<span class="string">com.vesper.base.entity</span></span><br><span class="line"><span class="comment">## 数据库相关配置</span></span><br><span class="line"><span class="comment">### 主键类型 AUTO数据库自增 INPUT用户输入ID  ID_WORKER全局唯一ID(数字) UUID全局唯一ID(UUID)</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.id-type</span>=<span class="string">input</span></span><br><span class="line"><span class="comment">### 字段策略 ignore忽略判断  not_null非null判断    not_empty非空判断</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.select-strategy</span>=<span class="string">not_null</span></span><br><span class="line"><span class="comment">## 驼峰下划线转换</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.column-underline</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.banner</span>=<span class="string">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 热部署生效</span></span><br><span class="line"><span class="meta">spring.devtools.restart.enabled</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片上传设置</span></span><br><span class="line"><span class="meta">vesper.upload.photo.sufix</span>=<span class="string">.jpg,.png,.gif,.jpeg</span></span><br><span class="line"><span class="meta">vesper.upload.photo.maxsize</span>=<span class="string">1024</span></span><br><span class="line"><span class="meta">vesper.upload.photo.path</span>=<span class="string">E:/IntellijTry/vesper/base/src/main/resources/upload</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库备份设置</span></span><br><span class="line"><span class="meta">vesper.database.backup.dir</span>=<span class="string">E:/IntellijTry/vesper/base/src/main/resources/backup</span></span><br><span class="line"><span class="meta">vesper.database.backup.username</span>=<span class="string">vesper</span></span><br><span class="line"><span class="meta">vesper.database.backup.password</span>=<span class="string">vesper</span></span><br><span class="line"><span class="meta">vesper.database.backup.database.name</span>=<span class="string">db_boot_base</span></span><br></pre></td></tr></table></figure><h2 id="启动热部署"><a href="#启动热部署" class="headerlink" title="启动热部署"></a>启动热部署</h2><ol><li><p>所需依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>勾选</p><p><img src="Vesper%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/image-20210225103448233.png" alt="image-20210225103448233"></p></li><li><p><code>ctrl+shift+alt+/</code>点击registry</p><p><img src="Vesper%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/image-20210225103645582.png" alt="image-20210225103645582"></p></li><li><p>勾选如下</p><p><img src="Vesper%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/image-20210225103715652.png" alt="image-20210225103715652"></p><p>5.配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 热部署配置</span></span><br><span class="line"><span class="comment">## 关闭缓存即时刷新</span></span><br><span class="line"><span class="meta">spring.thymeleaf.cache</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 热部署生效</span></span><br><span class="line"><span class="meta">spring.devtools.restart.enabled</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="自定义site-properties配置网站基础信息"><a href="#自定义site-properties配置网站基础信息" class="headerlink" title="自定义site.properties配置网站基础信息"></a>自定义site.properties配置网站基础信息</h2><p>​    1. site.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#网站基础信息配置</span></span><br><span class="line"><span class="meta">wehbmu.site.name</span>=<span class="string">Vesper\u811a\u624b\u67b6</span></span><br><span class="line"><span class="meta">wehbmu.site.url</span>=<span class="string">https://wehbmu.com</span></span><br></pre></td></tr></table></figure><p>2.新建SiteConfig网站基础配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这是网站基础配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> *Component:把普通的pojo实例化到spring容器中,相当于配置文件中的&lt;bean id=&quot;&quot; class=&quot;&quot; /&gt;</span></span><br><span class="line"><span class="comment"> * PropertySource:加载指定配置文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@PropertySource(value = &quot;classpath:site.properties&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SiteConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;wehbmu.site.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String siteName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;wehbmu.site.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String siteUrl;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSiteName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> siteName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSiteName</span><span class="params">(String siteName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.siteName = siteName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSiteUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> siteUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSiteUrl</span><span class="params">(String siteUrl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.siteUrl = siteUrl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>简单使用一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/vesper/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SiteConfig siteConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用springboot自带的日志</span></span><br><span class="line">    <span class="keyword">private</span> Logger log = LoggerFactory.getLogger(UserController.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String webName = siteConfig.getSiteName();</span><br><span class="line">        <span class="comment">//打印日志</span></span><br><span class="line">        log.info(<span class="string">&quot;webName=&quot;</span>+webName);</span><br><span class="line">        <span class="comment">//打印日志warn</span></span><br><span class="line">        log.warn();</span><br><span class="line">        String wn = <span class="keyword">this</span>.siteConfig.getSiteName()+<span class="string">&quot;23333&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> wn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置MybatisPlus自动生成代码"><a href="#配置MybatisPlus自动生成代码" class="headerlink" title="配置MybatisPlus自动生成代码"></a>配置MybatisPlus自动生成代码</h2><ol><li>依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在启动器同级建立<code>MysqlGenerator</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> * Mybatis-Plus代码自动生成器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MysqlGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 读取控制台内容</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">scanner</span><span class="params">(String tip)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        StringBuilder help = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        help.append(<span class="string">&quot;请输入&quot;</span> + tip + <span class="string">&quot;：&quot;</span>);</span><br><span class="line">        System.out.println(help.toString());</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext()) &#123;</span><br><span class="line">            String ipt = scanner.next();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotBlank(ipt)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ipt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MybatisPlusException(<span class="string">&quot;请输入正确的&quot;</span> + tip + <span class="string">&quot;！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        gc.setOutputDir(projectPath + <span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;jobob&quot;</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// gc.setSwagger2(true); 实体属性 Swagger2 注解</span></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/db_boot_base?serverTimezone=GMT%2b8&amp;useUnicode=true&amp;characterEncoding=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">// dsc.setSchemaName(&quot;public&quot;);</span></span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setModuleName(scanner(<span class="string">&quot;模块名&quot;</span>));</span><br><span class="line">        pc.setParent(<span class="string">&quot;com.vesper.base&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义配置</span></span><br><span class="line">        InjectionConfig cfg = <span class="keyword">new</span> InjectionConfig() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// to do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果模板引擎是 freemarker</span></span><br><span class="line">        String templatePath = <span class="string">&quot;/templates/mapper.xml.ftl&quot;</span>;</span><br><span class="line">        <span class="comment">// 如果模板引擎是 velocity</span></span><br><span class="line">        <span class="comment">// String templatePath = &quot;/templates/mapper.xml.vm&quot;;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义输出配置</span></span><br><span class="line">        List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！</span></span><br><span class="line">                <span class="keyword">return</span> projectPath + <span class="string">&quot;/src/main/resources/mapper/&quot;</span> + pc.getModuleName()</span><br><span class="line">                        + <span class="string">&quot;/&quot;</span> + tableInfo.getEntityName() + <span class="string">&quot;Mapper&quot;</span> + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        cfg.setFileCreate(new IFileCreate() &#123;</span></span><br><span class="line"><span class="comment">            @Override</span></span><br><span class="line"><span class="comment">            public boolean isCreate(ConfigBuilder configBuilder, FileType fileType, String filePath) &#123;</span></span><br><span class="line"><span class="comment">                // 判断自定义文件夹是否需要创建</span></span><br><span class="line"><span class="comment">                checkDir(&quot;调用默认方法创建的目录，自定义目录用&quot;);</span></span><br><span class="line"><span class="comment">                if (fileType == FileType.MAPPER) &#123;</span></span><br><span class="line"><span class="comment">                    // 已经生成 mapper 文件判断存在，不想重新生成返回 false</span></span><br><span class="line"><span class="comment">                    return !new File(filePath).exists();</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                // 允许生成模板文件</span></span><br><span class="line"><span class="comment">                return true;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line">        mpg.setCfg(cfg);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置模板</span></span><br><span class="line">        TemplateConfig templateConfig = <span class="keyword">new</span> TemplateConfig();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置自定义输出模板</span></span><br><span class="line">        <span class="comment">//指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别</span></span><br><span class="line">        <span class="comment">// templateConfig.setEntity(&quot;templates/entity2.java&quot;);</span></span><br><span class="line">        <span class="comment">// templateConfig.setService();</span></span><br><span class="line">        <span class="comment">// templateConfig.setController();</span></span><br><span class="line"></span><br><span class="line">        templateConfig.setXml(<span class="keyword">null</span>);</span><br><span class="line">        mpg.setTemplate(templateConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setSuperEntityClass(<span class="string">&quot;你自己的父类实体,没有就不用设置!&quot;</span>);</span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 公共父类</span></span><br><span class="line">        strategy.setSuperControllerClass(<span class="string">&quot;你自己的父类控制器,没有就不用设置!&quot;</span>);</span><br><span class="line">        <span class="comment">// 写于父类中的公共字段</span></span><br><span class="line">        strategy.setSuperEntityColumns(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        strategy.setInclude(scanner(<span class="string">&quot;表名，多个英文逗号分割&quot;</span>).split(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">&quot;_&quot;</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line">        mpg.setTemplateEngine(<span class="keyword">new</span> FreemarkerTemplateEngine());</span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>运行<code>MysqlGenerator</code>即可</li></ol><h2 id="解决跨域问题CorsFilter"><a href="#解决跨域问题CorsFilter" class="headerlink" title="解决跨域问题CorsFilter"></a>解决跨域问题CorsFilter</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解决跨域问题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@WebFilter(urlPatterns = &quot;/*&quot;)</span></span><br><span class="line"><span class="meta">@Order(-99999)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsFilter</span> <span class="keyword">extends</span> <span class="title">HttpFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">2386571986045107652L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String OPTIONS_METHOD = <span class="string">&quot;OPTIONS&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(HttpServletRequest req, HttpServletResponse res, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String origin = req.getHeader(HttpHeaders.ORIGIN);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(origin)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端的域</span></span><br><span class="line">            res.addHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, origin);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端提交的Header</span></span><br><span class="line">            String requestHeaders = req.getHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS);</span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(requestHeaders)) &#123;</span><br><span class="line">                res.addHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, requestHeaders);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端访问的Header</span></span><br><span class="line">            res.addHeader(HttpHeaders.ACCESS_CONTROL_EXPOSE_HEADERS, <span class="string">&quot;Cache-Control, Content-Language, Content-Type, Expires, Last-Modified, Pragma&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端携带凭证信息</span></span><br><span class="line">            res.addHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端请求方法</span></span><br><span class="line">            res.addHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, <span class="string">&quot;GET, POST, PUT, OPTIONS, DELETE&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (OPTIONS_METHOD.equalsIgnoreCase(req.getMethod())) &#123;</span><br><span class="line">                res.setStatus(HttpServletResponse.SC_NO_CONTENT);</span><br><span class="line">                res.setContentType(MediaType.TEXT_HTML_VALUE);</span><br><span class="line">                res.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                res.setContentLength(<span class="number">0</span>);</span><br><span class="line">                res.addHeader(HttpHeaders.ACCESS_CONTROL_MAX_AGE, <span class="string">&quot;1800&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.doFilter(req, res, chain);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mybatis-Plus实现Id-amp-时间自动填充"><a href="#Mybatis-Plus实现Id-amp-时间自动填充" class="headerlink" title="Mybatis-Plus实现Id&amp;时间自动填充"></a>Mybatis-Plus实现Id&amp;时间自动填充</h2><blockquote><p>每个实体一般都有createTime和updateTime</p></blockquote><ol><li>在相关实体类中添加<code>@TableField</code>注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> * 基础实体公共属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseEntity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在insert操作时,自动创建id</span></span><br><span class="line"><span class="comment">     * 在handler&gt;MyMetaObjectHandler中具体实现</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自增策略,当产生update和create操作时,自动复制updateTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br></pre></td></tr></table></figure><ol start="2"><li>在handler文件夹下创建接口<code>MyMetaObjectHandler</code>具体实现<strong>自动填充的值</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> * 实现createTime,updateTime自增的实现接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;start insert field......&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;createTime&quot;</span>, LocalDateTime.now(),metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,LocalDateTime.now(),metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;id&quot;</span>, UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,LocalDateTime.now(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>此时每次在写入是,id,createTime,updateTime自动填充</li><li>每次修改是,updateTime自动填充</li></ul><h2 id="自定义错误码统一处理类"><a href="#自定义错误码统一处理类" class="headerlink" title="自定义错误码统一处理类"></a>自定义错误码统一处理类</h2><blockquote><p>bean&gt;CodeMsg</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 错误码统一处理类，所有的错误码统一定义在这里</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeMsg</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;<span class="comment">//错误码</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;<span class="comment">//错误信息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造函数私有化即单例模式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">CodeMsg</span><span class="params">(<span class="keyword">int</span> code,String msg)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通用错误码定义</span></span><br><span class="line">    <span class="comment">//处理成功消息码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg SUCCESS = <span class="keyword">new</span> CodeMsg(<span class="number">0</span>, <span class="string">&quot;success&quot;</span>);</span><br><span class="line">    <span class="comment">//非法数据错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg DATA_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">1</span>, <span class="string">&quot;非法数据！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg CPACHA_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">2</span>, <span class="string">&quot;验证码不能为空！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg VALIDATE_ENTITY_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">3</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg SESSION_EXPIRED = <span class="keyword">new</span> CodeMsg(-<span class="number">4</span>, <span class="string">&quot;会话已失效，请刷新页面重试！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg CPACHA_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">5</span>, <span class="string">&quot;验证码错误！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg USER_SESSION_EXPIRED = <span class="keyword">new</span> CodeMsg(-<span class="number">6</span>, <span class="string">&quot;还未登录或会话失效，请重新登录！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg UPLOAD_PHOTO_SUFFIX_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">7</span>, <span class="string">&quot;图片格式不正确！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg UPLOAD_PHOTO_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">8</span>, <span class="string">&quot;图片上传错误！&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台管理类错误码</span></span><br><span class="line">    <span class="comment">//用户管理类错误</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USERNAME_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">2000</span>, <span class="string">&quot;用户名不能为空！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_PASSWORD_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">2001</span>, <span class="string">&quot;密码不能为空！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_NO_RIGHT = <span class="keyword">new</span> CodeMsg(-<span class="number">2002</span>, <span class="string">&quot;您所属的角色没有该权限！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//登录类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USERNAME_NO_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">3000</span>, <span class="string">&quot;该用户名不存在！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_PASSWORD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">3001</span>, <span class="string">&quot;密码错误！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_UNABLE = <span class="keyword">new</span> CodeMsg(-<span class="number">3002</span>, <span class="string">&quot;该用户已被冻结，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_ROLE_UNABLE = <span class="keyword">new</span> CodeMsg(-<span class="number">3003</span>, <span class="string">&quot;该用户所属角色状态不可用，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_ROLE_AUTHORITES_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">3004</span>, <span class="string">&quot;该用户所属角色无可用权限，请联系管理员！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台菜单管理类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_ADD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">4000</span>, <span class="string">&quot;菜单添加失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_EDIT_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">4001</span>, <span class="string">&quot;菜单编辑失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_ID_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">4002</span>, <span class="string">&quot;菜单ID不能为空！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_ID_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">4003</span>, <span class="string">&quot;菜单ID错误！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_DELETE_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">4004</span>, <span class="string">&quot;改菜单下有子菜单，不允许删除！&quot;</span>);</span><br><span class="line">    <span class="comment">//后台角色管理类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_ROLE_ADD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">5000</span>, <span class="string">&quot;角色添加失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_ROLE_NO_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">5001</span>, <span class="string">&quot;该角色不存在！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_ROLE_EDIT_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">5002</span>, <span class="string">&quot;角色编辑失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_ROLE_DELETE_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">5003</span>, <span class="string">&quot;该角色下存在用户信息，不可删除！&quot;</span>);</span><br><span class="line">    <span class="comment">//后台用户管理类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_ROLE_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">6000</span>, <span class="string">&quot;请选择用户所属角色！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USERNAME_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">6001</span>, <span class="string">&quot;该用户名已存在，请换一个试试！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USE_ADD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">6002</span>, <span class="string">&quot;用户添加失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USE_NO_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">6003</span>, <span class="string">&quot;用户不存在！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USE_EDIT_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">6004</span>, <span class="string">&quot;用户编辑失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USE_DELETE_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">6005</span>, <span class="string">&quot;该用户存在关联数据，不允许删除！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台用户修改密码类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_UPDATE_PWD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">7000</span>, <span class="string">&quot;旧密码错误！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_UPDATE_PWD_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">7001</span>, <span class="string">&quot;新密码不能为空！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台用户修改密码类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_DATABASE_BACKUP_NO_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">8000</span>, <span class="string">&quot;备份记录不存在！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证码生成类"><a href="#验证码生成类" class="headerlink" title="验证码生成类"></a>验证码生成类</h2><ol><li><p>CaptchaUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证码生成器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> llq</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码来源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">private</span> <span class="keyword">char</span>[] code = &#123;</span><br><span class="line">            <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">private</span> String[] fontNames = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">            <span class="string">&quot;黑体&quot;</span>, <span class="string">&quot;宋体&quot;</span>, <span class="string">&quot;Courier&quot;</span>, <span class="string">&quot;Arial&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Verdana&quot;</span>, <span class="string">&quot;Times&quot;</span>, <span class="string">&quot;Tahoma&quot;</span>, <span class="string">&quot;Georgia&quot;</span>&#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字体样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">private</span> <span class="keyword">int</span>[] fontStyles = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;</span><br><span class="line">            Font.BOLD, Font.ITALIC|Font.BOLD</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码长度</span></span><br><span class="line"><span class="comment">     * 默认4个字符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> vcodeLen = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码图片字体大小</span></span><br><span class="line"><span class="comment">     * 默认17</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> fontsize = <span class="number">21</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码图片宽度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> width = (fontsize+<span class="number">1</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码图片高度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> height = fontsize+<span class="number">12</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 干扰线条数</span></span><br><span class="line"><span class="comment">     * 默认3条</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> disturbline = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CaptchaUtil</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定验证码长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcodeLen 验证码长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CaptchaUtil</span><span class="params">(<span class="keyword">int</span> vcodeLen)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.vcodeLen = vcodeLen;</span><br><span class="line">        <span class="keyword">this</span>.width = (fontsize+<span class="number">1</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CaptchaUtil</span><span class="params">(<span class="keyword">int</span> vcodeLen,<span class="keyword">int</span> fontSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.vcodeLen = vcodeLen;</span><br><span class="line">        <span class="keyword">this</span>.fontsize = fontSize;</span><br><span class="line">        <span class="keyword">this</span>.width = (fontsize+<span class="number">1</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">        height = fontsize+<span class="number">12</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CaptchaUtil</span><span class="params">(<span class="keyword">int</span> vcodeLen,<span class="keyword">int</span> fontSize,<span class="keyword">int</span> width,<span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.vcodeLen = vcodeLen;</span><br><span class="line">        <span class="keyword">this</span>.fontsize = fontSize;</span><br><span class="line">        <span class="keyword">this</span>.width = width;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成验证码图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcode 要画的验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> drawline 是否画干扰线</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">generatorVCodeImage</span><span class="params">(String vcode, <span class="keyword">boolean</span> drawline)</span></span>&#123;</span><br><span class="line">        <span class="comment">//创建验证码图片</span></span><br><span class="line">        BufferedImage vcodeImage = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        Graphics g = vcodeImage.getGraphics();</span><br><span class="line">        <span class="comment">//填充背景色</span></span><br><span class="line">        g.setColor(<span class="keyword">new</span> Color(<span class="number">246</span>, <span class="number">240</span>, <span class="number">250</span>));</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="keyword">if</span>(drawline)&#123;</span><br><span class="line">            drawDisturbLine(g);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用于生成伪随机数</span></span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="comment">//在图片上画验证码</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; vcode.length();i++)&#123;</span><br><span class="line">            <span class="comment">//设置字体</span></span><br><span class="line">            g.setFont(<span class="keyword">new</span> Font(fontNames[ran.nextInt(fontNames.length)], fontStyles[ran.nextInt(fontStyles.length)], fontsize));</span><br><span class="line">            <span class="comment">//随机生成颜色</span></span><br><span class="line">            g.setColor(getRandomColor());</span><br><span class="line">            <span class="comment">//画验证码</span></span><br><span class="line">            g.drawString(vcode.charAt(i)+<span class="string">&quot;&quot;</span>, i*fontsize+<span class="number">10</span>, fontsize+<span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放此图形的上下文以及它使用的所有系统资源</span></span><br><span class="line">        g.dispose();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> vcodeImage;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得旋转字体的验证码图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> drawline 是否画干扰线</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">generatorRotateVCodeImage</span><span class="params">(String vcode, <span class="keyword">boolean</span> drawline)</span></span>&#123;</span><br><span class="line">        <span class="comment">//创建验证码图片</span></span><br><span class="line">        BufferedImage rotateVcodeImage = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        Graphics2D g2d = rotateVcodeImage.createGraphics();</span><br><span class="line">        <span class="comment">//填充背景色</span></span><br><span class="line">        g2d.setColor(<span class="keyword">new</span> Color(<span class="number">246</span>, <span class="number">240</span>, <span class="number">250</span>));</span><br><span class="line">        g2d.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="keyword">if</span>(drawline)&#123;</span><br><span class="line">            drawDisturbLine(g2d);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//在图片上画验证码</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; vcode.length();i++)&#123;</span><br><span class="line">            BufferedImage rotateImage = getRotateImage(vcode.charAt(i));</span><br><span class="line">            g2d.drawImage(rotateImage, <span class="keyword">null</span>, (<span class="keyword">int</span>) (<span class="keyword">this</span>.height * <span class="number">0.7</span>) * i, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        g2d.dispose();</span><br><span class="line">        <span class="keyword">return</span> rotateVcodeImage;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">generatorVCode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len = code.length;</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; vcodeLen;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> index = ran.nextInt(len);</span><br><span class="line">            sb.append(code[index]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为验证码图片画一些干扰线</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> g</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawDisturbLine</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; disturbline;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> y1 = ran.nextInt(height);</span><br><span class="line">            <span class="keyword">int</span> x2 = ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> y2 = ran.nextInt(height);</span><br><span class="line">            g.setColor(getRandomColor());</span><br><span class="line">            <span class="comment">//画干扰线</span></span><br><span class="line">            g.drawLine(x1, y1, x2, y2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取一张旋转的图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> c 要画的字符</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> BufferedImage <span class="title">getRotateImage</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">        BufferedImage rotateImage = <span class="keyword">new</span> BufferedImage(height, height, BufferedImage.TYPE_INT_ARGB);</span><br><span class="line">        Graphics2D g2d = rotateImage.createGraphics();</span><br><span class="line">        <span class="comment">//设置透明度为0</span></span><br><span class="line">        g2d.setColor(<span class="keyword">new</span> Color(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        g2d.fillRect(<span class="number">0</span>, <span class="number">0</span>, height, height);</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        g2d.setFont(<span class="keyword">new</span> Font(fontNames[ran.nextInt(fontNames.length)], fontStyles[ran.nextInt(fontStyles.length)], fontsize));</span><br><span class="line">        g2d.setColor(getRandomColor());</span><br><span class="line">        <span class="keyword">double</span> theta = getTheta();</span><br><span class="line">        <span class="comment">//旋转图片</span></span><br><span class="line">        g2d.rotate(theta, height/<span class="number">2</span>, height/<span class="number">2</span>);</span><br><span class="line">        g2d.drawString(Character.toString(c), (height-fontsize)/<span class="number">2</span>, fontsize+<span class="number">5</span>);</span><br><span class="line">        g2d.dispose();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> rotateImage;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回一个随机颜色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Color <span class="title">getRandomColor</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(ran.nextInt(<span class="number">220</span>), ran.nextInt(<span class="number">220</span>), ran.nextInt(<span class="number">220</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 角度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">double</span> <span class="title">getTheta</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ((<span class="keyword">int</span>) (Math.random()*<span class="number">1000</span>) % <span class="number">2</span> == <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>)*Math.random();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 验证码字符个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getVcodeLen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> vcodeLen;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置验证码字符个数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcodeLen</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVcodeLen</span><span class="params">(<span class="keyword">int</span> vcodeLen)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = (fontsize+<span class="number">3</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">this</span>.vcodeLen = vcodeLen;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 字体大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getFontsize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fontsize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置字体大小</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fontsize</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFontsize</span><span class="params">(<span class="keyword">int</span> fontsize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = (fontsize+<span class="number">3</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">this</span>.height = fontsize+<span class="number">15</span>;</span><br><span class="line">        <span class="keyword">this</span>.fontsize = fontsize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 图片宽度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWidth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置图片宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWidth</span><span class="params">(<span class="keyword">int</span> width)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 图片高度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置图片高度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span><span class="params">(<span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 干扰线条数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDisturbline</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> disturbline;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置干扰线条数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> disturbline</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDisturbline</span><span class="params">(<span class="keyword">int</span> disturbline)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.disturbline = disturbline;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>CaptchaController</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 系统验证码公用控制器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/cpacha&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger log = LoggerFactory.getLogger(CaptchaController.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用验证码生成器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcodeLength</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fontSize</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/generate_captcha&quot;,method=RequestMethod.GET)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generateCpacha</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;vl&quot;,defaultValue=&quot;4&quot;)</span>Integer vcodeLength,//vcodeLength,验证码长度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;fs&quot;,defaultValue=&quot;21&quot;)</span>Integer fontSize,//fontSize,验证码字体大小</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;w&quot;,defaultValue=&quot;98&quot;)</span>Integer width,//width,图片宽度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;h&quot;,defaultValue=&quot;33&quot;)</span>Integer height,//height,图片高度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;method&quot;,defaultValue=&quot;admin_login&quot;)</span>String method,//用来调用此方法的名称，以此名称为键，存入到session中</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        CaptchaUtil captchaUtil = <span class="keyword">new</span> CaptchaUtil(vcodeLength,fontSize,width,height);</span><br><span class="line">        String generatorVCode = captchaUtil.generatorVCode();</span><br><span class="line">        <span class="comment">//将生成的验证码放入session，以供放后面程序的验证使用</span></span><br><span class="line">        request.getSession().setAttribute(method, generatorVCode);</span><br><span class="line">        log.info(<span class="string">&quot;验证码成功生成，method=&quot;</span> + method + <span class="string">&quot;,value=&quot;</span> + generatorVCode);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(captchaUtil.generatorRotateVCodeImage(generatorVCode, <span class="keyword">true</span>), <span class="string">&quot;gif&quot;</span>, response.getOutputStream());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="注意事项吧"><a href="#注意事项吧" class="headerlink" title="注意事项吧"></a>注意事项吧</h1><blockquote><p>将公共实体抽离建立BaseEntity</p><p>由于id,createTime,updateTime每个实体都有,所以可以抽离出来</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> * 基础实体公共属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseEntity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在insert操作时,自动创建id</span></span><br><span class="line"><span class="comment">     * 在handler&gt;MyMetaObjectHandler中具体实现</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自增策略,当产生update和create操作时,自动复制updateTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="实现前端-后端"><a href="#实现前端-后端" class="headerlink" title="实现前端+后端"></a>实现前端+后端</h1><h2 id="公共组件"><a href="#公共组件" class="headerlink" title="公共组件"></a>公共组件</h2><h3 id="Capacha组件"><a href="#Capacha组件" class="headerlink" title="Capacha组件"></a>Capacha组件</h3><blockquote><p>展示验证码,点击刷新</p></blockquote><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a><strong>前端</strong></h4><ol><li>Captcha.vue</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--验证码组件--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;captcha-container&quot;&gt;</span><br><span class="line">    &lt;img id&#x3D;&quot;captchaImg&quot; @click&#x3D;&quot;reloadCaptcha&quot; :src&#x3D;&quot;codeImg&quot;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Captcha.vue&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      codeImg: &#39;http:&#x2F;&#x2F;127.0.0.1:2006&#x2F;captcha&#x2F;generate_captcha&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    reloadCaptcha () &#123;</span><br><span class="line">      this.codeImg &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:2006&#x2F;captcha&#x2F;generate_captcha?&#39; + Math.random()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>main.js使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;MyCaptcha&#x27;</span>, Captcha)</span><br></pre></td></tr></table></figure><ol start="3"><li>页面中使用</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;</span><br><span class="line">  &lt;MyCaptcha&gt;&lt;&#x2F;MyCaptcha&gt;</span><br><span class="line">&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a><strong>后端</strong></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/captcha&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger log = LoggerFactory.getLogger(CaptchaController.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用验证码生成器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcodeLength</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fontSize</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/generate_captcha&quot;,method=RequestMethod.GET)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generateCpacha</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;vl&quot;,defaultValue=&quot;4&quot;)</span>Integer vcodeLength,//vcodeLength,验证码长度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;fs&quot;,defaultValue=&quot;21&quot;)</span>Integer fontSize,//fontSize,验证码字体大小</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;w&quot;,defaultValue=&quot;98&quot;)</span>Integer width,//width,图片宽度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;h&quot;,defaultValue=&quot;33&quot;)</span>Integer height,//height,图片高度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;method&quot;,defaultValue=&quot;admin_login&quot;)</span>String method,//用来调用此方法的名称，以此名称为键，存入到session中</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        CaptchaUtil captchaUtil = <span class="keyword">new</span> CaptchaUtil(vcodeLength,fontSize,width,height);</span><br><span class="line">        String generatorVCode = captchaUtil.generatorVCode();</span><br><span class="line">        <span class="comment">//将生成的验证码放入session，以供放后面程序的验证使用</span></span><br><span class="line">        request.getSession().setAttribute(method, generatorVCode);</span><br><span class="line">        log.info(<span class="string">&quot;验证码成功生成，method=&quot;</span> + method + <span class="string">&quot;,value=&quot;</span> + generatorVCode);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(captchaUtil.generatorRotateVCodeImage(generatorVCode, <span class="keyword">true</span>), <span class="string">&quot;gif&quot;</span>, response.getOutputStream());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="背景粒子组件"><a href="#背景粒子组件" class="headerlink" title="背景粒子组件"></a>背景粒子组件</h3><ol><li><p>创建组件StarrySky.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;starrySky-container&quot;&gt;</span><br><span class="line">    &lt;vue-particles</span><br><span class="line">      color&#x3D;&quot;#3a91cf&quot;</span><br><span class="line">      :particleOpacity&#x3D;&quot;0.7&quot;</span><br><span class="line">      :particlesNumber&#x3D;&quot;60&quot;</span><br><span class="line">      shapeType&#x3D;&quot;circle&quot;</span><br><span class="line">      :particleSize&#x3D;&quot;4&quot;</span><br><span class="line">      linesColor&#x3D;&quot;#fa914e&quot;</span><br><span class="line">      :linesWidth&#x3D;&quot;1&quot;</span><br><span class="line">      :lineLinked&#x3D;&quot;true&quot;</span><br><span class="line">      :lineOpacity&#x3D;&quot;0.4&quot;</span><br><span class="line">      :linesDistance&#x3D;&quot;150&quot;</span><br><span class="line">      :moveSpeed&#x3D;&quot;2&quot;</span><br><span class="line">      :hoverEffect&#x3D;&quot;true&quot;</span><br><span class="line">      hoverMode&#x3D;&quot;grab&quot;</span><br><span class="line">      :clickEffect&#x3D;&quot;true&quot;</span><br><span class="line">      clickMode&#x3D;&quot;push&quot;</span><br><span class="line">      class&#x3D;&quot;lizi&quot;</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;&#x2F;vue-particles&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;StarrySky&#39;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">color: String类型。默认&#39;#dedede&#39;。粒子颜色。</span><br><span class="line">particleOpacity: Number类型。默认0.7。粒子透明度。</span><br><span class="line">particlesNumber: Number类型。默认80。粒子数量。</span><br><span class="line">shapeType: String类型。默认&#39;circle&#39;。可用的粒子外观类型有：&quot;circle&quot;,&quot;edge&quot;,&quot;triangle&quot;, &quot;polygon&quot;,&quot;star&quot;。</span><br><span class="line">particleSize: Number类型。默认80。单个粒子大小。</span><br><span class="line">linesColor: String类型。默认&#39;#dedede&#39;。线条颜色。</span><br><span class="line">linesWidth: Number类型。默认1。线条宽度。</span><br><span class="line">lineLinked: 布尔类型。默认true。连接线是否可用。</span><br><span class="line">lineOpacity: Number类型。默认0.4。线条透明度。</span><br><span class="line">linesDistance: Number类型。默认150。线条距离。</span><br><span class="line">moveSpeed: Number类型。默认3。粒子运动速度。</span><br><span class="line">hoverEffect: 布尔类型。默认true。是否有hover特效。</span><br><span class="line">hoverMode: String类型。默认true。可用的hover模式有: &quot;grab&quot;, &quot;repulse&quot;, &quot;bubble&quot;。</span><br><span class="line">clickEffect: 布尔类型。默认true。是否有click特效。</span><br><span class="line">clickMode: String类型。默认true。可用的click模式有: &quot;push&quot;, &quot;remove&quot;, &quot;repulse&quot;, &quot;bubble&quot;。</span><br></pre></td></tr></table></figure></li><li><p>在main.js中注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> StarrySky <span class="keyword">from</span> <span class="string">&#x27;@/components/StarrySky&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">&#x27;MyStarrySky&#x27;</span>, StarrySky)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Vesper脚手架搭建&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h1&gt;&lt;h2 id=&quot;创建项目com-vesper-base&quot;&gt;</summary>
      
    
    
    
    <category term="脚手架" scheme="http://example.com/categories/%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>Win服务器安装SQL Server与IIS服务及FTP开启</title>
    <link href="http://example.com/2021/02/24/Win%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85SQL-Server%E4%B8%8EIIS%E6%9C%8D%E5%8A%A1%E5%8F%8AFTP%E5%BC%80%E5%90%AF/"/>
    <id>http://example.com/2021/02/24/Win%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85SQL-Server%E4%B8%8EIIS%E6%9C%8D%E5%8A%A1%E5%8F%8AFTP%E5%BC%80%E5%90%AF/</id>
    <published>2021-02-24T01:02:01.000Z</published>
    <updated>2021-04-06T01:21:43.462Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Win服务器安装SQL Server与IIS服务及FTP开启</strong></p><h1 id="SQL-server服务卸载-各版本均可"><a href="#SQL-server服务卸载-各版本均可" class="headerlink" title="SQL server服务卸载(各版本均可)"></a>SQL server服务卸载(各版本均可)</h1><blockquote><p> 由于第一次安装失败,所以卸载后重装,步骤记录</p></blockquote><ol><li><p>运行&gt; 输入<code>services.msc</code>,查看所有SQL server服务并停止</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214004.png" alt="image-20210224090708962"></p></li><li><p>在控制面板中查看类别选择,进入程序卸载界面</p></li><li><p>在右上角输入sql server,卸载所有与SQL server相关的程序</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214005.png" alt="image-20210224091003438"></p></li><li><p>删除SQL server相关注册表</p><p><code>win+r</code>输入<code>regedit</code>进入注册表</p><ol><li><p>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager中删除<code>PendingFileRenameOperations</code></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214006.png" alt="image-20210224092809472"></p></li><li><p>删除HKEY_CURRENT_USER\SOFTWARE\Microsoft\下的  SQL server相关</p></li><li><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\下面所有关于SQL server的子项删除</p></li><li><p>删除HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSSQLServer</p></li></ol></li><li><p>删除相关文件夹</p><ol><li>删除安装SQL server的物理路径,包含默认安装路径下所有</li></ol></li><li><p>卸载完成后重启电脑</p></li></ol><h1 id="安装IIS服务"><a href="#安装IIS服务" class="headerlink" title="安装IIS服务"></a>安装IIS服务</h1><blockquote><p>由于安装包较大安装此服务,开启ftp传输</p></blockquote><ol><li><p>服务器管理器中点击添加角色</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214007.png" alt="image-20210224094256588"></p></li><li><p>一直下一步到服务器角色,勾选Web 服务器(IIS)</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214008.png" alt="image-20210224094346691"></p></li><li><p>在功能中勾选Net3.5及4.5及其所有子项</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214009.png" alt="image-20210224094446281"></p></li><li><p>点击下一步后,会有勾选的,因为我已安装所以无图.   勾选时确保所有子项\展开项全部勾选</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214010.png" alt="image-20210224095036494"></p></li><li><p>如果没有联网就需要下载Net3.5,并在指定备用源路径中指定路径</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214011.png" alt="image-20210224095507427"></p></li></ol><p><a href="https://wwi.lanzous.com/b0108j5ti">https://wwi.lanzous.com/b0108j5ti</a><br>密码:eog3</p><p>Net3.5压缩包</p><h1 id="搭建FTP站点"><a href="#搭建FTP站点" class="headerlink" title="搭建FTP站点"></a>搭建FTP站点</h1><blockquote><p>在被传送的服务器中搭建ftp服务</p></blockquote><ol><li><p>运行&gt; <code>inetmgr</code>进入IIS管理器,添加FTP站点</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214012.png" alt="image-20210224095718390"></p></li><li><p>配置站点名与允许被访问的路径</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214013.png" alt="image-20210224095815284"></p></li><li><p>选择绑定的ip,更改端口.    并选择无SSL</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214014.png" alt="image-20210224095909874"></p></li><li><p>全勾选,选择所有用户,虽然不安全,但是我用完删掉</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214015.png" alt="image-20210224095950658"></p></li><li><p>此时便可以在跳板机中通过xftp连接,传文件</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214016.png" alt="image-20210224100102634"></p></li></ol><h1 id="安装Sqlserver"><a href="#安装Sqlserver" class="headerlink" title="安装Sqlserver"></a>安装Sqlserver</h1><ol><li>没报错就是点下一步</li><li>有全选就全选</li><li>实例可以直接选默认</li><li>选择服务时,有一个时禁用,可以改为手动</li><li>混合模式,自己设置sa密码</li><li>有添加当前用户直接点</li><li>控制器名称可以不写,直接下一步</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Win服务器安装SQL Server与IIS服务及FTP开启&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;SQL-server服务卸载-各版本均可&quot;&gt;&lt;a href=&quot;#SQL-server服务卸载-各版本均可&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="win服务器" scheme="http://example.com/categories/win%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="SQL Server" scheme="http://example.com/tags/SQL-Server/"/>
    
    <category term="服务器" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="IIS服务" scheme="http://example.com/tags/IIS%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="FTP" scheme="http://example.com/tags/FTP/"/>
    
  </entry>
  
</feed>
