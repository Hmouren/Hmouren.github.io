<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CRM项目实战-智能销售管理系统（念安）</title>
      <link href="2021/06/09/crm-xiang-mu-shi-zhan-zhi-neng-xiao-shou-guan-li-xi-tong-nian-an/"/>
      <url>2021/06/09/crm-xiang-mu-shi-zhan-zhi-neng-xiao-shou-guan-li-xi-tong-nian-an/</url>
      
        <content type="html"><![CDATA[<p><strong>CRM项目实战-智能销售管理系统（念安）</strong></p><p>系统主要功能模块图：</p><p><img src="CRM%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E6%99%BA%E8%83%BD%E9%94%80%E5%94%AE%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E5%BF%B5%E5%AE%89%EF%BC%89/image-20210609125110008.png" alt="image-20210609125110008"></p><h1 id="01-CRM用户管理"><a href="#01-CRM用户管理" class="headerlink" title="01-CRM用户管理"></a>01-CRM用户管理</h1><blockquote><p>主要解决问题如下：</p><ul><li>CRM系统概念：基本概念、分类、企业项目开发流程</li><li>CRM系统模块划分</li><li>数据库表结构设计</li><li>项目环境搭建与测试</li><li>功能：（登录、退出、密码修改；全局异常同意处理；非法请求拦截；记住我）</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 项目实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CRM </tag>
            
            <tag> 项目实战 </tag>
            
            <tag> 管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax实现动态列表li</title>
      <link href="2021/06/07/ajax-shi-xian-dong-tai-lie-biao-li/"/>
      <url>2021/06/07/ajax-shi-xian-dong-tai-lie-biao-li/</url>
      
        <content type="html"><![CDATA[<p><strong>Ajax实现动态列表li</strong></p><p>html：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layui-tab layui-tab-brief<span class="token punctuation">"</span></span> <span class="token attr-name">lay-filter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Method<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layui-tab-title tab-search<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>FWZXMENU<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layui-this<span class="token punctuation">"</span></span> <span class="token attr-name">tab-val</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>全部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>js：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">&gt;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">WebAPIAjax</span><span class="token punctuation">(</span><span class="token string">"/common/GetConfigByCode"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>code<span class="token operator">:</span><span class="token string">'FWZLXL_MENUConfig'</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> FWZXMenu <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">parseJSON</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>FWZXMenu<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> FWZXMenuRefush <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>            FWZXMenuRefush <span class="token operator">+=</span> <span class="token string">'&lt;li tab-val="'</span> <span class="token operator">+</span> value<span class="token punctuation">.</span>key <span class="token operator">+</span> <span class="token string">'"&gt;'</span> <span class="token operator">+</span> value<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">'&lt;/li&gt;'</span><span class="token punctuation">;</span>            x <span class="token operator">+=</span> FWZXMenuRefush<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"FWZXMENU"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="Ajax%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E5%88%97%E8%A1%A8li/image-20210607183809343.png" alt="image-20210607183809343"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax实现动态下拉框</title>
      <link href="2021/06/07/ajax-shi-xian-dong-tai-xia-la-kuang/"/>
      <url>2021/06/07/ajax-shi-xian-dong-tai-xia-la-kuang/</url>
      
        <content type="html"><![CDATA[<p><strong>Ajax实现动态下拉框</strong></p><ul><li><p>原先为静态数据，不利于后期维护，原代码如下：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layui-form-item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layui-form-label<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>业态分类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layui-input-block<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IndustryCategory<span class="token punctuation">"</span></span> <span class="token attr-name">frd-verify</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>required<span class="token punctuation">"</span></span> <span class="token attr-name">verify-msg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>业态分类不能为空<span class="token punctuation">"</span></span> <span class="token attr-name">lay-filter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IndustryCategory<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>酒店<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>酒店<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>餐饮店<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>餐饮店<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>饮料面包<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>饮料面包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>服装店<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>服装店<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>蔬菜店<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>蔬菜店<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>百货店<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>百货店<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>五金店<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>五金店<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>超市<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>超市<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>水果生鲜<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>水果生鲜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>药店<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>药店<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>车行（修车）<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>车行（修车）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>美容美发<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>美容美发<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>快递中转站<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>快递中转站<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>广告图文<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>广告图文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>房产中介<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>房产中介<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>桑拿会所<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>桑拿会所<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>银行<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>银行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>酒吧<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>酒吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>培训机构<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>培训机构<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>家电维修<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>家电维修<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>宠物服务<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>宠物服务<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>将select下拉框改为动态数据</p><p>html</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layui-form-item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layui-form-label<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>业态分类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layui-input-block<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>YTFMMENU<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IndustryCategory<span class="token punctuation">"</span></span> <span class="token attr-name">frd-verify</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>required<span class="token punctuation">"</span></span> <span class="token attr-name">verify-msg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>业态分类不能为空<span class="token punctuation">"</span></span> <span class="token attr-name">lay-filter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IndustryCategory<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>js：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">&gt;</span>         <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">WebAPIAjax</span><span class="token punctuation">(</span><span class="token string">"/common/GetConfigByCode"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>code<span class="token operator">:</span><span class="token string">'TPXE_YTFL_Selector'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment">// $.parseJSON()将标准的json字符串转换为JavaScript对象</span>                <span class="token keyword">var</span> TPXEMenu <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">parseJSON</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>TPXEMenu<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">var</span> TPXEMenuRefush <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                    TPXEMenuRefush <span class="token operator">=</span> <span class="token string">'&lt;option value="'</span><span class="token operator">+</span>value<span class="token punctuation">.</span>key<span class="token operator">+</span><span class="token string">'"&gt;'</span><span class="token operator">+</span>value<span class="token punctuation">.</span>value<span class="token operator">+</span><span class="token string">'&lt;/option&gt;'</span><span class="token punctuation">;</span>                    x <span class="token operator">+=</span>TPXEMenuRefush<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#YTFMMENU"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">layuiReload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//layui中form表单获取动态数据造成数据更改后需要通过layuiReload（）方法重新加载渲染数据</span>        <span class="token keyword">function</span> <span class="token function">layuiReload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            layui<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'form'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> form <span class="token operator">=</span> layui<span class="token punctuation">.</span>form<span class="token punctuation">;</span>                form<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>类似截图</p><p><img src="Ajax%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E4%B8%8B%E6%8B%89%E6%A1%86/image-20210607155345586.png" alt="image-20210607155345586"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决axios无法传递data参数问题</title>
      <link href="2021/06/07/jie-jue-axios-wu-fa-chuan-di-data-can-shu-wen-ti/"/>
      <url>2021/06/07/jie-jue-axios-wu-fa-chuan-di-data-can-shu-wen-ti/</url>
      
        <content type="html"><![CDATA[<p><strong>解决axios无法传递data参数问题</strong></p><p>首先出现这种问题的原因在于</p><ul><li><p>默认情况下发送axios请求时请求头中的内容类型为：</p><pre class="line-numbers language-none"><code class="language-none">Content-Type:application/json;charset=UTF-8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>而实际服务端需要的是：</p><pre class="line-numbers language-none"><code class="language-none">Content-Type:application/x-www-form-urlencoded<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>因此，使用axios的qs内置库中的方法进行内容类型转换。</p><p><img src="%E8%A7%A3%E5%86%B3axios%E6%97%A0%E6%B3%95%E4%BC%A0%E9%80%92data%E5%8F%82%E6%95%B0%E9%97%AE%E9%A2%98/image-20210607145410425.png" alt="image-20210607145410425"></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>四种请求方式</title>
      <link href="2021/06/07/si-chong-qing-qiu-fang-shi/"/>
      <url>2021/06/07/si-chong-qing-qiu-fang-shi/</url>
      
        <content type="html"><![CDATA[<p><strong>请求方式大致可以分为四类</strong></p><ul><li>Get请求：从数据库中<strong>获取</strong>数据，不涉及数据库的修改操作；</li><li>Post请求：涉及数据库数据<strong>增加</strong>操作；</li><li>Put请求：涉及数据库<strong>修改</strong>操作；</li><li>Delete请求：涉及数据库<strong>删除</strong>操作；</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 请求方式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/05/02/hello-world/"/>
      <url>2021/05/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PC端微信防撤![10](C:/Users/Hmouren/Desktop/10.png)回</title>
      <link href="2021/05/02/pc-duan-wei-xin-fang-che-hui/"/>
      <url>2021/05/02/pc-duan-wei-xin-fang-che-hui/</url>
      
        <content type="html"><![CDATA[<p><strong>PC端微信消息防撤回</strong></p><blockquote><p>准备工具：</p><p>x64dbg</p><p>​    <a href="https://sourceforge.net/projects/x64dbg/">官网</a></p><p>​    <a href="https://wwi.lanzous.com/itjEVopv34h">蓝奏云</a>密码为WEhbmu更多请关注公众号<code>WEhbmu</code></p><p>​    蓝奏云中<code>.dll</code>文件可直接替换使用</p></blockquote><ol><li><p>扫码登录PC端微信</p></li><li><p>打开x32dbg工具，依次点击文件→附加→双击选择微信</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/1%E6%96%87%E4%BB%B6%E9%99%84%E5%8A%A0.png" alt="1文件附加"></p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/2%E7%82%B9%E5%87%BB%E5%BE%AE%E4%BF%A1.png" alt="2点击微信"></p></li><li><p>依次点击：符号→在左下搜索框中搜索<code>win.</code>→在搜索结果中选择<code>wechatwin.dll</code>双击进入</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/3%E6%90%9C%E7%B4%A2%E5%B9%B6%E8%BF%9B%E5%85%A5.png" alt="3搜索并进入"></p></li><li><p>在此界面依次点击：右键→搜索→当前模块→字符串</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/4.png" alt="4"></p></li><li><p>进入该界面后依次点击：搜索框搜索<code>revokemsg</code>→在结果中双击进入</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/5.png" alt="5"></p></li><li><p>进入该界面后：找到定位的上一个出现的<code>je</code>命令→选中该命令，右键选择<code>汇编（或直接space）</code>→在弹出框中直接将<code>je</code>修改为<code>jmp</code>并保存，其他东西不修改</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/%E6%9B%B4%E6%94%B9.png" alt="更改"></p></li><li><p>修改成功后，右键→补丁→修补文件导出为<code>WeChatWin.dll</code>即可</p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/10.png" alt="10"></p><p><img src="PC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%9B%9E/11.png" alt="11"></p></li><li><p>最后将导出文件，覆盖微信安装根目录即可</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 反汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> x32dbg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis动态SQL学习</title>
      <link href="2021/04/15/mybatis-dong-tai-sql-xue-xi/"/>
      <url>2021/04/15/mybatis-dong-tai-sql-xue-xi/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>动态 SQL</strong> 是 MyBatis 的强大特性之一。</p><ul><li>if</li><li>choose (when, otherwise)</li><li>trim (where, set)</li><li>foreach</li><li>等等</li></ul></blockquote><h1 id="Mybatis动态SQL"><a href="#Mybatis动态SQL" class="headerlink" title="Mybatis动态SQL"></a>Mybatis动态SQL</h1><h2 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h2><blockquote><p> 使用动态SQL最常见的情景是根据条件包含where子句的一部分，eg：</p><p>如果未传入color,price，则只按name查询。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line">select * from Commodity where name=&quot;手机&quot;</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span></span><br><span class="line">    and color like #&#123;color&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span></span><br><span class="line">    and price like #&#123;price&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="choose、when、otherwise"><a href="#choose、when、otherwise" class="headerlink" title="choose、when、otherwise"></a>choose、when、otherwise</h2><blockquote><p>适用于只想从多个条件中选择一个使用。</p><p>当传入color，则按color查询</p><p>当传入price，则按price查询</p><p>如果都没有传入，则按recommend=1，进行查询。（与其返回随机商品，不如返回推荐商品）</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line">select * from Commodity where status=&quot;active&quot;</span><br><span class="line">    <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span></span><br><span class="line">        and color like #&#123;color&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span></span><br><span class="line">        and price like &#123;price&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        and recommend = 1</span><br><span class="line">        <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="trim、where、set"><a href="#trim、where、set" class="headerlink" title="trim、where、set"></a>trim、where、set</h2><blockquote><p>①<em>where</em> 元素只会在子元素返回任何内容的情况下才插入 “WHERE” 子句。而且，若子句的开头为 “AND” 或 “OR”，<em>where</em> 元素也会将它们去除(会自动去除第一个and 或者 or)。</p><p>②<em>set</em> 元素可以用于动态包含需要更新的列，忽略其它不更新的列。</p><p>③trim可用于自定义where 和 set</p></blockquote><h3 id="where"><a href="#where" class="headerlink" title="where"></a>where</h3><blockquote><p>即时status为空，color！=color，where元素在生成sql语句时会自动将第一个and或者or去除！</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line">select * from Commodity</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span></span><br><span class="line">        status like #&#123;status&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span></span><br><span class="line">        and color like #&#123;color&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span></span><br><span class="line">        and price like #&#123;color&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCommodity&quot;</span>&gt;</span></span><br><span class="line">update Commodity</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span>status=#&#123;status&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span>color=#&#123;color&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span>price=#&#123;price&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h3><ol><li><p>完成<code>where</code>功能</p><blockquote><p>prefix：定义前缀；</p><p>prefixoverride：去掉第一个and或者or</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line">select * from Commodity</span><br><span class="line">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;WHERE&quot;</span> <span class="attr">prefixoverride</span>=<span class="string">&quot;AND |OR&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span>and status=#&#123;status&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != color&quot;</span>&gt;</span>and color=#&#123;color&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span>and price=#&#123;price&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>完成<code>or</code>功能</p><blockquote><p>prefix：定义前缀</p><p>suffixoverride：去除最后一个逗号</p><p>suffix：定义后缀</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCommodity&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;set&quot;</span> <span class="attr">suffixoverride</span>=<span class="string">&quot;,&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;where id=#&#123;id&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span>status=#&#123;status&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;color != null&quot;</span>&gt;</span>color=#&#123;color&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span>price=#&#123;price&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h2><p><a href="https://www.cnblogs.com/hooly/p/9090167.html">参考链接</a></p><blockquote><p>动态SQL的另一个常见使用场景就是对集合进行遍历（尤其是在构建IN条件语句的时候）</p><p>foreach元素的属性主要有：item、index、collection、open、separator、close、item。</p><ol><li><p>item：表示集合中每一个元素进行迭代时的别名，也就是常看的value值（本次迭代获取的元素）；</p></li><li><p>index：指定一个名字，用于表示在迭代过程中，每次迭代到的位置。（迭代次数）；</p></li><li><p>open：表示该语句以什么开始；</p></li><li><p>separator：表示每次进行迭代间以什么符号作为分隔符；</p></li><li><p>close：表示以什么结束；</p></li><li><p>collection：该属性必须指定，且在不同情况下。该属性的值不同，具体如下：</p></li></ol></blockquote><p><strong>collection属性不同情况区别：</strong></p><ol><li><p>如果传入的时单参数且参数类型时一个List时，collection属性值为list；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//与之对应的mappper代码</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Commodity&gt; <span class="title">dynamicForeachTest</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;  </span><br></pre></td></tr></table></figure></li><li><p>如果传入的时单参数且参数类型是一个array数组的时候，collection的属性值为array；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//与之对应的mappper代码</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Commodity&gt; <span class="title">dynamicForeachTest</span><span class="params">(<span class="keyword">int</span>[] ids)</span></span>;  </span><br></pre></td></tr></table></figure></li><li><p>如果传入的参数时多个的时候，我们就需要将它们封装成Map。单参数也可以封装成map。map的key时参数名。所以此时collection属性值就是传入的List或array对象在自己封装的map里面的key</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//与之对应的mappper代码</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Commodity&gt; <span class="title">dynamicForeachTest</span><span class="params">(Map&lt;String,Object&gt; params)</span></span>;  </span><br></pre></td></tr></table></figure></li></ol><p><strong>简单demo</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectPostIn&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;domain.blog.Post&quot;</span>&gt;</span></span><br><span class="line">  SELECT *</span><br><span class="line">  FROM POST P</span><br><span class="line">  WHERE ID in</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;item&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="script"><a href="#script" class="headerlink" title="script"></a>script</h2><blockquote><p>通过script元素，可以在带注解的映射器接口类中使用动态sql</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Update(&#123;</span></span><br><span class="line"><span class="meta">            &quot;&lt;script&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;update Commodity&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;set&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;if test=&#x27;status != null&#x27;&gt;status=#&#123;status&#125;,&lt;/if&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;if test=&#x27;color != null&#x27;&gt;color=#&#123;color&#125;,&lt;/if&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;if test=&#x27;price != null&#x27;&gt;price=#&#123;price&#125;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;/set&gt;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;where id=#&#123;id&#125;&quot;,</span></span><br><span class="line"><span class="meta">            &quot;&lt;/script&gt;&quot;</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateCommodity</span><span class="params">(Commodity commodity)</span></span></span><br></pre></td></tr></table></figure><h2 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h2><blockquote><p>bind元素允许你在OGNL表达式以外创建一个变量，并将其绑定到当前的上下文中</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCommodity&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Commodity&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bind</span> <span class="attr">name</span>=<span class="string">&quot;title&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%&quot;</span>+<span class="attr">Commodity.getTitle</span>()+&quot;%&quot; /&gt;</span></span><br><span class="line">    select * from Commodity</span><br><span class="line">    where title like #&#123;title&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="多数据库支持"><a href="#多数据库支持" class="headerlink" title="多数据库支持"></a>多数据库支持</h2><blockquote><p> 如果配置了 databaseIdProvider，你就可以在动态代码中使用名为 “_databaseId” 的变量来为不同的数据库构建特定的语句。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">selectKey</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">order</span>=<span class="string">&quot;BEFORE&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;_databaseId == &#x27;oracle&#x27;&quot;</span>&gt;</span></span><br><span class="line">      select seq_users.nextval from dual</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;_databaseId == &#x27;db2&#x27;&quot;</span>&gt;</span></span><br><span class="line">      select nextval for seq_users from sysibm.sysdummy1&quot;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">selectKey</span>&gt;</span></span><br><span class="line">  insert into users values (#&#123;id&#125;, #&#123;name&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/lydia88/article/details/83385607">参考文章</a></p>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上传8K图片导致内存溢出</title>
      <link href="2021/04/07/shang-chuan-8k-tu-pian-dao-zhi-nei-cun-yi-chu/"/>
      <url>2021/04/07/shang-chuan-8k-tu-pian-dao-zhi-nei-cun-yi-chu/</url>
      
        <content type="html"><![CDATA[<p><strong>上传8K图片报错，显示堆内存溢出</strong></p><p><a href="https://blog.csdn.net/lk519186921/article/details/7076105?utm_medium=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~default-11.control&dist_request_id=&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~default-11.control">参考文章</a></p><p><code>Handler dispatch failed; nested exception is java.lang.OutOfMemoryError: Java heap space</code></p><p><img src="%E4%B8%8A%E4%BC%A08K%E5%9B%BE%E7%89%87%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/image-20210407172525033.png" alt="image-20210407172525033"></p><blockquote><p>问题产生的原因是服务器端tomcat的内存不足，将服务器tomcat的内存扩充即可</p><p>溢出错误有三种</p><ol><li>java heap space堆内存溢出</li></ol></blockquote><h1 id="win版本"><a href="#win版本" class="headerlink" title="win版本"></a>win版本</h1><h2 id="堆溢出解决"><a href="#堆溢出解决" class="headerlink" title="堆溢出解决"></a>堆溢出解决</h2><h3 id="解压版的tomcat"><a href="#解压版的tomcat" class="headerlink" title="解压版的tomcat"></a>解压版的tomcat</h3><p>找到tomcat\bin中的<code>catalina.bat</code>文件，并设置内存大小<code>set JAVA_OPTS=-Xms1024m -Xmx=1024m</code>  xms和xmx一般配置为一致较好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rem ----- Execute The Requested Command ---------------------------------------</span><br><span class="line">set JAVA_OPTS&#x3D;-Xms512m -Xmx512m</span><br><span class="line">echo Using CATALINA_BASE:   &quot;%CATALINA_BASE%&quot;</span><br><span class="line">echo Using CATALINA_HOME:   &quot;%CATALINA_HOME%&quot;</span><br><span class="line">echo Using CATALINA_TMPDIR: &quot;%CATALINA_TMPDIR%&quot;</span><br></pre></td></tr></table></figure><h3 id="安装版tomcat"><a href="#安装版tomcat" class="headerlink" title="安装版tomcat"></a>安装版tomcat</h3><p>双击打开tomcat6w.exe，在java选项卡页面中分别设置<code>Initial memory pool</code>和<code>Maximun menory pool</code></p><p><img src="%E4%B8%8A%E4%BC%A08K%E5%9B%BE%E7%89%87%E5%AF%BC%E8%87%B4%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/image-20210407173540071.png" alt="image-20210407173540071"></p>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> 图片上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java保存图片三种方式</title>
      <link href="2021/04/07/java-bao-cun-tu-pian-san-chong-fang-shi/"/>
      <url>2021/04/07/java-bao-cun-tu-pian-san-chong-fang-shi/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">if (fileWidth &gt; 4096) &#123;</span><br><span class="line">                       if (fileWidth &gt; 7683)&#123;</span><br><span class="line">                           &#x2F;*通过ImageIO保存*&#x2F;</span><br><span class="line">                           int scaleSize &#x3D; 1920;</span><br><span class="line">                           float scale &#x3D; fileWidth&#x2F;scaleSize;</span><br><span class="line">                           int fileHeight &#x3D; readFile.getHeight();</span><br><span class="line">                           BufferedImage bufferedImage &#x3D; new BufferedImage(scaleSize, (int) (fileHeight &#x2F; scale), BufferedImage.TYPE_INT_RGB);</span><br><span class="line">                           bufferedImage.getGraphics().drawImage(</span><br><span class="line">                                   readFile.getScaledInstance(scaleSize, (int)(fileHeight&#x2F;scale), Image.SCALE_SMOOTH), 0,</span><br><span class="line">                                   0, null);</span><br><span class="line">                           ImageIO.write(bufferedImage,type,new File(path));</span><br><span class="line">                       &#125;</span><br><span class="line">                      else&#123;</span><br><span class="line">                           File f &#x3D; new File(path);</span><br><span class="line">                           &#x2F;*直接通过file转存*&#x2F;</span><br><span class="line">                           file.transferTo(f);</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">                   else &#123;</span><br><span class="line">                       &#x2F;*通过谷歌插件Thumbnail*&#x2F;</span><br><span class="line">                       Thumbnails.of(file.getInputStream()).outputQuality(0.50).size(1920,1080).toFile(path);</span><br><span class="line">                   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> java图片保存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>乐字节CRM项目学习实战</title>
      <link href="2021/04/06/le-zi-jie-crm-xiang-mu-xue-xi-shi-zhan/"/>
      <url>2021/04/06/le-zi-jie-crm-xiang-mu-xue-xi-shi-zhan/</url>
      
        <content type="html"><![CDATA[<p><strong>乐字节CRM项目学习实战</strong></p><p><img src="/2021/04/06/le-zi-jie-crm-xiang-mu-xue-xi-shi-zhan/image-20210406215905437.png" alt="image-20210406215905437"></p><p>222</p><p><img src="/2021/04/06/le-zi-jie-crm-xiang-mu-xue-xi-shi-zhan/image-20210626133324225.png" alt="image-20210626133324225"></p>]]></content>
      
      
      
        <tags>
            
            <tag> CRM </tag>
            
            <tag> 项目实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Apache-POI操作word模板</title>
      <link href="2021/04/02/li-yong-apache-poi-cao-zuo-word-mo-ban/"/>
      <url>2021/04/02/li-yong-apache-poi-cao-zuo-word-mo-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="利用Apache-POI操作word模板"><a href="#利用Apache-POI操作word模板" class="headerlink" title="利用Apache-POI操作word模板"></a><strong>利用Apache-POI操作word模板</strong></h1><ol><li>pom依赖</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--POI操作word--&gt;</span><br><span class="line">    &lt;!--导入操作excel所需要的jar包--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;poi&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.10-beta2&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;type&gt;jar&lt;&#x2F;type&gt;</span><br><span class="line">      &lt;scope&gt;compile&lt;&#x2F;scope&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;poi-ooxml&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.10-beta2&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;type&gt;jar&lt;&#x2F;type&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;poi-ooxml-schemas&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.10-beta2&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;type&gt;jar&lt;&#x2F;type&gt;</span><br><span class="line">      &lt;scope&gt;compile&lt;&#x2F;scope&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-scratchpad&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.0.2-FINAL&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;!--poi结束--&gt;</span><br></pre></td></tr></table></figure><ol><li>操作word模板导出（注意word模板中的占位符可以先通过记事本写，然后复制到word。直接在word中可能出现问题，无法替换）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@CrossOrigin(origins = &quot;*&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/GetSignWordByKGD&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetSignWordByKGD</span> <span class="params">(<span class="meta">@RequestParam(value = &quot;ID&quot;)</span>String ID, HttpServletResponse response, HttpServletRequest request)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        GCSB_OwnerProject project = _ownerProBO.FindEntity(ID);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * word模板路径</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String realPath = request.getSession().getServletContext().getRealPath(<span class="string">&quot;/WEB-INF/FileModel/template_Word.docx&quot;</span>);</span><br><span class="line"><span class="comment">//        构造数据，key为模板变量，value为新值</span></span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;$&#123;address&#125;&quot;</span>,project.getProjectAddress());</span><br><span class="line">        map.put(<span class="string">&quot;$&#123;company&#125;&quot;</span>,project.getCompanyAddress());</span><br><span class="line">        map.put(<span class="string">&quot;$&#123;name&#125;&quot;</span>,project.getLiableName());</span><br><span class="line">        map.put(<span class="string">&quot;$&#123;phone&#125;&quot;</span>,project.getLiableTel());</span><br><span class="line">        <span class="comment">/*文件提取器*/</span></span><br><span class="line">        XWPFDocument document = <span class="keyword">new</span> XWPFDocument(POIXMLDocument.openPackage(realPath));</span><br><span class="line">        Iterator&lt;XWPFParagraph&gt; iterator = document.getParagraphsIterator();</span><br><span class="line">        <span class="comment">/*遍历word元素与替换*/</span></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            XWPFParagraph paragraph = iterator.next();</span><br><span class="line">            Set&lt;String&gt; set = map.keySet();</span><br><span class="line">            Iterator&lt;String&gt; stringIterator = set.iterator();</span><br><span class="line">            <span class="keyword">while</span> (stringIterator.hasNext())&#123;</span><br><span class="line">                String key = stringIterator.next();</span><br><span class="line">                List&lt;XWPFRun&gt; runs = paragraph.getRuns();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;runs.size(); i++)&#123;</span><br><span class="line">                    String text = runs.get(i).getText(<span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">for</span> (Map.Entry&lt;String,String&gt; e : map.entrySet())&#123;</span><br><span class="line">                        <span class="keyword">if</span> (text != <span class="keyword">null</span> &amp;&amp; text.contains(e.getKey()))&#123;</span><br><span class="line">                            text = text.replace(e.getKey(),e.getValue());</span><br><span class="line">                            runs.get(i).setText(text,<span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//docs文件夹目录,因为直接将word通过response文件流输出，可能输出zip！所以先直接输出本地，在调用response，最后删除本地</span></span><br><span class="line">        String docsPath = request.getSession().getServletContext().getRealPath(<span class="string">&quot;docs&quot;</span>);</span><br><span class="line">        String filePath = docsPath + FILE_SEPARATOR +<span class="string">&quot;word测试输出.docx&quot;</span>;</span><br><span class="line">        <span class="comment">/*直接通过response输出，会输出zip，通过下方转一下*/</span></span><br><span class="line">        FileOutputStream stream = <span class="keyword">new</span> FileOutputStream(filePath);</span><br><span class="line">        document.write(stream);</span><br><span class="line">        stream.close();</span><br><span class="line">        <span class="comment">//download方法调用response读取输出本地文件流</span></span><br><span class="line">        ExportUtil.download(filePath,response);</span><br><span class="line">        <span class="comment">//cleanFile删除本地文件</span></span><br><span class="line">        ExportUtil.cleanFile(filePath);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>download方法即cleanFile方法实现</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExportUtil</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出下载,弹出下载框</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path  文件下载路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(String path, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// path是指欲下载的文件的路径。</span></span><br><span class="line">            File file = <span class="keyword">new</span> File(path);</span><br><span class="line">            <span class="comment">// 取得文件名。</span></span><br><span class="line">            String filename = file.getName();</span><br><span class="line">            <span class="comment">// 以流的形式下载文件。</span></span><br><span class="line">            InputStream fis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(path));</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[fis.available()];</span><br><span class="line">            fis.read(buffer);</span><br><span class="line">            fis.close();</span><br><span class="line">            <span class="comment">// 清空response</span></span><br><span class="line">            response.reset();</span><br><span class="line">            <span class="comment">// 设置response的Header</span></span><br><span class="line">            response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span>+ URLEncoder.encode(filename, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            response.addHeader(<span class="string">&quot;Content-Length&quot;</span>, <span class="string">&quot;&quot;</span> + file.length());</span><br><span class="line">            OutputStream toClient = <span class="keyword">new</span> BufferedOutputStream(response.getOutputStream());</span><br><span class="line">            response.setContentType(<span class="string">&quot;application/vnd.ms-excel;charset=gb2312&quot;</span>);</span><br><span class="line">            toClient.write(buffer);</span><br><span class="line">            toClient.flush();</span><br><span class="line">            toClient.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * 清除文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> docsPath  文件路径</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">cleanFile</span><span class="params">(String docsPath)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(docsPath);</span><br><span class="line">        file.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ApachePOI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch学习</title>
      <link href="2021/03/28/elasticsearch-xue-xi/"/>
      <url>2021/03/28/elasticsearch-xue-xi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>首先在学习Elasticsearch前，需要理清其与MySQL间概念的对应关系</p></blockquote><table><thead><tr><th>Elasticsearch</th><th>MySQL</th></tr></thead><tbody><tr><td>Index索引</td><td>Database数据库</td></tr><tr><td>Type类型</td><td>Table表</td></tr><tr><td>Document文档</td><td>Row行</td></tr><tr><td>Field属性</td><td>Column列</td></tr><tr><td>Mapping</td><td>Schema</td></tr><tr><td>Everything is indexed</td><td>Index</td></tr><tr><td>Query</td><td>SQL</td></tr><tr><td>GET http://</td><td>select *  from….</td></tr><tr><td>POST http://</td><td>update table set….</td></tr></tbody></table><p>(1) 在关系型数据库中，schema定义了表，每个表的字段。还有表和字段间的关系。在ES中，Mapping定义索引下的Type字段处理规则，即索引如何建立、索引类型、是否保存原始索引JSON文档，是否压缩原始JSON文档，是否需要分词处理，如何进行分词处理等。</p><p>(2) 在数据库中的增删改查等价于ES中的PUT、Delete、POST、GET</p>]]></content>
      
      
      
        <tags>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>乐字节SpringSecurity权限管理</title>
      <link href="2021/03/22/le-zi-jie-springsecurity-quan-xian-guan-li/"/>
      <url>2021/03/22/le-zi-jie-springsecurity-quan-xian-guan-li/</url>
      
        <content type="html"><![CDATA[<p><strong>SpringSecurity</strong></p><h1 id="SpringSecurity简介"><a href="#SpringSecurity简介" class="headerlink" title="SpringSecurity简介"></a>SpringSecurity简介</h1><h2 id="安全框架概述"><a href="#安全框架概述" class="headerlink" title="安全框架概述"></a>安全框架概述</h2><p>​        用于解决系统安全问题的框架。如果没有安全框架，需要手动处理每个资源的访问控制。使用安全框架后，可以通过配置的方式实现对资源的访问控制。</p><h2 id="常用安全框架"><a href="#常用安全框架" class="headerlink" title="常用安全框架"></a>常用安全框架</h2><ul><li>Spring Security：属于Spring体系。是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的安全框架。提供了一组可以在Spring应用上下文中配置的Bean，充分利用了Spring IOC（控制反转Inversion Of Control），DI（依赖注入Dependency Injection）和AOP（面向切片编程）功能，为应用系统提供声明式的安全访问控制功能，减少了为企业系统安全控制编写的大量重复代码。</li><li>Apache Shiro：Java安全框架，提供了认证，授权，加密，和会话管理。</li></ul><h2 id="Spring-Security简介"><a href="#Spring-Security简介" class="headerlink" title="Spring Security简介"></a>Spring Security简介</h2><p>概述：</p><blockquote><p>Spring Security是一个高度自定义的安全框架。利用 Spring loC/D和AOP功能，为系统提供了声明式安全访问控制功能，减少了为系统安全而编写大量重复代码的工作。使用 Spring Secruity的原因有很多，但大部分都是发现了javiER的 Servlet规范或EJB规范中的安全功能缺乏典型企业应用场景。同时认识到他们在WAR或EAR级别无法移植。因此如果你更换服务器环境，还有大量工作去重新配置你的应用程序。使用 Spring Security解决了这些问题也为你提供许多其他有用的、可定制的安全功能。正如你可能知道的两个应用程序的两个主要区域是“认证和授权”（或者访问控制）。这两点也是 Spring Security重要核心功能。“认证”，是建立一个他声明的主体的过程个“主体”一般是指用户，设备或一些可以在你的应用程序中执行动作的其他系统），通俗点说就是系统认为用户是否能登录。“授权”指确定一个主体是否允许在你的应用程序执行一个动作的过程。通俗点讲就是系统判断用户是否有权限去做某些事情。</p></blockquote><h2 id="UserDetailService类"><a href="#UserDetailService类" class="headerlink" title="UserDetailService类"></a>UserDetailService类</h2><h2 id="PasswordEncoder密码解析器详解"><a href="#PasswordEncoder密码解析器详解" class="headerlink" title="PasswordEncoder密码解析器详解"></a>PasswordEncoder密码解析器详解</h2><p>​        SpringSecurity要求容器必须有PasswordEncoder实例。所以当自定义登录逻辑时要求必须给容器注入PasswordEncoder的bean对象。</p><h3 id="接口介绍"><a href="#接口介绍" class="headerlink" title="接口介绍"></a>接口介绍</h3><ul><li>encode（）：将参数按照特定的解析规则进行解析；</li><li>matches（）：验证从存储中获取的编码密码与编码后提交的原始密码是否匹配。若匹配则返回true，若不匹配则返回false。第一个参数标识需要被解析的密码。第二个参数标识存储的密码。</li><li>upgrade Encoding（）：如果解析的密码能够再次进行解析且达到更安全的结果则返回true，否则返回false</li></ul><p>tip：BCrypt加密</p>]]></content>
      
      
      <categories>
          
          <category> 权限管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringSecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>尚硅谷RBAC权限管理系统学习</title>
      <link href="2021/03/22/shang-huo-gu-rbac-quan-xian-guan-li-xi-tong-xue-xi/"/>
      <url>2021/03/22/shang-huo-gu-rbac-quan-xian-guan-li-xi-tong-xue-xi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 权限管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RBAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot通过JavaMailSender发生邮件</title>
      <link href="2021/03/19/springboot-tong-guo-javamailsender-fa-sheng-you-jian/"/>
      <url>2021/03/19/springboot-tong-guo-javamailsender-fa-sheng-you-jian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前期准备：开启163SMTP服务，并构建基本项目结构</p></blockquote><p><img src="SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/image-20210319141749978.png" alt="image-20210319141749978"></p><ol><li>添加相关pom依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--发送邮件所需依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加相关配置</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9898</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">smtp</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">********@163.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">UU************NZM</span>  <span class="string">//授权码</span></span><br><span class="line">    <span class="attr">default-encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.163.com</span></span><br></pre></td></tr></table></figure><h1 id="发送简单文本邮件"><a href="#发送简单文本邮件" class="headerlink" title="发送简单文本邮件"></a>发送简单文本邮件</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String mailSetFrom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String mailSetTo = <span class="string">&quot;*****u@foxmail.com&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单邮件发送</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendSimpleMail</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">    message.setFrom(mailSetFrom);</span><br><span class="line">    message.setTo(mailSetTo);</span><br><span class="line">    message.setSubject(<span class="string">&quot;这是测试主题&quot;</span>);</span><br><span class="line">    message.setText(<span class="string">&quot;测试邮件内容&quot;</span>);</span><br><span class="line">    mailSender.send(message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/image-20210319143716296.png" alt="image-20210319143716296"></p><h1 id="带附件的邮件发送"><a href="#带附件的邮件发送" class="headerlink" title="带附件的邮件发送"></a>带附件的邮件发送</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mailSetFrom;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String mailSetTo = <span class="string">&quot;*****u@foxmail.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 带有附件的邮件发送</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMailWithAnnex</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">    MimeMessage mimeMessage = mailSender.createMimeMessage();</span><br><span class="line">    MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(mimeMessage,<span class="keyword">true</span>);</span><br><span class="line">    helper.setFrom(mailSetFrom);</span><br><span class="line">    helper.setTo(mailSetTo);</span><br><span class="line">    helper.setSubject(<span class="string">&quot;这是发送带有附件的邮件发送测试&quot;</span>);</span><br><span class="line">    helper.setText(<span class="string">&quot;这是一封带有附件的邮件的测试&quot;</span>);</span><br><span class="line">    <span class="comment">/*设置附件*/</span></span><br><span class="line">    FileSystemResource fileSystemResource = <span class="keyword">new</span> FileSystemResource(<span class="keyword">new</span> File(<span class="string">&quot;图片路径static\\images\\photo.jpg&quot;</span>));</span><br><span class="line">    helper.addAttachment(<span class="string">&quot;这是附件名附件-1.jpg&quot;</span>,fileSystemResource);</span><br><span class="line">    helper.addAttachment(<span class="string">&quot;附件-2.jpg&quot;</span>,fileSystemResource);</span><br><span class="line">    <span class="comment">/*发送邮件*/</span></span><br><span class="line">    mailSender.send(mimeMessage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="嵌入静态资源的邮件发送"><a href="#嵌入静态资源的邮件发送" class="headerlink" title="嵌入静态资源的邮件发送"></a>嵌入静态资源的邮件发送</h1><blockquote><p>经测试163邮箱SMTP发送静态资源有钱会被退回，误判为垃圾邮件；</p><p>这里采用QQ邮箱SMTP服务</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mailSetFrom;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String mailSetTo = <span class="string">&quot;hmoumou@foxmail.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在发送的邮件中迁入静态资源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMailWithStaticSource</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">    MimeMessage mimeMessage = mailSender.createMimeMessage();</span><br><span class="line">    MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(mimeMessage, <span class="keyword">true</span>);</span><br><span class="line">    helper.setFrom(mailSetFrom);</span><br><span class="line">    helper.setTo(mailSetTo);</span><br><span class="line">    helper.setSubject(<span class="string">&quot;这是一封嵌入静态资源的邮件发送主题&quot;</span>);</span><br><span class="line">    helper.setText(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&lt;h3&gt;这一封邮件静态资源&lt;/h3&gt;&lt;img src=\&quot;cid:photo\&quot;&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">    FileSystemResource fileSystemResource = <span class="keyword">new</span> FileSystemResource(<span class="keyword">new</span> File(<span class="string">&quot;static\\images\\photo.jpg&quot;</span>));</span><br><span class="line">    <span class="comment">/*addLine函数中的资源名称photo必须与正文text中的cid一致！！*/</span></span><br><span class="line">    helper.addInline(<span class="string">&quot;photo&quot;</span>,fileSystemResource);</span><br><span class="line">    mailSender.send(mimeMessage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/image-20210319151922078.png" alt="image-20210319151922078"></p><h1 id="使用freemark模板发送邮件"><a href="#使用freemark模板发送邮件" class="headerlink" title="使用freemark模板发送邮件"></a>使用freemark模板发送邮件</h1><blockquote><p>引入相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><ol><li><p>自定义模板文件样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>你好，$&#123;userName&#125;。欢迎注册本网站<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://dss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3461177213,1528805342&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><pre><code class="java">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)private String mailSetFrom;private static String mailSetTo = &quot;hmoumou@foxmail.com&quot;;@Autowiredprivate JavaMailSender mailSender;@Autowiredprivate Configuration configuration;    /**     * 使用模板文件发送邮件     */    @Test    public void sendMailWithTemplate() throws MessagingException, IOException, TemplateException &#123;        MimeMessage mimeMessage = mailSender.createMimeMessage();        MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);        helper.setFrom(mailSetFrom);        helper.setTo(mailSetTo);        helper.setSubject(&quot;通过模板文件进行&quot;);        HashMap&lt;String, Object&gt; model = new HashMap&lt;&gt;();        model.put(&quot;userName&quot;,&quot;章邯&quot;);        Template template = configuration.getTemplate(&quot;123.ftl&quot;);        String html = FreeMarkerTemplateUtils.processTemplateIntoString(template,model);        helper.setText(html,true);        mailSender.send(mimeMessage);    &#125;</code></pre></li></ol><p><img src="SpringBoot%E9%80%9A%E8%BF%87JavaMailSender%E5%8F%91%E7%94%9F%E9%82%AE%E4%BB%B6/image-20210319162630816.png" alt="image-20210319162630816"></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaMailSender </tag>
            
            <tag> 发邮件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA实现文件上传FastDFS</title>
      <link href="2021/03/12/idea-shi-xian-wen-jian-shang-chuan-fastdfs/"/>
      <url>2021/03/12/idea-shi-xian-wen-jian-shang-chuan-fastdfs/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.hmoumou.xyz/2020/08/13/linux-centos7.5-an-zhuang-shi-yong-fastdfs/">fastDFS配置</a></p><ol><li><p>spring脚手架快速构建springweb项目</p></li><li><p>添加相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        使用fastDFS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.tobato<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.26.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--生成缩略图所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.coobird<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thumbnailator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>新建FastClientImporter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Import(FdfsClientConfig.class)</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 解决jmx重复注册bean的问题</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="meta">@EnableMBeanExport(registration = RegistrationPolicy.IGNORE_EXISTING)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastClientImporter</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>test类测试</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes = DemoApplication.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastDFSTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FastFileStorageClient storageClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ThumbImageConfig thumbImageConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpload</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;D:\\photo1.jpg&quot;</span>);</span><br><span class="line">        StorePath storePath = <span class="keyword">this</span>.storageClient.uploadImageAndCrtThumbImage(<span class="keyword">new</span> FileInputStream(file), file.length(), <span class="string">&quot;jpg&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(storePath.getFullPath()+ <span class="string">&quot; 带分组的路径&quot;</span>);</span><br><span class="line">        System.out.println(storePath.getPath()+ <span class="string">&quot; 不带分组的路径&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String path = thumbImageConfig.getThumbImagePath(storePath.getPath());</span><br><span class="line">        System.out.println(path+<span class="string">&quot; 缩略图路径&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="IDEA%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0FastDFS/1584850135123.jpg" alt="1584850135123"></p>]]></content>
      
      
      
        <tags>
            
            <tag> fastDFS </tag>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习</title>
      <link href="2021/03/10/javascript-xue-xi/"/>
      <url>2021/03/10/javascript-xue-xi/</url>
      
        <content type="html"><![CDATA[<p><strong>JavaScript学习笔记</strong></p><h1 id="JavaScript教程"><a href="#JavaScript教程" class="headerlink" title="JavaScript教程"></a>JavaScript教程</h1><p><strong>依据菜鸟教程整理</strong></p><h2 id="JavaScript输出"><a href="#JavaScript输出" class="headerlink" title="JavaScript输出"></a>JavaScript输出</h2><blockquote><p>显示数据方式：</p><pre><code>1. window.alert()  弹出警示框2. document.write()  将内容写道HTML文档中3. innerHTML  将内容写入到HTML元素中4. console.log()   输出到控制台</code></pre></blockquote><p>在js中操作元素：<code>document.getElementById(&quot;元素id&quot;)</code></p><p>使用3    <code>document.getElementById(&quot;test&quot;).innerHTML = &quot;改变&quot;</code></p><h2 id="JavaScript数据类型"><a href="#JavaScript数据类型" class="headerlink" title="JavaScript数据类型"></a>JavaScript数据类型</h2><ul><li>基本数据类型：String, Boolean, Number, Null(空), Undefined(未定义), Symbol(独一无二的值)</li><li>引用数据类型：Array, Object, Function</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x;  <span class="comment">//x为undefined</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;I&#x27;m King&quot;</span>;  <span class="comment">//x为string，双引号中可以有单引号，如果嵌一个双引号最好转义 \</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">5</span>; <span class="comment">//x为number</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">2e10</span>;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">2e-10</span>;   <span class="comment">//科学计数法表示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数组创建</span></span><br><span class="line"><span class="keyword">var</span> arrs = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">arrs[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arrs[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arrs[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;walk&quot;</span>,<span class="string">&quot;bike&quot;</span>,<span class="string">&quot;car&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arrs=[<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//JavaScript对象的创建与寻址</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">name</span>:<span class="string">&quot;Peter&quot;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(person.name)</span><br><span class="line"><span class="built_in">console</span>.log(person[<span class="string">&quot;age&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">//undefined,null</span></span><br><span class="line"><span class="literal">undefined</span> == <span class="literal">null</span>;  <span class="comment">//true</span></span><br><span class="line"><span class="literal">undefined</span> === <span class="literal">null</span>;   <span class="comment">//false</span></span><br><span class="line"><span class="comment">//undefined表示变量不含值</span></span><br><span class="line"><span class="comment">//可以通过将变量的值设为null，来清空变量</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript对象"><a href="#JavaScript对象" class="headerlink" title="JavaScript对象"></a>JavaScript对象</h2><blockquote><p>对象是拥有属性和方法的数据</p></blockquote><p><strong>对象定义</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">name</span>:<span class="string">&quot;Peter&quot;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(person.name)</span><br><span class="line"><span class="built_in">console</span>.log(person[<span class="string">&quot;age&quot;</span>])</span><br></pre></td></tr></table></figure><p>通常认为JavaScript对象是键值对的容器。键值对（对象属性）写法    <code>name:value</code></p><p><strong>对象方法</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=<span class="string">&quot;test&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    name:<span class="string">&quot;Peter&quot;</span>,</span><br><span class="line">    age：<span class="number">18</span>，</span><br><span class="line">    info: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name+<span class="string">&quot;&quot;</span>+<span class="built_in">this</span>.age</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>).innerHTML = person.info();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>对象方法的访问</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    methodName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>+<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问通过</span></span><br><span class="line">obj.methodName();   <span class="comment">//返回4</span></span><br><span class="line"><span class="comment">//如果未加（）</span></span><br><span class="line">obj.methodName;   <span class="comment">//返回函数的定义，function()&#123;return 1+3;d&#125;</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript函数"><a href="#JavaScript函数" class="headerlink" title="JavaScript函数"></a>JavaScript函数</h2><blockquote><p>函数是由时间驱动或当它被调用时执行的可重复使用的代码块</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//语法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//执行代买</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>可携带参数，调用带参数的函数</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 变量和参数对应顺序一致</span></span><br><span class="line">&lt;button onclick=<span class="string">&quot;cont(&#x27;Peter&#x27;,&#x27;Hello&#x27;)&quot;</span>&gt;&lt;/button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cont</span>(<span class="params">name,action</span>)</span>&#123;</span><br><span class="line">    alert(name + <span class="string">&quot;&quot;</span> + action)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>带返回值的函数：</strong></p><blockquote><p>在使用return语句时，函数停止执行并返回下相应值。返回值可选</p><p>停止的仅仅是函数，并不是整个JavaScript</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">num</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;   <span class="comment">// 作为参数的变量为形参</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(num(<span class="number">8</span>,<span class="number">9</span>))   <span class="comment">// HTML文档中输出9，带入的参数为实参</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>全局变量与局部变量：</strong></p><ul><li>局部变量：函数内部声明（通过var）的变量，作用域是局部的只能在函数内部访问。一次各不同函数间可使用同名的局部变量。局部变量在函数运行后被删除；</li><li>全局变量：在函数外声明的变量，作用域是网页上的所有脚本与函数。在页面关闭后被删除；</li><li>非严格模式下给为声明变量赋值创建的全局变量，是全局对象的可配置属性，可删除</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;   <span class="comment">//不可配置全局属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> b =<span class="number">2</span>;  <span class="comment">//局部变量</span></span><br><span class="line">&#125;</span><br><span class="line">c  = <span class="number">3</span>;   <span class="comment">//可配置全局属性，可删除</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> a;  <span class="comment">//无法删除</span></span><br><span class="line"><span class="keyword">delete</span> c;  <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>实现全选与取消全选：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    电影：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    电视：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    音乐：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    手机：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;checkAll()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;checkNull()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> cbList = <span class="built_in">document</span>.getElementsByName(<span class="string">&quot;checkbox&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">checkAll</span>(<span class="params">cb</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (cbList != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cbList.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                cbList[i].checked = <span class="string">&quot;checked&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">checkNull</span>(<span class="params">cb</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (cbList != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cbList.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                cbList[i].checked = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    电影：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    电视：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    音乐：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    手机：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkAll(this)&quot;</span> <span class="attr">value</span>=<span class="string">&quot;全选&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> checkd = <span class="literal">false</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">checkAll</span>(<span class="params">element</span>) </span>&#123;</span></span><br><span class="line">        checkd = !checkd;</span><br><span class="line"><span class="javascript">        element.value = checkd ? <span class="string">&quot;全不选&quot;</span> : <span class="string">&quot;全选&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> ckList = <span class="built_in">document</span>.getElementsByName(<span class="string">&quot;checkbox&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> ckList) &#123;</span></span><br><span class="line">            ckList[i].checked = checkd;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>函数定义：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span>sd<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test()&quot;</span>&gt;</span>点击test<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test1&quot;</span>&gt;</span>sd<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test1()&quot;</span>&gt;</span>点击test1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test2&quot;</span>&gt;</span>sd<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test2()&quot;</span>&gt;</span>点击test2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test3&quot;</span>&gt;</span>sd<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test3(this)&quot;</span>&gt;</span>点击test3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//传统定义函数方式</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>).innerHTML = <span class="string">&quot;订单&quot;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> test1 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;test1&quot;</span>).innerHTML = <span class="string">&quot;哈哈哈哈&quot;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">//使用箭头函数定义函数时可以省略function关键字</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> test2 = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;test2&quot;</span>).innerHTML = <span class="string">&quot;来浏览&quot;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="comment">//当函数只有一个参数是可以简写为</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> test3 = <span class="function"><span class="params">element</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;test3&quot;</span>).innerHTML = <span class="string">&quot;来dd浏览&quot;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript事件"><a href="#JavaScript事件" class="headerlink" title="JavaScript事件"></a>JavaScript事件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;some-HTML-element some-event=<span class="string">&quot;JavaScript 代码&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//eg</span></span><br><span class="line">&lt;button onclick=&quot;this.innerHTML=Date()&quot;&gt;&lt;/button&gt;;  //不推荐</span><br><span class="line">&lt;button onclick=<span class="string">&quot;test()&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><p><strong>常见的HTML事件：</strong></p><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>onchange</td><td>HTML元素改变</td></tr><tr><td>onclick</td><td>用户点击HTML元素时</td></tr><tr><td>onmouseover</td><td>用户在一个HTML元素上移动鼠标</td></tr><tr><td>onmouseout</td><td>用户在一个HTML元素上移开鼠标</td></tr><tr><td>onkeydown</td><td>用户按下按键</td></tr><tr><td>onload</td><td>浏览器已完成页面的加载</td></tr></tbody></table><p><a href="https://www.runoob.com/jsref/dom-obj-event.html">更多DOM事件</a></p><p><strong>事件句柄：</strong></p><ul><li>在为元素添加或删除事件句柄时，不可将event参数设置为onclick，而应该是click</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加事件句柄原型</span></span><br><span class="line"><span class="comment">//element.addEventListener(event, function, [useCapture])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除句柄原型</span></span><br><span class="line"><span class="comment">//element.removeEventListener(event, function, [useCapture])</span></span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;input id=<span class="string">&quot;test&quot;</span> type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;提交&quot;</span> /&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;button&quot;</span> id=<span class="string">&quot;test&quot;</span> value=<span class="string">&quot;提交&quot;</span> /&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> test = <span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">test.addEventListener(<span class="string">&quot;mouseout&quot;</span>,myfun2);</span><br><span class="line">test.addEventListener(<span class="string">&quot;mouseout&quot;</span>,myfun1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myfun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;你好1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myfun2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;你好2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="JavaScript字符串"><a href="#JavaScript字符串" class="headerlink" title="JavaScript字符串"></a>JavaScript字符串</h2><p>主要看一下字符串的属性与方法</p><p><strong>字符串属性：</strong></p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>constructor</td><td>返回创建字符串属性的函数</td></tr><tr><td>length</td><td>返回字符串长度</td></tr><tr><td>prototype</td><td>允许向对象添加属性和方法</td></tr></tbody></table><p><strong>字符串方法</strong></p><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">charAt()</td><td align="left">返回指定索引位置的字符</td></tr><tr><td align="left">charCodeAt()</td><td align="left">返回指定索引位置字符的 Unicode 值</td></tr><tr><td align="left">concat()</td><td align="left">连接两个或多个字符串，返回连接后的字符串</td></tr><tr><td align="left">fromCharCode()</td><td align="left">将 Unicode 转换为字符串</td></tr><tr><td align="left">indexOf()</td><td align="left">返回字符串中检索指定字符第一次出现的位置</td></tr><tr><td align="left">lastIndexOf()</td><td align="left">返回字符串中检索指定字符最后一次出现的位置</td></tr><tr><td align="left">localeCompare()</td><td align="left">用本地特定的顺序来比较两个字符串</td></tr><tr><td align="left">match()</td><td align="left">找到一个或多个正则表达式的匹配</td></tr><tr><td align="left">replace()</td><td align="left">替换与正则表达式匹配的子串</td></tr><tr><td align="left">search()</td><td align="left">检索与正则表达式相匹配的值</td></tr><tr><td align="left">slice()</td><td align="left">提取字符串的片断，并在新的字符串中返回被提取的部分</td></tr><tr><td align="left">split()</td><td align="left">把字符串分割为子字符串数组</td></tr><tr><td align="left">substr()</td><td align="left">从起始索引号提取字符串中指定数目的字符</td></tr><tr><td align="left">substring()</td><td align="left">提取字符串中两个指定的索引号之间的字符</td></tr><tr><td align="left">toLocaleLowerCase()</td><td align="left">根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td align="left">toLocaleUpperCase()</td><td align="left">根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td align="left">toLowerCase()</td><td align="left">把字符串转换为小写</td></tr><tr><td align="left">toString()</td><td align="left">返回字符串对象值</td></tr><tr><td align="left">toUpperCase()</td><td align="left">把字符串转换为大写</td></tr><tr><td align="left">trim()</td><td align="left">移除字符串首尾空白</td></tr><tr><td align="left">valueOf()</td><td align="left">返回某个字符串对象的原始值</td></tr></tbody></table><p>更多方法实例可以参见：<a href="https://www.runoob.com/jsref/jsref-obj-string.html">JavaScript String 对象</a>。</p><ul><li><p>在JS中 ==  与 === 不同</p><p>1、对于 string、number 等基础类型，== 和 === 是有区别的</p><ul><li>a）不同类型间比较，== 之比较 “转化成同一类型后的值” 看 “值” 是否相等，=== 如果类型不同，其结果就是不等。</li><li>b）同类型比较，直接进行 “值” 比较，两者结果一样。</li></ul><p>2、对于 Array,Object 等高级类型，== 和 === 是没有区别的</p><p>进行 “指针地址” 比较</p><p>3、基础类型与高级类型，== 和 === 是有区别的</p><ul><li>a）对于 ==，将高级转化为基础类型，进行 “值” 比较</li><li>b）因为类型不同，=== 结果为 false</li></ul><p>4、!= 为 == 的非运算，!== 为 === 的非运算</p></li></ul><h2 id="JavaScript比较"><a href="#JavaScript比较" class="headerlink" title="JavaScript比较"></a>JavaScript比较</h2><p>三目运算符（条件运算符）</p><p>语法： <em>variablename</em>=(<em>condition</em>)?<em>value1</em>:<em>value2</em> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">90</span>;</span><br><span class="line"><span class="keyword">var</span> result = age&gt;<span class="number">18</span>?<span class="string">&quot;成年&quot;</span>:<span class="string">&quot;未成年&quot;</span></span><br></pre></td></tr></table></figure><p> <strong>JavaScript多元运算符</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function test(p)&#123;</span><br><span class="line">    var a&#x3D;5,b&#x3D;12;</span><br><span class="line">    return p&gt;1?p&lt;b?p&gt;b:p&#x3D;6:p&#x3D;3; &#x2F;&#x2F; 这一行中出现了多个问号和冒号，看起来很乱怎么办呢</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.write(test(9));</span><br></pre></td></tr></table></figure><p>其实很简单，寻找到多元运算符的头 <strong>?</strong> 和尾 <strong>:</strong> 就好办多了</p><p>就成了这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p&gt;1?p&lt;b?p&gt;b:p&#x3D;6:p&#x3D;3</span><br><span class="line"></span><br><span class="line">p&gt;1? 整体 :p&#x3D;3</span><br></pre></td></tr></table></figure><p>1、当 p&gt;1 时返回 p&lt;b?p&gt;b:p=6</p><ul><li>1.1、当 p&lt;b 时返回 p&gt;b</li><li>1.2、当 p&gt;=b 时返回 p=6</li></ul><p>2、当 p&lt;=1 是返回 p=3 所以先执行 1</p><p>3、实例中当 p＝9 的时候，返回 p&lt;b?p&gt;b:p=6 接着执行 1.1，当 p＝9&lt;12 时，返回 p&gt;b，即 9&gt;12，条件不成立所以最终结果为 false。</p><p><strong>三元表达式扩展</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var a&#x3D;6;</span><br><span class="line">1&#x3D;&#x3D;a?console.log(&quot;a是1&quot;):2&#x3D;&#x3D;a?console.log(&quot;a是2&quot;):3&#x3D;&#x3D;a?console.log(&quot;a是3&quot;):console.log(&quot;a不是1,2,3&quot;);</span><br></pre></td></tr></table></figure><p>形如以上表达式，找到第一个与第二个问号之间的冒号，将其分开：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&#x3D;&#x3D;a?console.log(&#39;a是1&#39;)</span><br><span class="line">2&#x3D;&#x3D;a?console.log(&quot;a是2&quot;):3&#x3D;&#x3D;a?console.log(&quot;a是3&quot;):console.log(&quot;a不是1,2,3&quot;);</span><br></pre></td></tr></table></figure><p>此时判断上半部分 a 不为 1 进行下半部分判断：</p><p>再将其分开：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2&#x3D;&#x3D;a?console.log(&quot;a是2&quot;)</span><br><span class="line">3&#x3D;&#x3D;a?console.log(&quot;a是3&quot;):console.log(&quot;a不是1,2,3&quot;);</span><br></pre></td></tr></table></figure><p>此时判断上半部分 a 不为 2 进行下半部分判断。</p><p>此时判断下半部分 a 不为 3 输出 <strong>“不为1,2,3”</strong>。</p><h2 id="JavaScript条件语句"><a href="#JavaScript条件语句" class="headerlink" title="JavaScript条件语句"></a>JavaScript条件语句</h2><ul><li>**if语句 **只有当指定条件为 true 时，使用该语句来执行代码</li><li>**if…else语句 **当条件为 true 时执行代码，当条件为 false 时执行其他代码</li><li>**if…else if …else语句 **使用该语句来选择多个代码块之一来执行</li><li>**switch语句 **使用该语句来选择多个代码块之一来执行</li></ul><h2 id="JavaScript-switch语句"><a href="#JavaScript-switch语句" class="headerlink" title="JavaScript switch语句"></a>JavaScript switch语句</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(n)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        执行代码块 <span class="number">1</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        执行代码块 <span class="number">2</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        与 <span class="keyword">case</span> <span class="number">1</span> 和 <span class="keyword">case</span> <span class="number">2</span> 不同时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>default 关键词来规定匹配不存在时做的事情：</li><li>switch中的case判断是 === 判断</li></ul><h2 id="JavaScript-for循环"><a href="#JavaScript-for循环" class="headerlink" title="JavaScript for循环"></a>JavaScript for循环</h2><ul><li><strong>for</strong> - 循环代码块一定的次数 ，遍历字符串、数组</li><li><strong>for/in</strong> - 循环遍历对象的属性， 遍历对象</li><li><strong>while</strong> - 当指定的条件为 true 时循环指定的代码块</li><li><strong>do/while</strong> - 同样当指定的条件为 true 时循环指定的代码块</li></ul><ol><li>for/in循环，遍历</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//遍历循环对象</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">name</span>:<span class="string">&quot;Peter&quot;</span>,<span class="attr">age</span>:<span class="string">&quot;25&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> a <span class="keyword">in</span> person)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(person[a]+<span class="string">&quot;&lt;br&gt;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历循环数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> b <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(arr[b])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/js/js-loop-for.html">参考for/of循环</a></p><p><strong>for…of</strong> 是 ES6 新引入的特性。它既比传统的for循环简洁，同时弥补了forEach和for-in循环的短板。</p><h2 id="JavaScript-while-循环"><a href="#JavaScript-while-循环" class="headerlink" title="JavaScript while 循环"></a>JavaScript while 循环</h2><ul><li>while</li><li>do/while</li></ul><p>do…while至少执行一次</p><h2 id="JavaScript-break-和-continue-语句"><a href="#JavaScript-break-和-continue-语句" class="headerlink" title="JavaScript break 和 continue 语句"></a>JavaScript break 和 continue 语句</h2><blockquote><p>break是跳出循环；</p><p>continue是跳出循环中的一次迭代（简单就例如一个语句循环6此，但有一个不满足时跳出该次循环）</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (i==<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x=x + <span class="string">&quot;The number is &quot;</span> + i + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(x);</span><br></pre></td></tr></table></figure><ul><li>break：当 i!=3 时，跳出，for循环，输出结果只有0，1，2</li><li>continue：当 i!=3 时，跳出本次，进入下一次循环，结果0，1，2，4，5，6，7，8，9</li></ul><h2 id="JavaScript-typeof-null-undefined"><a href="#JavaScript-typeof-null-undefined" class="headerlink" title="JavaScript typeof   null   undefined"></a>JavaScript typeof   null   undefined</h2><ol><li><p>typeof操作符</p><p>用于检测变量的数据类型</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="string">&quot;John&quot;</span>                <span class="comment">// 返回 string</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">3.14</span>                  <span class="comment">// 返回 number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">false</span>                 <span class="comment">// 返回 boolean</span></span><br><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]             <span class="comment">// 返回 object</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;<span class="attr">name</span>:<span class="string">&#x27;John&#x27;</span>, <span class="attr">age</span>:<span class="number">34</span>&#125; <span class="comment">// 返回 object</span></span><br></pre></td></tr></table></figure><ol start="2"><li>undefined 和 null</li></ol><p>null 和 undefined 的值相等，但类型不等：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span>       <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span>         <span class="comment">// object</span></span><br><span class="line"><span class="literal">null</span> === <span class="literal">undefined</span>      <span class="comment">// false</span></span><br><span class="line"><span class="literal">null</span> == <span class="literal">undefined</span>      <span class="comment">// true</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = <span class="literal">null</span>;  <span class="comment">//值为null（空），类型为对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person = <span class="literal">undefined</span>;  <span class="comment">//值为undefined，类型为undefined。任何变量都可以通过设置值为undefined清空</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript类型转换"><a href="#JavaScript类型转换" class="headerlink" title="JavaScript类型转换"></a>JavaScript类型转换</h2><ul><li>数据类型：string    number    boolean    symbol    object    function</li><li>对象类型：Object    Date    Array</li><li>不含值的数据类型：null    undefined</li></ul><p>请注意：</p><ul><li>NaN 的数据类型是 number</li><li>数组(Array)的数据类型是 object</li><li>日期(Date)的数据类型为 object</li><li>null 的数据类型是 object</li><li>未定义变量的数据类型为 undefined</li></ul><ol><li><strong>constructor属性</strong></li></ol><p>返回变量的构造函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkArray</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr.constructor().toString().indexOf(<span class="string">&quot;Array&quot;</span>) &gt; -<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;它是数组&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;它不是数组&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/js/js-type-conversion.html">类型转换更多</a></p><h2 id="JavaScript正则表达式"><a href="#JavaScript正则表达式" class="headerlink" title="JavaScript正则表达式"></a>JavaScript正则表达式</h2><ol><li> 什么是正则表达式？</li></ol><p>正则表达式是由一个字符序列形成的搜索模式。</p><p>当你在文本中搜索数据时，你可以用搜索模式来描述你要查询的内容。</p><p>正则表达式可以是一个简单的字符，或一个更复杂的模式。</p><p>正则表达式可用于所有文本搜索和文本替换的操作。</p><ol start="2"><li>语法</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;正则表达式主体&#x2F;修饰符(可选)</span><br></pre></td></tr></table></figure><p>其中修饰符是可选的。</p><p>例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">str.search(<span class="regexp">/ello/i</span>)</span><br></pre></td></tr></table></figure><h2 id="正则表达式修饰符"><a href="#正则表达式修饰符" class="headerlink" title="正则表达式修饰符"></a>正则表达式修饰符</h2><p><strong>修饰符</strong> 可以在全局搜索中不区分大小写:</p><table><thead><tr><th align="left">修饰符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">i</td><td align="left">执行对大小写不敏感的匹配。</td></tr><tr><td align="left">g</td><td align="left">执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。</td></tr><tr><td align="left">m</td><td align="left">执行多行匹配。</td></tr></tbody></table><hr><h2 id="正则表达式模式"><a href="#正则表达式模式" class="headerlink" title="正则表达式模式"></a>正则表达式模式</h2><p>方括号用于查找某个范围内的字符：</p><table><thead><tr><th align="left">表达式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">[abc]</td><td align="left">查找方括号之间的任何字符。</td></tr><tr><td align="left">[0-9]</td><td align="left">查找任何从 0 至 9 的数字。</td></tr><tr><td align="left">(x|y)</td><td align="left">查找任何以 | 分隔的选项。</td></tr></tbody></table><p>元字符是拥有特殊含义的字符：</p><table><thead><tr><th align="left">元字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\d</td><td align="left">查找数字。</td></tr><tr><td align="left">\s</td><td align="left">查找空白字符。</td></tr><tr><td align="left">\b</td><td align="left">匹配单词边界。</td></tr><tr><td align="left">\uxxxx</td><td align="left">查找以十六进制数 xxxx 规定的 Unicode 字符。</td></tr></tbody></table><p>量词:</p><table><thead><tr><th align="left">量词</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">n+</td><td align="left">匹配任何包含至少一个 <em>n</em> 的字符串。</td></tr><tr><td align="left">n*</td><td align="left">匹配任何包含零个或多个 <em>n</em> 的字符串。</td></tr><tr><td align="left">n?</td><td align="left">匹配任何包含零个或一个 <em>n</em> 的字符串。</td></tr></tbody></table><ol start="3"><li>RegExp对象使用（它时一个预定义属性和方法的正则表达式对象）</li></ol><p><strong>完整的 RegExp 参考手册</strong></p><p>完整的 RegExp 对象参考手册，请参考我们的 <a href="https://www.runoob.com/jsref/jsref-obj-regexp.html">JavaScript RegExp 参考手册</a>。</p><p>该参考手册包含了所有 RegExp 对象的方法和属性。</p><h2 id="JavaScript错误-throw-try-catch"><a href="#JavaScript错误-throw-try-catch" class="headerlink" title="JavaScript错误  throw   try   catch"></a>JavaScript错误  throw   try   catch</h2><p><a href="https://www.runoob.com/js/js-errors.html">https://www.runoob.com/js/js-errors.html</a></p><p><strong>try</strong> 语句测试代码块的错误。</p><p><strong>catch</strong> 语句处理错误。</p><p><strong>throw</strong> 语句创建自定义错误。</p><p><strong>finally</strong> 语句在 try 和 catch 语句之后，无论是否有触发异常，该语句都会执行。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript 语句 try 和 catch 是成对出现的。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//语法</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    ...    <span class="comment">//异常的抛出</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">    ...    <span class="comment">//异常的捕获与处理</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    ...    <span class="comment">//结束处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> message, x;</span><br><span class="line">  message = <span class="built_in">document</span>.getElementById(<span class="string">&quot;p01&quot;</span>);</span><br><span class="line">  message.innerHTML = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  x = <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).value;</span><br><span class="line">  <span class="keyword">try</span> &#123; </span><br><span class="line">    <span class="keyword">if</span>(x == <span class="string">&quot;&quot;</span>) <span class="keyword">throw</span> <span class="string">&quot;值是空的&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isNaN</span>(x)) <span class="keyword">throw</span> <span class="string">&quot;值不是一个数字&quot;</span>;</span><br><span class="line">    x = <span class="built_in">Number</span>(x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">10</span>) <span class="keyword">throw</span> <span class="string">&quot;太大&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">5</span>) <span class="keyword">throw</span> <span class="string">&quot;太小&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">    message.innerHTML = <span class="string">&quot;错误: &quot;</span> + err + <span class="string">&quot;.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JavaScript调试"><a href="#JavaScript调试" class="headerlink" title="JavaScript调试"></a>JavaScript调试</h2><p>代码调试就是在程序代码中寻找错误的过程</p><ol><li>console.log()控制台打印输出；</li><li>在工具中打断点；</li><li>在js代码中添加<code>debugger</code></li></ol><p><strong>debugger 关键字</strong></p><p><strong>debugger</strong> 关键字用于停止执行 JavaScript，并调用调试函数。</p><p>这个关键字与在调试工具中设置断点的效果是一样的。</p><p>如果没有调试可用，debugger 语句将无法工作。</p><h2 id="JavaScript变量提升"><a href="#JavaScript变量提升" class="headerlink" title="JavaScript变量提升"></a>JavaScript变量提升</h2><p>​        原则上变量应该先声明后使用，但是程序员小白常常忘记声明就使用了变量，这样做js代码在执行的时候不报错，只是返回了一个undefined。这种情况就是变量提升。</p><pre><code>   计算机执行的时候会把未声明就使用的变量隐式的放到代码的最顶端。需要注意的是变量虽然发生了提升，但是给变量赋的值是不会随之提升的，所以就会得到结果undefined。</code></pre><p>什么是函数提升？</p><p>​        与变量提升的意思差不多，先使用函数，后再声明函数，这种违背逻辑的事情在JavaScript中是允许的，这门语言就是这么灵活。</p><p>​        与变量提升不同的是，函数的返回值也会随之提升，所以你会发现在<script>标签中的任何地方都能调用函数并且使用函数的返回值。</p><ul><li><p>需要注意的是初始化不会提升eg<code>var x = 7</code></p></li><li><p>变量提升就是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x= <span class="number">5</span></span><br><span class="line"><span class="built_in">document</span>.write(x)</span><br><span class="line"><span class="keyword">var</span> x</span><br><span class="line"><span class="comment">//也就是变量可以先使用再声明</span></span><br></pre></td></tr></table></figure></li><li><p>遇到 script 标签的话 js 就进行预解析，将变量 var 和 function 声明提升，但不会执行 function，然后就进入上下文执行，上下文执行还是执行预解析同样操作，直到没有 var 和 function，就开始执行上下文。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;5;</span><br><span class="line">show();</span><br><span class="line">var a;</span><br><span class="line">function show()&#123;&#125;;</span><br></pre></td></tr></table></figure><p>预解析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function show()&#123;&#125;;</span><br><span class="line">var a;</span><br><span class="line">a&#x3D;5;</span><br><span class="line">show();</span><br></pre></td></tr></table></figure><p>需要注意都是函数声明提升直接把整个函数提到执行环境的最顶端</p><h2 id="JavaScript严格模式（use-strict）"><a href="#JavaScript严格模式（use-strict）" class="headerlink" title="JavaScript严格模式（use strict）"></a>JavaScript严格模式（use strict）</h2><blockquote><p>严格模式通过在脚本或函数的头部添加 <strong>use strict</strong>; 表达式来声明。</p><p><a href="https://www.runoob.com/js/js-strict.html">https://www.runoob.com/js/js-strict.html</a></p></blockquote><p><strong>为什么使用严格模式:</strong></p><ul><li><p>消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;</p></li><li><p>消除代码运行的一些不安全之处，保证代码运行的安全；</p></li><li><p>提高编译器效率，增加运行速度；</p></li><li><p>为未来新版本的Javascript做好铺垫。</p></li></ul><p>“严格模式”体现了Javascript更合理、更安全、更严谨的发展方向，包括IE 10在内的主流浏览器，都已经支持它，许多大项目已经开始全面拥抱它。</p><p>另一方面，同样的代码，在”严格模式”中，可能会有不一样的运行结果；一些在”正常模式”下可以运行的语句，在”严格模式”下将不能运行。掌握这些内容，有助于更细致深入地理解Javascript，让你变成一个更好的程序员。</p><ul><li><p>严格模式中的限制：</p><ul><li>不允许使用未声明的变量</li><li>不允许删除变量或对象</li><li>不允许删除函数</li><li>不允许变量重名</li><li>不允许使用八进制</li><li>不允许使用转义符</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> x = \<span class="number">010</span>;            <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>不允许对只读属性赋值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj, <span class="string">&quot;x&quot;</span>, &#123;<span class="attr">value</span>:<span class="number">0</span>, <span class="attr">writable</span>:<span class="literal">false</span>&#125;);</span><br><span class="line"></span><br><span class="line">obj.x = <span class="number">3.14</span>;            <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>不允许对一个使用getter方法读取的属性进行赋值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="keyword">get</span> <span class="title">x</span>() &#123;<span class="keyword">return</span> <span class="number">0</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line">obj.x = <span class="number">3.14</span>;            <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>不允许删除一个不允许删除的属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="built_in">Object</span>.prototype; <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>变量名不能使用“eval”字符串</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="built_in">eval</span> = <span class="number">3.14</span>;         <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>变量名不能使用“arguments”字符串</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="built_in">arguments</span> = <span class="number">3.14</span>;    <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>不允许使用下述语句</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">with</span> (<span class="built_in">Math</span>)&#123;x = cos(<span class="number">2</span>)&#125;; <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>由于安全原因再作用域“eval（）”中创建的变量不能被调用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="built_in">eval</span> (<span class="string">&quot;var x = 2&quot;</span>);</span><br><span class="line">alert (x);               <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><ul><li>禁止this关键字指向全局对象，使用必先new</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="built_in">this</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 返回false，因为&quot;this&quot;指向全局对象，&quot;!this&quot;就是false</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line"><span class="meta">    &quot;use strict&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> !<span class="built_in">this</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 返回true，因为严格模式下，this的值为undefined，所以&quot;!this&quot;为true。</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="JavaScript使用误区"><a href="#JavaScript使用误区" class="headerlink" title="JavaScript使用误区"></a>JavaScript使用误区</h2><p><a href="https://www.runoob.com/js/js-mistakes.html">https://www.runoob.com/js/js-mistakes.html</a></p><ol><li>赋值运算符应用错误 =    ==</li><li>比较运算符常见错误  ==   ===</li><li>加法与连接注意事项</li><li>浮点型数据使用注意</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">0.1</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="number">0.2</span>;</span><br><span class="line"><span class="keyword">var</span> z = x + y            <span class="comment">// z 的结果为 0.30000000000000004</span></span><br><span class="line"><span class="keyword">if</span> (z == <span class="number">0.3</span>)            <span class="comment">// 返回 false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//为解决以上问题，可以用整数的乘除法来解决：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">var</span> z = (x * <span class="number">10</span> + y * <span class="number">10</span>) / <span class="number">10</span>;       <span class="comment">// z 的结果为 0.3</span></span><br></pre></td></tr></table></figure><ol start="5"><li><p>JavaScript字符串分行</p></li><li><p>分号的使用</p></li><li><p>return语句注意事项</p></li><li><p>数组中使用名字来索引</p><p>①许多程序语言都允许使用名字来作为数组的索引。</p><p>​    <strong>使用名字来作为索引的数组称为关联数组(或哈希)。</strong></p><p>​    JavaScript 不支持使用名字来索引数组，只允许使用数字索引</p></li><li><p>定义数组元素、对象。最后不可由逗号</p></li><li><p>Undefined不是Null</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在 JavaScript 中, null 用于对象, undefined 用于变量，属性和方法。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对象只有被定义才有可能为 null，否则为 undefined。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果我们想测试对象是否存在，在对象还没定义时将会抛出一个错误。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//错误的使用方式：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (myObj !== <span class="literal">null</span> &amp;&amp; <span class="keyword">typeof</span> myObj !== <span class="string">&quot;undefined&quot;</span>) </span><br><span class="line"><span class="comment">//正确的方式是我们需要先使用 typeof 来检测对象是否已定义：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> myObj !== <span class="string">&quot;undefined&quot;</span> &amp;&amp; myObj !== <span class="literal">null</span>) </span><br></pre></td></tr></table></figure><ol start="11"><li>程序块作用域</li></ol><h2 id="JavaScript表单验证"><a href="#JavaScript表单验证" class="headerlink" title="JavaScript表单验证"></a>JavaScript表单验证</h2><p><a href="https://www.runoob.com/js/js-validation.html">https://www.runoob.com/js/js-validation.html</a></p><h2 id="JavaScript-this关键字"><a href="#JavaScript-this关键字" class="headerlink" title="JavaScript this关键字"></a>JavaScript this关键字</h2><blockquote><p>this表示对当前对象的引用，在js中，它会随着执行环境的改变而改变</p></blockquote><ol><li>单独使用this，指向全局（Global）对象，window；</li><li>在对象方法中，指向调用其所在方法的对象；</li><li>在函数中，指向函数的所属者；</li><li>在严格模式下，函数是没有绑定到this的，此时的this是 undefined；</li><li>在HTML事件句柄中，this指向接收事件的HTML元素；</li><li>使用call() 和apply() 可以切换函数执行的上下文环境，即this绑定的对象；</li></ol><h2 id="JavaScript-let和const"><a href="#JavaScript-let和const" class="headerlink" title="JavaScript let和const"></a>JavaScript let和const</h2><ol><li>使用var声明的全局作用域变量属于window对象</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>  a = <span class="number">34</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.a)   <span class="comment">//输出34</span></span><br></pre></td></tr></table></figure><ol start="2"><li>let声明的全局作用域变量不属于window对象，无法通过window.   调用</li><li>let声明的变量只在let命令所在的代码块内有效</li><li>console声明一个可读的常量，一旦声明常量值不可修改</li></ol><h2 id="JavaScript-JSON"><a href="#JavaScript-JSON" class="headerlink" title="JavaScript JSON"></a>JavaScript JSON</h2><ol><li>JSON.parse()    将json字符串转为javascript对象</li><li>JSON.stringify()   将JavaScript对象转为json字符串</li></ol><h2 id="JavaScript-void"><a href="#JavaScript-void" class="headerlink" title="JavaScript void"></a>JavaScript void</h2><blockquote><p>经常使用的就是<code>javascript:void(0)</code></p></blockquote><p>多用于在<a>标签中定义死链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阻止链接跳转 url不会发送变化 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void()&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;nofollow ugc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--阻止链接跳转，但是当前url会被改变，URL尾部多个‘#’   #多配合location.hash--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;nofollow ugc&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--阻止链接跳转，改变url，多一个“？”  多配合location.search--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;nofollow ugc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="HTML-DOM"><a href="#HTML-DOM" class="headerlink" title="HTML DOM"></a>HTML DOM</h1><h2 id="DOM-简介"><a href="#DOM-简介" class="headerlink" title="DOM 简介"></a>DOM 简介</h2><blockquote><p>在网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model）</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById()</span><br><span class="line"><span class="built_in">document</span>.getElementByName()</span><br><span class="line"><span class="built_in">document</span>.getElementByClassName()</span><br><span class="line"><span class="built_in">document</span>.getElementByTagName()   <span class="comment">//通过标签  eg p   a   div  </span></span><br></pre></td></tr></table></figure><h2 id="DOM-HTML"><a href="#DOM-HTML" class="headerlink" title="DOM HTML"></a>DOM HTML</h2><blockquote><p>HTML DOM允许JavaScript改变HTML元素的内容</p></blockquote><ol><li>改变HTML输出流</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="built_in">Date</span>())</span><br></pre></td></tr></table></figure><ol start="2"><li><p>改变HTML内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;id&quot;</span>).innerHTML = 新的HTML</span><br></pre></td></tr></table></figure></li><li><p>改变HTML属性</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;id&quot;</span>).attribute = 新属性值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//例子</span></span><br><span class="line">&lt;img src=<span class="string">&quot;smile.png&quot;</span> id=<span class="string">&quot;image&quot;</span> /&gt;</span><br><span class="line">&lt;button onclick=<span class="string">&quot;changeImg()&quot;</span>&gt;点击&lt;/button&gt;</span><br><span class="line">    </span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeImg</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;image&quot;</span>).src = <span class="string">&quot;change.png&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="DOM-CSS"><a href="#DOM-CSS" class="headerlink" title="DOM CSS"></a>DOM CSS</h2><ol><li>改变HTML样式</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(id).style.property &#x3D; 新样式</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;实例</span><br><span class="line">&lt;p id&#x3D;&quot;p1&quot;&gt;css改变&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p id&#x3D;&quot;p2&quot; onclick&#x3D;&quot;document.getElementById(&#39;p2&#39;).style.color&#x3D;&#39;red&#39;&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">document.getElementById(&quot;p1&quot;).style.color &#x3D; &quot;red&quot;;</span><br><span class="line">document.getElementById(&quot;p1&quot;).style.fontFamiley &#x3D; &quot;Arial&quot;;</span><br><span class="line">document.getElementById(&quot;p1&quot;).style.fontSize &#x3D; &quot;larger&quot;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="DOM-事件"><a href="#DOM-事件" class="headerlink" title="DOM 事件"></a>DOM 事件</h2><p>例子</p><table><thead><tr><th>用户点击鼠标时</th><th>onclick()</th></tr></thead><tbody><tr><td>网页已加载时</td><td>onload()</td></tr><tr><td>鼠标移动到元素上时</td><td>onmouseover()</td></tr><tr><td>输入字段被改变时</td><td>onchange()</td></tr><tr><td>当鼠标按下时</td><td>onmousedown()</td></tr></tbody></table><p><a href="https://www.runoob.com/js/js-htmldom-events.html">https://www.runoob.com/js/js-htmldom-events.html</a></p><p><a href="https://www.runoob.com/jsref/dom-obj-event.html">更多DOM事件</a></p><h2 id="HTML-DOM-EventListener"><a href="#HTML-DOM-EventListener" class="headerlink" title="HTML DOM EventListener"></a>HTML DOM EventListener</h2><blockquote><p>addEventListener()</p><p>removeEventListener()</p></blockquote><p>addEventListener() 语法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">element.addEventListener(event,<span class="function"><span class="keyword">function</span>,<span class="title">useCapture</span>)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//event: 事件的类型 click mousedown</span></span><br><span class="line"><span class="comment">//function： 事件触发后调用的函数</span></span><br><span class="line"><span class="comment">//useCapture： 布尔值 描述事件是冒泡还是捕获，此参数可选</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;button id=<span class="string">&quot;bt1&quot;</span>&gt;点击&lt;/button&gt;</span><br><span class="line">&lt;p id=<span class="string">&quot;p1&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showAlert</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;显示&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showWord</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;p1&quot;</span>).innerHTML = <span class="string">&quot;显示&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;bt1&quot;</span>).addEventListener(<span class="string">&quot;click&quot;</span>,showAlert);</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;bt1&quot;</span>).addEventListener(<span class="string">&quot;mouseover&quot;</span>,showAlert);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol><li>事件冒泡或事件捕获</li></ol><p>事件传递的方式：冒泡与捕获</p><p>事件传递定义了元素事件触发的顺序。 如果你将 <p> 元素插入到 <div> 元素中，用户点击 <p> 元素, 哪个元素的 “click” 事件先被触发呢？</p><p>在 <em>冒泡</em> 中，内部元素的事件会先被触发，然后再触发外部元素，即： <p> 元素的点击事件先触发，然后会触发 <div> 元素的点击事件。</p><p>在 <em>捕获</em> 中，外部元素的事件会先被触发，然后才会触发内部元素的事件，即： <div> 元素的点击事件先触发 ，然后再触发 <p> 元素的点击事件。</p><p>addEventListener() 方法可以指定 “useCapture” 参数来设置传递类型：</p><p>addEventListener(<em>event</em>, <em>function</em>, useCapture);</p><p>默认值为 false, 即冒泡传递，当值为 true 时, 事件使用捕获传递。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&quot;myDiv&quot;).addEventListener(&quot;click&quot;, myFunction, true);</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_usecapture">尝试一下 »</a></p><ol start="2"><li>removeEventListener()</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myDIV&quot;</span>&gt;</span> div 元素添加了 onmousemove 事件句柄，鼠标在桔红色的框内移动时会显示随机数。</span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>点击按钮移除 DIV 的事件句柄。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;removeHandler()&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myBtn&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;myDIV&quot;</span>).addEventListener(<span class="string">&quot;mousemove&quot;</span>, myFunction);</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = <span class="built_in">Math</span>.random();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">removeHandler</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;myDIV&quot;</span>).removeEventListener(<span class="string">&quot;mousemove&quot;</span>, myFunction);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HTML-DOM-元素（节点）"><a href="#HTML-DOM-元素（节点）" class="headerlink" title="HTML DOM 元素（节点）"></a>HTML DOM 元素（节点）</h2><blockquote><p>appendChild()</p><p>insertBefore()</p><p>removeChild()</p><p>replaceChild()</p></blockquote><ol><li><p>创建新的HTML元素（节点）-appendChild()</p><p>创建新的 HTML 元素 (节点)需要先创建一个元素，然后在已存在的元素中添加它。(添加到尾部)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>这是另外一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> para = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>);  <span class="comment">//创建&lt;p&gt; 元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> node = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;这是一个新的段落。&quot;</span>); <span class="comment">// 创建一个新的文本节点</span></span></span><br><span class="line"><span class="javascript">para.appendChild(node);  <span class="comment">//将文本节点添加到&lt;p&gt;元素中</span></span></span><br><span class="line"> </span><br><span class="line"><span class="javascript"><span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">&quot;div1&quot;</span>);   <span class="comment">//查找一个已存在的元素</span></span></span><br><span class="line"><span class="javascript">element.appendChild(para);  <span class="comment">//将para添加到已有元素中</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建新的HTML元素（节点）-insertBefore()</p><p>需要将新元素添加到开始位置，可以使用 <strong>insertBefore()</strong> 方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>这是另外一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> para = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> node = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;这是一个新的段落。&quot;</span>);</span></span><br><span class="line">para.appendChild(node);</span><br><span class="line"> </span><br><span class="line"><span class="javascript"><span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">&quot;div1&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> child = <span class="built_in">document</span>.getElementById(<span class="string">&quot;p1&quot;</span>);</span></span><br><span class="line"><span class="javascript">element.insertBefore(para, child);   <span class="comment">// 在element节点的子节点child前添加新节点para</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>移除已存在的元素-removeChild()</p><ul><li>如果要移除一个元素，必须<strong>先找到该元素的父元素</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//借用上面的一些代码</span></span><br><span class="line">element.removeChild(child)   <span class="comment">//删除节点element中的 子节点child</span></span><br></pre></td></tr></table></figure></li><li><p>替换HTML元素-replaceChild()</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>只是吨<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> p2 = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> text2 = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;标签所显示的内容&quot;</span>)</span></span><br><span class="line">p2.appendChild(text2)</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">&quot;div1&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oldP = <span class="built_in">document</span>.getElementById(p1)</span></span><br><span class="line"><span class="javascript">element.replaceChild(p2,oldP)   <span class="comment">//替换参数前为新   后为旧</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="HTML-DOM集合（Collection）"><a href="#HTML-DOM集合（Collection）" class="headerlink" title="HTML DOM集合（Collection）"></a>HTML DOM集合（Collection）</h2><blockquote><p>通过getElementByTagName()方法返回的是HTML Collection对象</p><p>HTML Collection的属性</p><table><thead><tr><th>属性/方法</th><th>描述</th></tr></thead><tbody><tr><td>item（）</td><td>返回HTML Collection中指定索引的元素</td></tr><tr><td>length（）</td><td>返回HTMLCOllection中元素的数量</td></tr><tr><td>namedItem（）</td><td>返回HTMLCollection中指定ID或Name属性的元素</td></tr></tbody></table></blockquote><ul><li>HTMLCollection不是数组！！  但是可以使用索引来获取元素</li></ul><h1 id="JavaScript高级教程"><a href="#JavaScript高级教程" class="headerlink" title="JavaScript高级教程"></a>JavaScript高级教程</h1><h2 id="Array（数据）-对象"><a href="#Array（数据）-对象" class="headerlink" title="Array（数据） 对象"></a>Array（数据） 对象</h2><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_concat">合并两个数组 - concat()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_concat2">合并三个数组 - concat()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_join">用数组的元素组成字符串 - join()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_pop">删除数组的最后一个元素 - pop()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_push">数组的末尾添加新的元素 - push()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_reverse">将一个数组中的元素的顺序反转排序 - reverse()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_shift">删除数组的第一个元素 - shift()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_slice_array">从一个数组中选择元素 - slice()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_sort">数组排序（按字母顺序升序）- sort()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_sort2">数字排序（按数字顺序升序）- sort()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_sort3">数字排序（按数字顺序降序）- sort()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_splice">在数组的第2位置添加一个元素 - splice()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_tostring_array">转换数组到字符串 -toString()</a></p><p><a href="https://www.runoob.com/try/try.php?filename=tryjsref_unshift">在数组的开头添加新元素 - unshift()</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程不良人-VUE+ElementUI+Vue Element Admin学习</title>
      <link href="2021/03/10/bian-cheng-bu-liang-ren-vue-elementui-vue-element-admin-xue-xi/"/>
      <url>2021/03/10/bian-cheng-bu-liang-ren-vue-elementui-vue-element-admin-xue-xi/</url>
      
        <content type="html"><![CDATA[<p><strong>编程不良人-VUE+ElementUI+Vue Element Admin学习</strong></p><h1 id="Vue基础"><a href="#Vue基础" class="headerlink" title="Vue基础"></a>Vue基础</h1><h2 id="Vue介绍"><a href="#Vue介绍" class="headerlink" title="Vue介绍"></a>Vue介绍</h2><p>​    vue是一个渐进式的js框架，只注重视图层，结合了HTML+CSS+JS，易用，且有很好的生态系统，且体积小，速度快，优化到位；</p><h2 id="MVVM–双向绑定模式"><a href="#MVVM–双向绑定模式" class="headerlink" title="MVVM–双向绑定模式"></a>MVVM–双向绑定模式</h2><ul><li>Model：模型层，在这里表示JavaScript对象</li><li>View：视图层，在这里表示DOM（HTML操作的元素)</li><li>ViewModel：连接视图和数据的中间件，Vue.js就是MVVM中的ViewModel层的实现</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214103.png" alt="image-20210111221659041"></p><p>扩：cdn:内容分发网络，是一种加速策略，能从离自己最近的服务器上快速获取外部资源；</p><ul><li>在MVVM架构中，是不允许数据和视图直接通信的，只能通过ViewModel来通信，而ViewModel就是定义了一个Observer观察者；</li><li>ViewModel能够观察数据的变化，并对视图对应的内容进行更新；</li><li>ViewModel能够监听到视图的变化，并能够通知数据发送改变；</li></ul><p>Vue.js就是一个MVVM实现者，核心是实现了DOM监听，和数据绑定</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214104.png" alt="image-20210111223829168"></p><p>组件化：</p><pre><code>1. 页面上每个独立的可交互的区域视为一个组件；2. 每个组件对应一个工程目录，组件所需的各种资源在这个目录下就近维护3. 页面只是组件的容器，组件可以嵌套自由组合（复用）形成完整的页面</code></pre><p>为什么又要使用Vue</p><pre><code>1. 轻量级2. 移动优先，更适合移动端3. 易上手，文档齐全，学习曲线平稳4. 吸取了regular（模块化）和react（虚拟DOM）的长处，也有自己的独特功能：eg计算属性5. 开源</code></pre><h2 id="快速起步"><a href="#快速起步" class="headerlink" title="快速起步"></a>快速起步</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="comment">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;head&gt;</span></span><br><span class="line"><span class="comment">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;title&gt;Title&lt;/title&gt;</span></span><br><span class="line"><span class="comment">&lt;/head&gt;</span></span><br><span class="line"><span class="comment">&lt;body&gt;</span></span><br><span class="line"><span class="comment">    &lt;div id=&quot;app&quot;&gt;</span></span><br><span class="line"><span class="comment">        &#123;&#123;name&#125;&#125;,&#123;&#123;age&#125;&#125;岁</span></span><br><span class="line"><span class="comment">    &lt;/div&gt;</span></span><br><span class="line"><span class="comment">&lt;/body&gt;</span></span><br><span class="line"><span class="comment">&lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script&gt;</span></span><br><span class="line"><span class="comment">    new Vue(&#123;</span></span><br><span class="line"><span class="comment">        el: &#x27;#app&#x27;,    //element</span></span><br><span class="line"><span class="comment">        data: &#123;</span></span><br><span class="line"><span class="comment">            name: &#x27;Hmou&#x27;,</span></span><br><span class="line"><span class="comment">            age: 200</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;)   //json格式对象，大括号包裹，里面存放键值对，在js中键可以无引号，多个键用‘，’分割</span></span><br><span class="line"><span class="comment">&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;/html&gt;--&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>html中被vue绑定的元素中，通过插值表达式来获取vue对象中的数据</p></li><li><p>页面中使用vue，存在两部分</p><ol><li><p>html：<div id="app"></div></p></li><li><script>中创建Vue对象 new Vue({})</li></ol></li></ul><h2 id="插值表达式"><a href="#插值表达式" class="headerlink" title="插值表达式"></a>插值表达式</h2><pre><code>1. 插值表达式就是用在html中被绑定的元素中，目的是通过插值表达式来获取Vue对象中的属性和方法2. 语法 &#123;&#123;vue的内容&#125;，插值表达式不能卸载html的标签中，不能作为属性的值的部分&#125;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214105.png" alt="image-20210112114023741"></p><h2 id="Vue关键字"><a href="#Vue关键字" class="headerlink" title="Vue关键字"></a>Vue关键字</h2><blockquote><p>关键字作为html页面标签中的属性使用</p></blockquote><h3 id="v-model双向数据绑定"><a href="#v-model双向数据绑定" class="headerlink" title="v-model双向数据绑定"></a>v-model双向数据绑定</h3><ul><li>将标签的value值和vue实例中的data值进行绑定</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-model双向数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        Learn=====&gt; &#123;&#123;name&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            name: <span class="string">&quot;java&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-on事件绑定"><a href="#v-on事件绑定" class="headerlink" title="v-on事件绑定"></a>v-on事件绑定</h3><ul><li>通过配合具体的事件名，来绑定vue中定义的函数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;head&gt;</span></span><br><span class="line"><span class="comment">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;title&gt;v-on事件绑定&lt;/title&gt;</span></span><br><span class="line"><span class="comment">&lt;/head&gt;</span></span><br><span class="line"><span class="comment">&lt;body&gt;</span></span><br><span class="line"><span class="comment">&lt;div id=&quot;app&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;input type=&quot;text&quot; v-on:input=&quot;importConsole&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;/div&gt;</span></span><br><span class="line"><span class="comment">&lt;/body&gt;</span></span><br><span class="line"><span class="comment">&lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script&gt;</span></span><br><span class="line"><span class="comment">    new Vue(&#123;</span></span><br><span class="line"><span class="comment">        el: &quot;#app&quot;,</span></span><br><span class="line"><span class="comment">        data: &#123;</span></span><br><span class="line"><span class="comment">            name: &quot;java&quot;</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        methods: &#123;</span></span><br><span class="line"><span class="comment">            importConsole:function ()&#123;</span></span><br><span class="line"><span class="comment">                console.log(&quot;success&quot;)</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;)</span></span><br><span class="line"><span class="comment">&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;/html&gt; --&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>此处，事件是input，响应行为是importConsole。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214106.png" alt="image-20210112125634066"></p><p>补充： </p><pre><code>1. 简写：v-on:input   =========&gt;    @input2. event.target.value:例如在响应函数中，可以指明使用event内置的参数对象。该对象表示当前事件，可以通过event.target.value来获得当前事件对象的value值3. this用法：this表示当前vue对象      “new Vue()”，可通过this.    来调用当前vue对象的属性和方法。`如果在method里想要使用当前vue对象中的data里的内容，必须使用this`</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-on事件绑定 补充<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;importConsole&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &#123;&#123;name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            name: <span class="string">&quot;java&quot;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            importConsole:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.name = event.target.value;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>event.target.value == 当前事件的对象（input元素）的value值</li></ul><h3 id="v-bind属性绑定"><a href="#v-bind属性绑定" class="headerlink" title="v-bind属性绑定"></a>v-bind属性绑定</h3><ul><li>使用v-bind进行属性绑定，使html元素中的属性获得vue对象中的内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-bind属性绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>访问百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            url: <span class="string">&quot;https://www.baidu.com/&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>简写<ul><li><a v-bind:href="url">访问百度 等价于 <a :href="url">访问百度</li></ul></li></ul><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><ul><li>此时该标签中的插值表达式只获取一次数据。之后的数据变化不影响此插值表达式的值。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span></span><br><span class="line">            &#123;&#123;name&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue (&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            name: <span class="string">&quot;java&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-html和v-text"><a href="#v-html和v-text" class="headerlink" title="v-html和v-text"></a>v-html和v-text</h3><blockquote><ol><li>v-html会将vue中的属性作为html元素使用；</li><li>v-text会将vue中的属性的值只作为纯文本来使用；</li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-html和v-text<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;url&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">&quot;url&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue (&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">            url: &#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="vue中的事件"><a href="#vue中的事件" class="headerlink" title="vue中的事件"></a>vue中的事件</h2><h3 id="增减"><a href="#增减" class="headerlink" title="增减"></a>增减</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;num&gt;5?&#x27;大于5&#x27;:&#x27;不大于5&#x27;&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addBtn&quot;</span>&gt;</span>加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;decBtn&quot;</span>&gt;</span>减<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            num: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            addBtn:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.num++</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            decBtn:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.num--</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &#123;&#123;num&#125;&#125;</span><br><span class="line">        &lt;button @click&#x3D;&quot;addBtn&quot;&gt;加&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button @click&#x3D;&quot;decBtn&quot;&gt;减&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;input v-model&#x3D;&quot;step&quot; type&#x3D;&quot;number&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;vue&#x2F;2.6.12&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#39;#app&#39;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            num: 0,</span><br><span class="line">            step: 2</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            addBtn:function ()&#123;</span><br><span class="line">                &#x2F;&#x2F;parseInt()强转为int</span><br><span class="line">                this.num+&#x3D;parseInt(this.step)   </span><br><span class="line">            &#125;,</span><br><span class="line">            decBtn:function ()&#123;</span><br><span class="line">                this.num-&#x3D;parseInt(this.step)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="event鼠标移动坐标"><a href="#event鼠标移动坐标" class="headerlink" title="event鼠标移动坐标"></a>event鼠标移动坐标</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> event鼠标移动坐标<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> @<span class="attr">mousemove</span>=<span class="string">&quot;changeXY&quot;</span>&gt;</span></span><br><span class="line">            移动坐标改变<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;x&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;y&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            x: 0,</span><br><span class="line">            y: 10</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            changeXY:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.x = event.clientX;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.y = event.clientY;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="鼠标经过停止"><a href="#鼠标经过停止" class="headerlink" title="鼠标经过停止"></a>鼠标经过停止</h3><p>第一种：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> 停止鼠标移动事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> @<span class="attr">mousemove</span>=<span class="string">&quot;changeXY&quot;</span>&gt;</span></span><br><span class="line">            移动坐标改变<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;x&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;y&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> @<span class="attr">mousemove</span>=<span class="string">&quot;stopmo&quot;</span>&gt;</span></span><br><span class="line">                经过停止</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            x: 0,</span><br><span class="line">            y: 10</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            changeXY:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.x = event.clientX;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.y = event.clientY;</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            stopmo:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line">                event.stopPropagation()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> 停止鼠标移动事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> @<span class="attr">mousemove</span>=<span class="string">&quot;changeXY&quot;</span>&gt;</span></span><br><span class="line">            移动坐标改变<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;x&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            &#123;&#123;y&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> @<span class="attr">mousemove.stop</span>&gt;</span></span><br><span class="line">                经过停止</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            x: 0,</span><br><span class="line">            y: 10</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            changeXY:<span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.x = event.clientX;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.y = event.clientY;</span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h2><p><a href="https://cn.vuejs.org/v2/guide/events.html#%E4%BA%8B%E4%BB%B6%E4%BF%AE%E9%A5%B0%E7%AC%A6">文档</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阻止单击事件继续传播 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 提交事件不再重载页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 修饰符可以串联 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop.prevent</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只有修饰符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.capture</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.self</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h2><p><a href="https://cn.vuejs.org/v2/guide/events.html#%E6%8C%89%E9%94%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6">按键修饰符</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; @keyup.enter&#x3D;&quot;exportInf&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;vue&#x2F;2.6.12&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#39;#app&#39;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            exportInf:function ()&#123;</span><br><span class="line">                console.log(&#39;hello&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="计算属性computed"><a href="#计算属性computed" class="headerlink" title="计算属性computed"></a>计算属性computed</h2><blockquote><p>计算属性的重点在于 <code>属性</code>（属性是名词），首先是一个<code>属性</code>，其次这个属性有<code>计算</code>能力（计算是动词），这里的<code>计算</code>就是个函数。简单而言就是一个能将计算结果缓存起来的属性（将行为转化成了静态的属性）。所以可以用于存储页面中不需要经常刷新的数据</p><ul><li>computed里虽然存放函数，但在调用时，computed里的东西是一个属性。所以在调用时不能使用（）</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>computed计算属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;consoleDate1()&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        &#123;&#123;consoleDate2&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            consoleDate1:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="javascript">            consoleDate2:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214107.png" alt="image-20210112144118888"></p><h2 id="watch监控属性"><a href="#watch监控属性" class="headerlink" title="watch监控属性"></a>watch监控属性</h2><ul><li>通过watch里给属性绑定函数，当属性的值发送变化时，该函数就会自动被调用。调用时可以接收两个参数。第一个参数是属性改变后的值newValue，第二个是属性改变前的值oldValue</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>watch监控属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;name&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            name: <span class="string">&#x27;123&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">       watch: &#123;</span><br><span class="line"><span class="javascript">            name:<span class="function"><span class="keyword">function</span> (<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(newValue+<span class="string">&quot;:&quot;</span>+oldValue)</span></span><br><span class="line">            &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214108.png" alt="image-20210112145238000"></p><h2 id="Vue改变样式"><a href="#Vue改变样式" class="headerlink" title="Vue改变样式"></a>Vue改变样式</h2><h3 id="通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定"><a href="#通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定" class="headerlink" title="通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定"></a>通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .red&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过computed返回一个对象，对象里放多个键值对"><a href="#通过computed返回一个对象，对象里放多个键值对" class="headerlink" title="通过computed返回一个对象，对象里放多个键值对"></a>通过computed返回一个对象，对象里放多个键值对</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;myClassStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   red:<span class="built_in">this</span>.temp,</span></span><br><span class="line"><span class="javascript">                   mywidth:<span class="built_in">this</span>.temp</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="双向绑定的体现"><a href="#双向绑定的体现" class="headerlink" title="双向绑定的体现"></a>双向绑定的体现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .green&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#88b860</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;myClassStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;mycolor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;mycolor&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            mycolor: <span class="string">&#x27;green&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   red:<span class="built_in">this</span>.temp,</span></span><br><span class="line"><span class="javascript">                   mywidth:<span class="built_in">this</span>.temp</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在html中实现多个样式的组合"><a href="#在html中实现多个样式的组合" class="headerlink" title="在html中实现多个样式的组合"></a>在html中实现多个样式的组合</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .green&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#88b860</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;myClassStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[mycolor,mw]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;mycolor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;mycolor&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            mycolor: <span class="string">&#x27;green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            mw: <span class="string">&#x27;mywidth&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   red:<span class="built_in">this</span>.temp,</span></span><br><span class="line"><span class="javascript">                   mywidth:<span class="built_in">this</span>.temp</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214109.png" alt="image-20210112152928135"></p><h3 id="在内嵌的css样式中指明style属性的值"><a href="#在内嵌的css样式中指明style属性的值" class="headerlink" title="在内嵌的css样式中指明style属性的值"></a>在内嵌的css样式中指明style属性的值</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .green&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#88b860</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .yellow&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#be9117</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;backgroundColor:bg23&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;myClassStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[mycolor,mw]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;mycolor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;mycolor&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            mycolor: <span class="string">&#x27;green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            mw: <span class="string">&#x27;mywidth&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            bg23: <span class="string">&#x27;yellow&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   red:<span class="built_in">this</span>.temp,</span></span><br><span class="line"><span class="javascript">                   mywidth:<span class="built_in">this</span>.temp</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214110.png" alt="image-20210112153717471"></p><p>采用内嵌style时，style中放json对象，键是驼峰式写法，值是变量bg23</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214111.png" alt="image-20210112153848834"></p><h3 id="内嵌使用computed"><a href="#内嵌使用computed" class="headerlink" title="内嵌使用computed"></a>内嵌使用computed</h3><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214112.png" alt="image-20210112154003797"></p><h3 id="设置style属性的多个样式"><a href="#设置style属性的多个样式" class="headerlink" title="设置style属性的多个样式"></a>设置style属性的多个样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> Vue改变样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .gray &#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#3c3f41</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .mywidth&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#fd563c</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .green&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#88b860</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .yellow&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#be9117</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;[myClassStyle,&#123;width:mywidth23+&#x27;px&#x27;&#125;]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;mywidth23&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            mycolor: <span class="string">&#x27;green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            mw: <span class="string">&#x27;mywidth&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            bg23: <span class="string">&#x27;yellow&#x27;</span>,</span></span><br><span class="line">            mywidth23: 300</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                   backgroundColor:<span class="built_in">this</span>.bg23,</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue的核心，虚拟DOM和diff算法"><a href="#Vue的核心，虚拟DOM和diff算法" class="headerlink" title="Vue的核心，虚拟DOM和diff算法"></a>Vue的核心，虚拟DOM和diff算法</h2><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214113.png" alt="image-20210112155541977"></p><blockquote><p>vue的高效的核心，就是虚拟的dom和diff算法，vue不通过dom树来达到修改的效果，而是直接在页面上该元素修改。此时这个元素就是一个虚拟的DOM。vue通过diff算法，计算出虚拟的dom修改后和修改前的区别，然后在虚拟dom的原基础上进行修改，效率大幅提高。</p></blockquote><h2 id="Vue中的语句"><a href="#Vue中的语句" class="headerlink" title="Vue中的语句"></a>Vue中的语句</h2><h3 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h3><ul><li>v-if</li><li>v-else-if</li><li>v-else</li><li>v-show：实际上是让该元素的display属性为nong，隐藏的效果，所以性能好</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>点击切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp2=!temp2&quot;</span>&gt;</span>点击切换temp2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;temp&quot;</span>&gt;</span>执行v-if<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;temp1&quot;</span>&gt;</span>执行v-else-if<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>=<span class="string">&quot;temp&quot;</span>&gt;</span>执行v-else<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;temp2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            temp1: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">            temp2:<span class="literal">false</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214114.png" alt="image-20210112163006014"></p><ul><li>v-show和v-if用法相同，即布尔值为true时v-show显示内容，否则不显示。但是v-show是通过style样式来实现元素的显示与隐藏，效率更高。</li></ul><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><p>vue中只有for循环</p><ol><li>基本for循环，首先定义数据源，通过v-for遍历数据，再使用插值表达式输出数据</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;a in args&quot;</span>&gt;</span>&#123;&#123;a&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            args: [2,3,4,5,6,77,8]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>建议添加key值，作为表示，i作为下标</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(a,i) in args&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;i&quot;</span>&gt;</span>&#123;&#123;a&#125;&#125;,其下标为&#123;&#123;i&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            args: [2,3,4,5,6,77,8]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>v-for遍历对象数组，嵌套for循环</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;student in students&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--（v,k,i）分别对应value，key和下标--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">&quot;(v,k,i) in student&quot;</span>&gt;</span>&#123;&#123;i&#125;&#125;-----&#123;&#123;k&#125;&#125;----&#123;&#123;v&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            students: [&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span><br><span class="line">                age: 18</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;lisi&#x27;</span>,</span></span><br><span class="line">                age: 19</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;wangwu&#x27;</span>,</span></span><br><span class="line">                age: 20</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhaoliu&#x27;</span>,</span></span><br><span class="line">                age: 10</span><br><span class="line">            &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>v-for案例</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(user,i) in users&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;i&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i+1&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">v-for</span>=<span class="string">&quot;value in user&quot;</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            users: [&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span><br><span class="line">                age: 18</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;lisi&#x27;</span>,</span></span><br><span class="line">                age: 19</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;wangwu&#x27;</span>,</span></span><br><span class="line">                age: 20</span><br><span class="line">            &#125;,&#123;</span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhaoliu&#x27;</span>,</span></span><br><span class="line">                age: 10</span><br><span class="line">            &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="template模板标签使用"><a href="#template模板标签使用" class="headerlink" title="template模板标签使用"></a>template模板标签使用</h2><h3 id="配合v-if实现多个元素的显示隐藏（v-show不适用）"><a href="#配合v-if实现多个元素的显示隐藏（v-show不适用）" class="headerlink" title="配合v-if实现多个元素的显示隐藏（v-show不适用）"></a>配合v-if实现多个元素的显示隐藏（v-show不适用）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;temp=!temp&quot;</span>&gt;</span>点击切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;temp&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;&#123;name&#125;&#125;</span><br><span class="line">                &#123;&#123;age&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            name: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span><br><span class="line">            age: 283</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue对象的操作"><a href="#Vue对象的操作" class="headerlink" title="Vue对象的操作"></a>Vue对象的操作</h2><ol><li>可以通过一个Vue对象操作另一个Vue对象</li><li>Vue对象操作另一个vue对象的内容，维度有两个，操作属性和操作方法；</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>两个vue对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;word&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;upWord&quot;</span>&gt;</span>点击大写<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;lowWord&quot;</span>&gt;</span>改变小写<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">         word: <span class="string">&#x27;hello&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            upWord:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">this</span>.word = <span class="built_in">this</span>.word.toUpperCase();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">       el: <span class="string">&#x27;#app2&#x27;</span>,</span></span><br><span class="line">       methods: &#123;</span><br><span class="line"><span class="javascript">           lowWord:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line">               v1.word = v1.word.toLowerCase();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Vue的实例属性"><a href="#Vue的实例属性" class="headerlink" title="Vue的实例属性"></a>Vue的实例属性</h3><p><a href="https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B-property">实例属性property</a></p><pre><code>1. 直接通过     ``对象.``   的方式调用的属性，是来自与data或computed中的属性。vue对象中的el、data等也被称为实例属性</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue实例属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;name&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> data = &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&#x27;zhangsan&#x27;</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:data,</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意执行顺序</li></ul><ol start="2"><li>ref的使用：在vue里面吗，往往使用ref来代替id属性的使用。可以通过调用ref 的值来快速获得某个元素</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue实例属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">ref</span>=<span class="string">&quot;button1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeShow&quot;</span>&gt;</span>button1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">ref</span>=<span class="string">&quot;button2&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeShow&quot;</span>&gt;</span>button2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            changeShow:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.button1.innerHTML = <span class="string">&quot;changign&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>mount使用：实现了页面元素与vue对象的动态绑定，以往是通过el，也可以通过mount实例属性进行绑定</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue实例属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: &quot;<span class="tag">&lt;<span class="name">h1</span>&gt;</span>mount绑定<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">   v1.$mount(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue组件"><a href="#Vue组件" class="headerlink" title="Vue组件"></a>Vue组件</h2><blockquote><p>可以将vue对象作为一个组件，被反复使用。要实现组件化，需要在页面中注册组件；关于注册的方式：全局注册，本地注册</p></blockquote><h3 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h3><p>​    Vue.component(“组件名”,{vue对象})</p><ol><li><p>使用组件</p><p>​    在被vue绑定了的html元素中才可以使用组件。如果一个div未被绑定，那么此div不可使用注册的组件</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue组件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">model1</span>&gt;</span><span class="tag">&lt;/<span class="name">model1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;model1&quot;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        template: <span class="string">&quot;&lt;div&gt;&quot;</span> +</span></span><br><span class="line"><span class="handlebars"><span class="xml">            &quot;<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;showHi&#x27;</span>&gt;</span>click<span class="tag">&lt;/<span class="name">button</span>&gt;</span> &quot; +</span></span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;&lt;/div&gt;&quot;</span>,</span></span><br><span class="line"><span class="javascript">        data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;zhangsan&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            showHi:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;Hi&quot;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意事项</li></ul><ol><li>data的写法存在区别</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data:function()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        name: &#x27;zhangsan&#x27;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>组件中的template写法：template是将内容展现在页面上 的一个键。值是一个字符串。template中必须有且只能有一个根元素</li></ol><h3 id="本地注册"><a href="#本地注册" class="headerlink" title="本地注册"></a>本地注册</h3><ul><li>如果是对vue组件进行本地注册，那么其他违背绑定的div中不能使用该组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue组件本地（局部）注册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">model1</span>&gt;</span><span class="tag">&lt;/<span class="name">model1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">model1</span>&gt;</span><span class="tag">&lt;/<span class="name">model1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        components: &#123;</span><br><span class="line"><span class="javascript">            <span class="string">&quot;model1&quot;</span>: &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                template: &quot;<span class="tag">&lt;<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;showHi&#x27;</span>&gt;</span>click<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>&quot;,</span></span></span><br><span class="line"><span class="javascript">                data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                        name: <span class="string">&#x27;zhangsan&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line"><span class="javascript">                    showHi: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&quot;Hi&quot;</span>)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> v2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app2&quot;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><blockquote><p>一个Vue对象会经历 初始化、创建、绑定、更新、销毁等阶段，不同的阶段都会有响应的生命周期钩子函数被调用</p></blockquote><p><a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90">生命周期</a></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214115.png" alt="Vue 实例生命周期"></p><h1 id="vue开发模式"><a href="#vue开发模式" class="headerlink" title="vue开发模式"></a>vue开发模式</h1><h2 id="vue-cli骨架"><a href="#vue-cli骨架" class="headerlink" title="vue-cli骨架"></a>vue-cli<a href="https://cli.vuejs.org/zh/guide/">骨架</a></h2><p><a href="https://cli.vuejs.org/zh/guide/installation.html">安装</a></p><ul><li>使用</li></ul><ol><li>下载安装nodejs，然后<code>npm install vue-cli -g</code></li><li>创建vue项目文件夹并打开</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> vuedemo</span><br><span class="line"><span class="built_in">cd</span> ./vuedemo</span><br></pre></td></tr></table></figure><ol start="3"><li>使用vue list命令查看当前可用的vue骨架</li><li>使用vue命令创建基于vue-webpack-simple骨架的项目，vue-cli-demo时项目名，过程中需要输入一些参数，回车是使用提示的值</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack-simple vue-cli-demo</span><br></pre></td></tr></table></figure><ol start="5"><li>创建基于webpack骨架的项目</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vue-cli-demo</span><br></pre></td></tr></table></figure><h2 id="三个核心"><a href="#三个核心" class="headerlink" title="三个核心"></a>三个核心</h2><p><strong>index.html，App.vue，main,js</strong></p><h3 id="在App-vue组件中使用另一个组件"><a href="#在App-vue组件中使用另一个组件" class="headerlink" title="在App.vue组件中使用另一个组件"></a>在App.vue组件中使用另一个组件</h3><h4 id="全局注册，"><a href="#全局注册，" class="headerlink" title="全局注册，"></a>全局注册，</h4><p>在components中新建Home.vue,header.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &#123;&#123;title&#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Home&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      title: &#39;开始搭建学习vue&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><ul><li>创建后，在main.js中通过import先导入；然后通过Vue.component()调用。注意顺序！！！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214116.png" alt="image-20210113225708232"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214117.png" alt="image-20210113225729451"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214118.png" alt="image-20210113224532066"></p><h4 id="本地（局部）注册"><a href="#本地（局部）注册" class="headerlink" title="本地（局部）注册"></a>本地（局部）注册</h4><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214119.png" alt="image-20210113230051357"></p><ul><li>本地注册就是直接在App.vue下的components中绑定，格式有两种。</li></ul><h3 id="组件间的参数传递"><a href="#组件间的参数传递" class="headerlink" title="组件间的参数传递"></a>组件间的参数传递</h3><h4 id="父传子"><a href="#父传子" class="headerlink" title="父传子"></a>父传子</h4><blockquote><p>通过子组件的props部分，来指明可以接收的参数，父组件通过在标签中写明参数的键值对来传递参数</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214120.png" alt="image-20210115160521344"></p><ul><li>props有两种写法（①数组；②对象，有三个参数）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214121.png" alt="image-20210115160956959"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214122.png" alt="image-20210115161226737"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214123.png" alt="image-20210115161445410"></p><h4 id="子传父"><a href="#子传父" class="headerlink" title="子传父"></a>子传父</h4><p>第一种方式：</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214124.png" alt="image-20210115162508422"></p><p>第二种方式：(常用)</p><p>​    通过事件发射的方式来实现子传父的效果；</p><ol><li>在子组件中，使用 <code>this.$emit(&quot;键&quot;,&quot;值&quot;)</code></li><li>在父组件中，子组件的标签中，使用 <code>@键=&quot;msg=$event&quot;</code> ，其中$event就能得到值，msg是父组件中vue属性，自定义</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214125.png" alt="image-20210115171003052"></p><h1 id="HTTP请求—axios"><a href="#HTTP请求—axios" class="headerlink" title="HTTP请求—axios"></a>HTTP请求—axios</h1><h2 id="什么是Axios"><a href="#什么是Axios" class="headerlink" title="什么是Axios"></a>什么是Axios</h2><blockquote><p>Axios是一个开源的用于在浏览器端和NodeJS的异步通信框架，主要作用是实现Ajax的异步通信</p></blockquote><p>功能特点如下：</p><pre><code>1. 从浏览器中创建`XMLHttpRequests`2. 从`node.js`中创建`http`请求3. 拦截请求数据和响应数据4. 转换请求数据和响应数据5. 取消请求6. 自动转换`JSON`数据7. 客户端支持防御`XSRF`（跨站请求伪造）</code></pre><p><a href="http://www.axios-js.com/">axios中文网</a></p><h2 id="为何使用axios"><a href="#为何使用axios" class="headerlink" title="为何使用axios"></a>为何使用axios</h2><p>由于Vue.js是一个视图层框架并且作者(尤雨溪)严格准守SoC (关注度分离原则) ，所以Vue.js<br>并不包含AJAX的通信功能，为了解决通信问题，作者单独开发了一个名为vue-resource 的插件,不<br>过在进入2.0版本以后停止了对该插件的维护并推荐了Axios框架</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>安装</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save axios vue-axios</span><br></pre></td></tr></table></figure><ol start="2"><li>在main.js中引入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">import axios from &#39;axios&#39;</span><br><span class="line">import VueAxios from &#39;vue-axios&#39;</span><br><span class="line"></span><br><span class="line">Vue.use(VueAxios,axios)</span><br></pre></td></tr></table></figure><h1 id="vue-router路由"><a href="#vue-router路由" class="headerlink" title="vue-router路由"></a>vue-router路由</h1><blockquote><p>在一个vue组件中实现其他组件的相互切换，可用通过路由模块，将制定的组件显示在路由视图中</p></blockquote><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><ol><li>初始化项目</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vueDemo</span><br></pre></td></tr></table></figure><ol start="2"><li>在components中创建所需组件</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214126.png" alt="image-20210121155724748"></p><ol start="3"><li>配置静态路由表</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214127.png" alt="image-20210121155804318"></p><ol start="4"><li>在main.js中导入VueRouter并使用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214128.png" alt="image-20210121155855118"></p><ol start="5"><li>在App.vue中使用<router-view/></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>访问即可</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214129.png" alt="image-20210121160036101"></p><h2 id="整合elementUI"><a href="#整合elementUI" class="headerlink" title="整合elementUI"></a>整合elementUI</h2><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214130.png" alt="image-20210121164422830"></p><ol><li>创建Navigation</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-menu</span><br><span class="line">      :default-active&#x3D;&quot;activeIndex2&quot;</span><br><span class="line">      class&#x3D;&quot;el-menu-demo&quot;</span><br><span class="line">      mode&#x3D;&quot;horizontal&quot;</span><br><span class="line">      @select&#x3D;&quot;handleSelect&quot;</span><br><span class="line">      background-color&#x3D;&quot;#545c64&quot;</span><br><span class="line">      text-color&#x3D;&quot;#fff&quot;</span><br><span class="line">      active-text-color&#x3D;&quot;#ffd04b&quot;&gt;</span><br><span class="line">      &lt;el-menu-item index&#x3D;&quot;1&quot; @click&#x3D;&quot;toHome&quot;&gt;首页&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">      &lt;el-submenu index&#x3D;&quot;2&quot;&gt;</span><br><span class="line">        &lt;template slot&#x3D;&quot;title&quot;&gt;我的工作台&lt;&#x2F;template&gt;</span><br><span class="line">        &lt;el-menu-item index&#x3D;&quot;2-1&quot;&gt;选项1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;el-menu-item index&#x3D;&quot;2-2&quot;&gt;选项2&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;el-menu-item index&#x3D;&quot;2-3&quot;&gt;选项3&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;el-submenu index&#x3D;&quot;2-4&quot;&gt;</span><br><span class="line">          &lt;template slot&#x3D;&quot;title&quot;&gt;选项4&lt;&#x2F;template&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-4-1&quot;&gt;选项1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-4-2&quot;&gt;选项2&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-4-3&quot;&gt;选项3&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-submenu&gt;</span><br><span class="line">      &lt;&#x2F;el-submenu&gt;</span><br><span class="line">      &lt;el-menu-item index&#x3D;&quot;3&quot; disabled&gt;消息中心&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">      &lt;el-menu-item index&#x3D;&quot;4&quot;&gt;&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;www.ele.me&quot; target&#x3D;&quot;_blank&quot;&gt;订单管理&lt;&#x2F;a&gt;&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">    &lt;&#x2F;el-menu&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Navigation&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      activeIndex: &#39;1&#39;,</span><br><span class="line">      activeIndex2: &#39;1&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleSelect (key, keyPath) &#123;</span><br><span class="line">      console.log(key, keyPath)</span><br><span class="line">    &#125;,</span><br><span class="line">    toHome () &#123;</span><br><span class="line">      this.$router.push(&#39;&#x2F;home&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>App.vue使用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214131.png" alt="image-20210121164553454"></p><ul><li>主要的点击事件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">toHome () &#123;</span><br><span class="line">  this.$router.push(&#39;&#x2F;home&#39;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h2><blockquote><p>三步走： 设参，传参，接参</p></blockquote><ol><li>设参，通过路由表，设置路由参数</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214132.png" alt="image-20210121172317730"></p><ol start="2"><li>传参，通过this.$rounter.push()</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214133.png" alt="image-20210121172413615"></p><ol start="3"><li>在目标vue中，通过vue中 的 this.$route.params.id接参，id自定义</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214134.png" alt="image-20210121172732053"></p><h2 id="路由间跳转方式"><a href="#路由间跳转方式" class="headerlink" title="路由间跳转方式"></a>路由间跳转方式</h2><ol><li>通过HTML中的路由链接进行跳转  <router-link to="路由地址"></li><li>通过js实现路由跳转    this.$router.push(“路由地址”)</li></ol><h2 id="Vue中组件样式表的作用范围"><a href="#Vue中组件样式表的作用范围" class="headerlink" title="Vue中组件样式表的作用范围"></a>Vue中组件样式表的作用范围</h2><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214135.png" alt="image-20210121173504109"></p><p>若vue组件中的style标签无scoped属性，则此style样式将会作用在整个页面上。</p><p>若有scoped则样式只作用在当前组件中</p><h1 id="Vue静态资源打包"><a href="#Vue静态资源打包" class="headerlink" title="Vue静态资源打包"></a>Vue静态资源打包</h1><ol><li>在开发环境中，各种修改够可以看到实施效果，因为开发环境中会自动编译资源；</li><li>在生产环境中，静态资源需要手部署，此时需要通过<code>npm run build</code>来构建资源。此时产生一个dist文件夹，在静态资源存于此。</li></ol><h1 id="Mock假数据"><a href="#Mock假数据" class="headerlink" title="Mock假数据"></a>Mock假数据</h1><blockquote><p>提供假数据，可以让前端不需要等待后端的接口，而直接进行下一步的开发。推荐使用fastMock和easyMock</p></blockquote><p><a href="https://www.fastmock.site/#/projects">fastMock</a></p><h1 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h1><h2 id="什么是嵌套路由"><a href="#什么是嵌套路由" class="headerlink" title="什么是嵌套路由"></a>什么是嵌套路由</h2><p>​    嵌套路由也称为子路由，在实际应用中，通常由多层嵌套的组件构成。同样，URL中各段动态路径也按某种结构对应嵌套的各层组件，例如：</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214136.png" alt="image-20210124224053214"></p><h2 id="嵌套路由使用"><a href="#嵌套路由使用" class="headerlink" title="嵌套路由使用"></a>嵌套路由使用</h2><ol><li>创建对应页面</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214137.png" alt="image-20210125001241150"></p><ol start="2"><li>配置路由(在哪一个界面嵌套就在哪一个界面的children中添加)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214138.png" alt="image-20210125001357331"></p><p>3.选择被<router-view></router-view>显示区域</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214139.png" alt="image-20210125001502110"></p><ol start="4"><li>使用router-link 或者是$router.push跳转</li></ol><h1 id="组件-重定向"><a href="#组件-重定向" class="headerlink" title="组件 重定向"></a>组件 重定向</h1><blockquote><p>首先需要明白，Vue中的重定向是作用在路径不同但组件相同的情况下</p></blockquote><h2 id="配置重定向"><a href="#配置重定向" class="headerlink" title="配置重定向"></a>配置重定向</h2><ol><li>修改路由配置，重定向直接调用另一个已配置好的路由对象即可。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: &#39;&#x2F;login&#39;,</span><br><span class="line">  name: &#39;Login&#39;,</span><br><span class="line">  component: Login</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  path: &#39;logout&#39;,</span><br><span class="line">  redirect: &#39;&#x2F;login&#39;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214140.png" alt="image-20210125091239596"></p><ol start="2"><li>使用</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-menu-item index&#x3D;&quot;2-3&quot;&gt;&lt;router-link to&#x3D;&quot;&#x2F;login&quot;&gt;退出&lt;&#x2F;router-link&gt;&lt;&#x2F;el-menu-item&gt;</span><br></pre></td></tr></table></figure><h1 id="参数传递-1"><a href="#参数传递-1" class="headerlink" title="参数传递"></a>参数传递</h1><blockquote><p>长需要把某种模式匹配到所有路由，全部映射到同个组件。例如，有一个User组件，对于所有ID各不相同的用户，都要使用这个组件渲染。此时就需要使用传递参数了</p></blockquote><h2 id="使用路径匹配的方式"><a href="#使用路径匹配的方式" class="headerlink" title="使用路径匹配的方式"></a>使用路径匹配的方式</h2><p>1） 修改路由配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: &#39;&#x2F;home&#39;,</span><br><span class="line">  name: &#39;Home&#39;,</span><br><span class="line">  component: Home,</span><br><span class="line">  children: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &#39;&#x2F;clistDefault&#x2F;:id&#39;,</span><br><span class="line">      name: &#39;&#x2F;CListDefault&#39;,</span><br><span class="line">      component: CListDefault</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &#39;&#x2F;clistLatest&#x2F;:id&#39;,</span><br><span class="line">      name: &#39;&#x2F;CListLatest&#39;,</span><br><span class="line">      component: CListLatest</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>主要是在path属性上增加了<code>:id</code>占位符</li></ul><p>2） 传递参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-menu-item index&#x3D;&quot;1-1&quot;&gt;&lt;router-link to&#x3D;&quot;&#x2F;clistDefault&#x2F;1&quot;&gt;默认&lt;&#x2F;router-link&gt;&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">&lt;el-menu-item index&#x3D;&quot;1-2&quot;&gt;&lt;router-link :to&#x3D;&quot;&#123;name:&#39;CListLatest&#39;,params:&#123;id:22&#125;&#125;&quot;&gt;最新&lt;&#x2F;router-link&gt;&lt;&#x2F;el-menu-item&gt;</span><br></pre></td></tr></table></figure><ul><li>此时将to改为<code>:to</code>，是为了将这一属性当成对象使用，注意<strong>router-link</strong>中的name属性名称一定要和路由中的name属性名称匹配。</li></ul><p>3）</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214141.png" alt="image-20210125133142286"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214142.png" alt="image-20210125133111259"></p><h2 id="代码方式"><a href="#代码方式" class="headerlink" title="代码方式"></a>代码方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123;name: &#39;CListDefault&#39;, params: &#123;id: 2323&#125;&#125;)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214143.png" alt="image-20210125134116081"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214144.png" alt="image-20210125134125054"></p><h2 id="实现点击查看详情做法"><a href="#实现点击查看详情做法" class="headerlink" title="实现点击查看详情做法"></a>实现点击查看详情做法</h2><ol><li>在展示表中通过点击事件，将id传入详情页</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214145.png" alt="image-20210125213804916"></p><ol start="2"><li>在详情页通过<code>this.$route.params.id</code>接收传来的参数id。并向后端发送请求，限定词为id即可获取所需数据</li></ol><h1 id="路由中的钩子函数"><a href="#路由中的钩子函数" class="headerlink" title="路由中的钩子函数"></a>路由中的钩子函数</h1><ul><li><code>beforeRouteEnter</code>:在进入路由前执行</li><li><code>beforeRouteLeave</code>:在离开路由前执行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteEnter: (to, from, next) &#x3D;&gt; &#123;</span><br><span class="line">  console.log(&#39;你好这是beforeRouteEnter&#39;)</span><br><span class="line">  next()</span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteLeave: (to, from, next) &#x3D;&gt; &#123;</span><br><span class="line">  console.log(&#39;this is beforeRouteLeave&#39;)</span><br><span class="line">  next()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Vue-Element-Admin"><a href="#Vue-Element-Admin" class="headerlink" title="Vue-Element-Admin"></a>Vue-Element-Admin</h1><blockquote><p><a href="http://panjiachen.github.io/vue-element-admin">vue-element-admin</a> 是一个后台前端解决方案，它基于 <a href="https://github.com/vuejs/vue">vue</a> 和 <a href="https://github.com/ElemeFE/element">element-ui</a>实现。它使用了最新的前端技术栈，内置了 i18 国际化解决方案，动态路由，权限验证，提炼了典型的业务模型，提供了丰富的功能组件，它可以帮助你快速搭建企业级中后台产品原型。</p></blockquote><p><a href="https://panjiachen.github.io/vue-element-admin-site/zh/">官网</a></p><p><a href="https://github.com/PanJiaChen/vue-admin-template">基础版</a></p><p><a href="https://github.com/PanJiaChen/vue-element-admin">集成版</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆项目</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/PanJiaChen/vue-element-admin.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入项目目录</span></span><br><span class="line"><span class="built_in">cd</span> vue-element-admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建议不要用 cnpm 安装 会有各种诡异的bug 可以通过如下操作解决 npm 下载速度慢的问题</span></span><br><span class="line">npm install --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地开发 启动项目</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h2 id="路由和侧边栏"><a href="#路由和侧边栏" class="headerlink" title="路由和侧边栏"></a>路由和侧边栏</h2><blockquote><p>项目侧边栏和路由是绑定在一起的，所以你只有在 <code>@/router/index.js</code> 下面配置对应的路由，侧边栏就能动态的生成了。大大减轻了手动重复编辑侧边栏的工作量。当然这样就需要在配置路由的时候遵循一些约定的规则</p></blockquote><ul><li>其中的<code>@</code>就是<code>src</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214146.png" alt="image-20210125144743146"></p><h1 id="分页实现"><a href="#分页实现" class="headerlink" title="分页实现"></a>分页实现</h1><h2 id="分页原理"><a href="#分页原理" class="headerlink" title="分页原理"></a>分页原理</h2><blockquote><p>通过element ui的内置组件， Pagination实现分页</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">任何的分页都有五个部分组成</span><br><span class="line">1.记录的总条数</span><br><span class="line">2.每页显示的记录条数</span><br><span class="line">3.总页数</span><br><span class="line">4.当前是第几页</span><br><span class="line">5.当前页的所有记录</span><br></pre></td></tr></table></figure><ul><li>分页有两种<ol><li>真分页：根据当前选择的页数去后端获取数据；</li><li>假分页：先一次性从数据库获取所有数据，然后根据当前页码从浏览器中查询；</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214147.png" alt="image-20210126222657828"></p><ol><li><p>Pagination实现分页（真分页）</p><blockquote><p>Pagination实际上是一个组件，组件里设置了分页常用的参数。通过父组件使用Pagination组件，向该组件中传递参数，让Pagination组件得到分页常用到的参数值，就可以实现分页。通过组件参数传递（父传子）</p></blockquote></li><li><p>提供后端的分页数据</p></li></ol><h2 id="PageHelper"><a href="#PageHelper" class="headerlink" title="PageHelper"></a>PageHelper</h2><p><a href="https://pagehelper.github.io/docs/howtouse/">Mybatis-PageHelper</a></p><ol><li>添加pom依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        pagehelper所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>覆盖默认配置</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置pagehelper</span></span><br><span class="line"><span class="attr">pagehelper:</span></span><br><span class="line"><span class="comment">#  指定分页插件使用哪种语言，不指定会自动识别</span></span><br><span class="line">  <span class="attr">helper-dialect:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">reasonable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">support-methods-arguments:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">params:</span> <span class="string">count=countSql</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写controller接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实现商品的分页查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageNum  表示第几页</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageSize 表示一页显示多少数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getPaging&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageInfo&lt;Product&gt; <span class="title">getPaging</span><span class="params">(<span class="keyword">int</span> pageNum, <span class="keyword">int</span> pageSize)</span></span>&#123;</span><br><span class="line"><span class="comment">//        使用pageHelper的静态方法获取分页数据</span></span><br><span class="line">        PageHelper.startPage(pageNum,pageSize);</span><br><span class="line"><span class="comment">//        获取所有的商品数据备用</span></span><br><span class="line">        List&lt;Product&gt; products = <span class="keyword">this</span>.productService.selectAllProduct();</span><br><span class="line"><span class="comment">//        获取分页对象</span></span><br><span class="line">        PageInfo&lt;Product&gt; productPageInfo = <span class="keyword">new</span> PageInfo&lt;&gt;(products);</span><br><span class="line">        <span class="keyword">return</span> productPageInfo;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>利用postMan测试接口</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214148.png" alt="image-20210127101509806"></p><h2 id="前端使用Pagination组件"><a href="#前端使用Pagination组件" class="headerlink" title="前端使用Pagination组件"></a>前端使用Pagination组件</h2><p><strong>在页面中使用Pagination组件重点</strong></p><ol><li>total：记录的总条数</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> elementui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity学习与使用</title>
      <link href="2021/03/10/springsecurity-xue-xi-yu-shi-yong/"/>
      <url>2021/03/10/springsecurity-xue-xi-yu-shi-yong/</url>
      
        <content type="html"><![CDATA[<p><strong>Spring Security OAuth2.0认证授权</strong></p><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="什么是认证"><a href="#什么是认证" class="headerlink" title="什么是认证"></a>什么是认证</h2><p>​        进入移动互联网时代,大家每天都在刷手机,常用的软件有微信、支付宝、头条等，下边拿微信来举例子说<br>明认证相关的基本概念,在初次使用微信前需要注册成为微信用户,然后输入账号和密码即可登录微信,输入账<br>号和密码登录微信的过程就是认证。<br>​        <strong>系统为什么要认证?</strong><br>​        认证是为了保护系统的隐私数据与资源,户的身份合法方可访问该系统的资源。</p><p>​        <strong>认证</strong>:用户认证就是<strong>判断一个用户的身份是否合法的过程</strong>,户去访问系统资源时系统要求验证用户的身份<br>信息,身份合法方可继续访问,不合法则拒绝访问。常见的用户身份认证方式有:用户名密码登录,二维码登<br>录,手机短信登录,指纹认证等方式。</p><h2 id="什么是会话"><a href="#什么是会话" class="headerlink" title="什么是会话"></a>什么是会话</h2><p>​        用户认证通过后,为了避免用户的每次操作都进行认证可将用户的信息保证在会话中。会话就是系统为了保<br>持当前用户的登录状态所提供的机制,常见的有基于session方式、基于token方式等。<br>​        <strong>基于session的认证方式如下图:</strong><br>它的交互流程是,胪认证成功后,在服务端生成用户相关的数据保存在session(当前会话)中,发给客户端<br>的sesssion id 存放到cookie中,这样用户客户端请求时带上session. id就可以验证服务器端是否存在session<br>数据,以此完成用户的合法校验,当用户退出系统或session过期销毁时,客户端的session. _id也就无效了。</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213616.png" alt="image-20210131130455565"></p><p><strong>基于token的认证方式</strong><br>        它的交互流程是,户认证成功后,服务端生成一个token发给客户端 ,客户端可以放到cookie或<br>localStorage 等存储中,每次请求时带上token ,服务端收到token通过验证后即可确认用户身份。</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213617.png" alt="image-20210131130651486"></p><ul><li>基于session的认证方式由Servlet规范定制,服务端要存储session信息需要占用内存资源,客户端需要支持<br>cookie ;基于token的方式则一般不需要服务端存储token ,并且不限制客户端的存储方式。如今移动互联网时代更多类型的客户端需要接入系统,系统多是采用前后端分离的架构进行实现,<strong>所以基于token的方式更适合</strong>。</li></ul><h2 id="什么是授权"><a href="#什么是授权" class="headerlink" title="什么是授权"></a>什么是授权</h2><p>​        还拿微信来举例子,微信登录成功后用户即可使用微信的功能,比如,发红包、发朋友圈、添加好友等, 没<br>有绑定银行卡的用户是无法发送红包的,绑定银行卡的用户才可以发红包,发红包功能、发朋友圈功能都是微信<br>的资源即功能资源,户拥有发红包功能的权限才可以正常使用发送红包功能,拥有发朋友圈功能的权限才可以<br>使用发朋友圈功能,这个根据用户的权限来控制用户使用资源的过程就是授权。</p><p><strong>为什么要授权?</strong><br>        认证是为了保证用户身份的合法性,授权则是为了更细粒度的对隐私数据进行划分,授权是在认证通过后发<br>生的,控制不同的用户能够访问不同的资源。<br>        <strong>授权</strong>:授权是用户认证通过根据用户的权限来控制用户访问资源的过程,拥有资源的访问权限则正常访问,<br>没有权限则拒绝访问。</p><h2 id="授权的数据模型"><a href="#授权的数据模型" class="headerlink" title="授权的数据模型"></a>授权的数据模型</h2><p>​        如何进行授权即如何对用户访问资源进行控制,首先需要学习授权相关的数据模型。</p><p>​        授权可简单理解为Who对What(which)进行How操作,<strong>包括如下:</strong><br>​        <strong>Who</strong> ,即主体( Subject) , 主体-般是指用户,也可以是程序,需要访问系统中的资源。<br>​        <strong>What</strong> ,即资源( Resource),如系统菜单、 面、按钮、代码方法、系统商品信息、系统订单信息等。系<br>统菜单、页面、按钮、代码方法都属于系统功能资源,对于web系统每个功能资源通常对应一个URL ;系统商品<br>信息、系统订单信息都属于实体资源(数据资源) , 实体资源由资源类型和资源实例组成,比如商品信息为资源<br>类型,商品编号为001的商品为资源实例。<br>​        <strong>How</strong> ,权限/许可( Permission) , 规定了用户对资源的操作许可,权限离开资源没有意义,如用户查询权<br>限、用户添加权限、某个代码方法的调用权限、编号为001的用户的修改权限等,通过权限可知用户对哪些资源<br>都有哪些操作许可。</p><p>主体、资源、权限关系如下图:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213618.png" alt="image-20210131142846001"></p><p><strong>主体、资源、权限相关的数据模型如下:</strong><br>主体(用户id、账号、密码、..）<br>资源(资源id、资源名称、访问地址、..）<br>权限(权限id、权限标识、权限名称、资源id、..<br>角色(角色id、角色名称、..)<br>角色和权限关系(角色id、权限id、..）<br>主体(用户)和角色关系(用户id、角色id、..）<br>主体(用户)、资源、权限关系如下图:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213619.png" alt="image-20210131143324352"></p><p>通常企业开发中将资源和权限表合并为一张权限表，如下:<br>资源(资源id、资源名称、访问地址、.. )<br>权限(权限id、权限标识、权限名称、资源id、..<br>合并为:<br>权限(权限id、权限标识、权限名称、资源名称、资源访问地址、..)<br>修改后数据模型之间的关系如下图:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213620.png" alt="image-20210131143705581"></p><h2 id="RBAC"><a href="#RBAC" class="headerlink" title="RBAC"></a>RBAC</h2><p>如何实现授权？业界通常基于RBAC实现授权</p><h3 id="基于角色的访问控制"><a href="#基于角色的访问控制" class="headerlink" title="基于角色的访问控制"></a>基于角色的访问控制</h3><p>​        RBAC基于角色的访问控制( Role- Based Access Control )是按角色进行授权,比如:主体的角色为总经理<br>可以查询企业运营报表,查询员工工资信息等,访问控制流程如下:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213621.png" alt="image-20210131144048191"></p><p>根据上图中的逻辑判断，授权代码可表示如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(主体.hasRole(<span class="string">&quot;总经理角色id&quot;</span>))&#123;</span><br><span class="line">    查询工资</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果上图中查询工资所需要的角色变化为总经理和部门经理,此时就需要修改判断逻辑为”判断用户的角色是否是<br>总经理或部门]经理”,修改代码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(主体.hasRole(<span class="string">&quot;总经理角色id&quot;</span>) || 主体.hasRole(<span class="string">&quot;部门经理角色id&quot;</span>))&#123;</span><br><span class="line">    查询工资</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据上面的例子发现，当需要修改角色的权限时就需要修改授权的相关代码，<strong>系统可扩展性差</strong></p><h3 id="基于资源的访问控制"><a href="#基于资源的访问控制" class="headerlink" title="基于资源的访问控制"></a>基于资源的访问控制</h3><p>​        RBAC基于资源的访问控制( Resource- Based Access-Control )是按资源(或权限)进行授权,比如:用户必须具有查询工资权限才可以查询员工工资信息等,访问控制流程如下:</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213622.png" alt="image-20210131144218458"></p><p>根据上图中的逻辑判断，授权代码可表示如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(主体.hasPermission(<span class="string">&quot;查询工资权限标识&quot;</span>))&#123;</span><br><span class="line">    查询工资</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优点：</strong>系统设计时定义好查询工资的权限标识，即使查询工资所需要 角色变化为总经理或者部门经理也不需要修改授权代码，系统可扩展性强。</p><h1 id="基于Session的认证方式"><a href="#基于Session的认证方式" class="headerlink" title="基于Session的认证方式"></a>基于Session的认证方式</h1><h2 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h2><p>​        基于Session认证方式的流程是,用户认证成功后,在服务端生成用户相关的数据保存在session(当前会<br>话) ,而发给客户端的sesssion. id存放到cookie 中,这样用客户端请求时带上session. id就可以验证服务器端<br>是否存在session数据,以此完成用户的合法校验。当用户退出系统或session过期销毁时客户端的session. id也<br>就无效了。下图是session认证方式的流程图: T</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213623.png" alt="image-20210131150045751"></p><p>​        基于Session的认证机制由Servlet规范定制, Servlet容器已实现,用户通过HttpSession的操作方法即可实<br>现，如下是HttpSession相关的操作APl。</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213624.png" alt="image-20210131150247694"></p><h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><p>​    本案例工程使用maven</p><p>这是用spring-mvc时间再看</p><p><a href="https://www.bilibili.com/video/BV1VE411h7aL?p=6">地址</a></p><h1 id="Spring-Security快速上手"><a href="#Spring-Security快速上手" class="headerlink" title="Spring Security快速上手"></a>Spring Security快速上手</h1><h2 id="Spring-Security介绍"><a href="#Spring-Security介绍" class="headerlink" title="Spring Security介绍"></a>Spring Security介绍</h2><p>​        Spring Security是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的安全框架。<br>于它是Spring生态系统中的一员,因此它伴随着整个Spring生态系统不断修正、升级,在spring boot项目中加<br>入spring security更是十分简单,使用Spring Security减少了为企业系统安全控制编写大量重复代码的工作。</p><h2 id="创建简单springboot工程"><a href="#创建简单springboot工程" class="headerlink" title="创建简单springboot工程"></a>创建简单springboot工程</h2><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityDemo01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello security&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pom依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213625.png" alt="image-20210131152845802"></p><h2 id="SpringSecurity基本原理"><a href="#SpringSecurity基本原理" class="headerlink" title="SpringSecurity基本原理"></a>SpringSecurity基本原理</h2><blockquote><p>其本质时一个过滤器链，代码底层重点看三个过滤器</p></blockquote><h3 id="FilterSecurityInterceptor"><a href="#FilterSecurityInterceptor" class="headerlink" title="FilterSecurityInterceptor"></a>FilterSecurityInterceptor</h3><blockquote><p>它是一个方法级的权限过滤器，基本位于过滤链的最底部</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">super</span>.beforeInvocation(filterInvocation); <span class="comment">//标识查看之前的filter是否通过</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filterInvocation.getChain().doFilter(filterInvocation.getRequest(), filterInvocation.getResponse());   <span class="comment">//表示真正的调用后台的服务</span></span><br></pre></td></tr></table></figure><h3 id="ExceptionTranslationFilter"><a href="#ExceptionTranslationFilter" class="headerlink" title="ExceptionTranslationFilter"></a>ExceptionTranslationFilter</h3><blockquote><p>是异常过滤器，用来处理正在认证授权过程中抛出的异常</p></blockquote><h3 id="UsernamePasswordAuthenticationFilter"><a href="#UsernamePasswordAuthenticationFilter" class="headerlink" title="UsernamePasswordAuthenticationFilter"></a>UsernamePasswordAuthenticationFilter</h3><blockquote><p>对/login的POST请求做拦截，校验表单中用户名，密码</p></blockquote><h2 id="两个重要接口"><a href="#两个重要接口" class="headerlink" title="两个重要接口"></a>两个重要接口</h2><h3 id="UserDetailService"><a href="#UserDetailService" class="headerlink" title="UserDetailService"></a>UserDetailService</h3><blockquote><p>查询数据库用户名和密码的过程</p></blockquote><ul><li>创建类继承UsernamePasswordAuthenticationFilter, 重写三个方法</li><li>创建类实现UserDetailService,编写查询数据过程，返回User对象,这个User对象是安全框架提供对象</li></ul><p>当什么也没有配置的时候,账号和密码是由Spring Security 定义生成的。而在实际项<br>目中账号和密码都是从数据库中查询出来的。所以我们要通过自定 义逻辑控制认证逻<br>辑。<br>如果需要自定义逻辑时,只需要实现UserDetailService接口即可。接口定义如下:。</p><h3 id="PasswordEncoder"><a href="#PasswordEncoder" class="headerlink" title="PasswordEncoder"></a>PasswordEncoder</h3><blockquote><p>数据加密接口，用于返回User对象里面密码加密</p></blockquote><h2 id="简单使用-设置用户名与密码"><a href="#简单使用-设置用户名与密码" class="headerlink" title="简单使用 设置用户名与密码"></a>简单使用 设置用户名与密码</h2><blockquote><ol><li>通过配置文件</li><li>通过配置类</li><li>自定义编写实现类</li></ol></blockquote><h3 id="方式一：application-yml中"><a href="#方式一：application-yml中" class="headerlink" title="方式一：application.yml中"></a>方式一：application.yml中</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">      <span class="attr">password:</span> <span class="number">123123</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213626.png" alt="image-20210131180214665"></p><h3 id="方式二：编写类实现接口"><a href="#方式二：编写类实现接口" class="headerlink" title="方式二：编写类实现接口"></a>方式二：编写类实现接口</h3><p>SecurityConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 调用方法实现密码加密</span></span><br><span class="line">        BCryptPasswordEncoder passwordEncoder = <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">        String password = passwordEncoder.encode(<span class="string">&quot;123123&quot;</span>);</span><br><span class="line">        auth.inMemoryAuthentication().withUser(<span class="string">&quot;test2&quot;</span>).password(password).roles(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">password</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方式三：自定义实现类设置"><a href="#方式三：自定义实现类设置" class="headerlink" title="方式三：自定义实现类设置"></a>方式三：自定义实现类设置</h3><blockquote><ol><li>创建配置类，设置使用了哪个userDetailsService实现类</li><li>编写实现类，返回User对象，User对象有用户名密码和操作权限</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig03</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(password());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">password</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213627.png" alt="image-20210131183318174"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;userDetailsService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUserDetailsService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String s)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">        List&lt;GrantedAuthority&gt; auths = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;role&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User(<span class="string">&quot;test3&quot;</span>,<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123123&quot;</span>),auths);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213628.png" alt="image-20210131183340147"></p><h2 id="绑定数据库数据实现认证"><a href="#绑定数据库数据实现认证" class="headerlink" title="绑定数据库数据实现认证"></a>绑定数据库数据实现认证</h2><p>实体类User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;userDetailsService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUserDetailsService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mybatisPlus的条件构造器</span></span><br><span class="line">        QueryWrapper&lt;com.springsecurity.securitydemo01.entity.User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">&quot;username&quot;</span>,username);</span><br><span class="line">        com.springsecurity.securitydemo01.entity.User user = userMapper.selectOne(wrapper);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span>  <span class="keyword">new</span> UsernameNotFoundException(<span class="string">&quot;用户名不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;GrantedAuthority&gt; auths = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;role&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User(user.getUsername(),<span class="keyword">new</span> BCryptPasswordEncoder().encode(user.getPassword()),auths);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Mapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义用户登录界面"><a href="#自定义用户登录界面" class="headerlink" title="自定义用户登录界面"></a>自定义用户登录界面</h2><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>界面自己随便写</p><p>重点是下面的config配置类SecurityConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig03</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(password());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">password</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.formLogin()    <span class="comment">//自定义登录界面</span></span><br><span class="line">                .loginPage(<span class="string">&quot;/user/login&quot;</span>)   <span class="comment">//登录界面设置</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/user/login&quot;</span>)  <span class="comment">//登录界面访问路径</span></span><br><span class="line">                .defaultSuccessUrl(<span class="string">&quot;/user/index&quot;</span>).permitAll()   <span class="comment">//登录成功后所跳转的路径</span></span><br><span class="line">                .and().authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/test/hello&quot;</span>,<span class="string">&quot;/user/login&quot;</span>).permitAll()   <span class="comment">//设置哪些路径可以直接访问不需要认证</span></span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and().csrf().disable();    <span class="comment">//关闭csrf防护</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基于角色或权限进行访问控制"><a href="#基于角色或权限进行访问控制" class="headerlink" title="基于角色或权限进行访问控制"></a>基于角色或权限进行访问控制</h2><h3 id="hasAuthority方法"><a href="#hasAuthority方法" class="headerlink" title="hasAuthority方法"></a>hasAuthority方法</h3><ul><li><p>如果当前的主体具有指定的权限，则返回true，否则返回false</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasAuthority(<span class="string">&quot;admin&quot;</span>)   <span class="comment">//只有具有admin权限的用户才能访问</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213629.png" alt="image-20210131202427381"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213630.png" alt="image-20210131202453611"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312213631.png" alt="image-20210131202500271"></p><h3 id="hasAnyAuthority方法"><a href="#hasAnyAuthority方法" class="headerlink" title="hasAnyAuthority方法"></a>hasAnyAuthority方法</h3><ul><li>如果当前的主体有任何提供的角色（给定的作为一个都好分割的字符串列表），返回true</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasAnyAuthority(<span class="string">&quot;admin,user&quot;</span>) <span class="comment">//具有这两个权限的用户都可以访问</span></span><br></pre></td></tr></table></figure><h3 id="hasRole方法"><a href="#hasRole方法" class="headerlink" title="hasRole方法"></a>hasRole方法</h3><ul><li><p>如果用户具备给定角色就允许访问，否则出现403</p></li><li><p>如果当前主体具有指定的角色，则返回true</p></li><li><p>注意角色前缀<code>ROLE_</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasRole(<span class="string">&quot;sale&quot;</span>)   <span class="comment">//具备sale角色即可访问</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;GrantedAuthority&gt; auths = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;admin,ROLE_sale&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><h3 id="hasAnyRole方法"><a href="#hasAnyRole方法" class="headerlink" title="hasAnyRole方法"></a>hasAnyRole方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasAnyRole(<span class="string">&quot;sale,manage&quot;</span>)  <span class="comment">//具备任意角色均可访问</span></span><br></pre></td></tr></table></figure><h2 id="自定义403界面"><a href="#自定义403界面" class="headerlink" title="自定义403界面"></a>自定义403界面</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig03</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(password());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">password</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 配置自定义403界面</span></span><br><span class="line">        http.exceptionHandling().accessDeniedPage(<span class="string">&quot;/user/forbidden&quot;</span>);</span><br><span class="line">        http.formLogin()    <span class="comment">//自定义登录界面</span></span><br><span class="line">                .loginPage(<span class="string">&quot;/user/login&quot;</span>)   <span class="comment">//登录界面设置</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/user/login&quot;</span>)  <span class="comment">//登录界面访问路径</span></span><br><span class="line">                .defaultSuccessUrl(<span class="string">&quot;/user/index&quot;</span>).permitAll()   <span class="comment">//登录成功后所跳转的路径</span></span><br><span class="line">                .and().authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/test/hello&quot;</span>,<span class="string">&quot;/user/login&quot;</span>).permitAll()   <span class="comment">//设置哪些路径可以直接访问不需要认证</span></span><br><span class="line">               <span class="comment">// .antMatchers(&quot;/user/index&quot;).hasAuthority(&quot;admin&quot;)   //只有具有admin权限的用户才能访问</span></span><br><span class="line">               <span class="comment">// .antMatchers(&quot;/user/index&quot;).hasAnyAuthority(&quot;admin,user&quot;) //具有这两个权限的用户都可以访问</span></span><br><span class="line">              <span class="comment">//  .antMatchers(&quot;/user/index&quot;).hasRole(&quot;sale&quot;)   //具备sale角色即可访问</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/user/index&quot;</span>).hasAnyRole(<span class="string">&quot;sale,manage&quot;</span>)  <span class="comment">//具备任意角色均可访问</span></span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and().csrf().disable();    <span class="comment">//关闭csrf防护</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> SpringSecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis学习与使用</title>
      <link href="2021/03/10/redis-xue-xi-yu-shi-yong/"/>
      <url>2021/03/10/redis-xue-xi-yu-shi-yong/</url>
      
        <content type="html"><![CDATA[<p><strong>Redis学习与使用</strong></p><ol><li>win10安装</li></ol><p><a href="https://github.com/tporadowski/redis/releases">github地址</a></p><p><a href="https://www.runoob.com/redis/redis-install.html">菜鸟教程redis</a></p><p>启动</p><p><img src="Redis%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/20210310173203.png" alt="image-20210122171050363"></p><ol start="2"><li>redis可视化工具</li></ol><p><a href="https://www.cnblogs.com/aimu/p/7047671.html">博客园链接</a></p><p><img src="Redis%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/20210310173204.png" alt="image-20210122171218209"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ul><li>Spring Data Redis提供了一个工具类： RedisTemplate。里面 封装了对于Redis的五种数据结构的各种操作，包括如下：</li></ul><ol><li>redis Template.opsForValue()：操作字符串</li><li>redis.Template.opsForHash(): 操作hash</li><li>redis.Template.opsForList():操作list </li><li>redis.Template.opsForSet():操作set</li><li>redis.Template.opsForZSet():操作zset</li></ol><p>其他一些通用命令，如expire可通过redisTemplate.xx来直接调用</p><ul><li>5种结构</li></ul><ol><li>String：等同于java中的，Map&lt;String,String&gt;</li><li>list:等同于java中的，Map&lt;String,List<String>&gt;</li><li>set:等同于java中的，Map&lt;String,Set<String>&gt;</li><li>sort_set:等同于java中的，可排序的set</li><li>hash:等同于java中的，Map&lt;String,Map&lt;String,String&gt;&gt;</li></ol><h2 id="项目使用"><a href="#项目使用" class="headerlink" title="项目使用"></a>项目使用</h2><ol><li>首先开启redis服务</li><li>添加依赖</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--        配置redis--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>3.覆盖默认配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">#    配置redis</span></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">password:</span></span><br><span class="line">  <span class="attr">jedis:</span></span><br><span class="line">    <span class="attr">pool:</span></span><br><span class="line">      <span class="attr">max-idle:</span> <span class="number">9</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">-1</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">5000</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><ol start="4"><li>注入配置</li></ol><p>！！！  一般注入的是<code>StringRedisTemplate</code>，因为RedisTemplate需自定义序列化数据，不方便</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br></pre></td></tr></table></figure><h1 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h1><ol><li>forValue</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testRedis</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//存储数据并指定过期时间为2min</span></span><br><span class="line">    <span class="keyword">this</span>.redisTemplate.opsForValue().set(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;value1&quot;</span>,<span class="number">2</span>,TimeUnit.MINUTES);</span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    String val = <span class="keyword">this</span>.redisTemplate.opsForValue().get(<span class="string">&quot;key1&quot;</span>).toString();</span><br><span class="line">    System.out.println(<span class="string">&quot;val = &quot;</span>+ val);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>boundHash</li></ol><p><img src="Redis%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BD%BF%E7%94%A8/20210310173205.png" alt="image-20210124163658885"></p><ol start="3"><li>一般在使用的时候会为key设置前缀，与以后的验证码加以区分，以便未维护</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    定义前缀信息区分邮箱有验证码</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_PREFIX = <span class="string">&quot;user:verify:&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//            获取redis保存的验证码校验</span></span><br><span class="line">            String valCode = <span class="keyword">this</span>.redisTemplate.opsForValue().get(<span class="string">&quot;KEY_PREFIX:&quot;</span> + email).toString();</span><br></pre></td></tr></table></figure><h1 id="项目代码"><a href="#项目代码" class="headerlink" title="项目代码"></a>项目代码</h1><ol><li><p>前端 vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注册--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;register_box&quot;&gt;</span><br><span class="line">    &lt;h1&gt;智易校园二手平台欢迎你&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;el-row :gutter&#x3D;&quot;20&quot;&gt;</span><br><span class="line">      &lt;el-col&gt;&lt;div class&#x3D;&quot;grid-content bg-purple&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;el-form :model&#x3D;&quot;ruleForm&quot; status-icon :rules&#x3D;&quot;rules&quot; ref&#x3D;&quot;ruleForm&quot; label-width&#x3D;&quot;100px&quot; class&#x3D;&quot;demo-ruleForm&quot; s&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;用户名&quot; prop&#x3D;&quot;userName&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;ruleForm.userName&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;学号&quot; prop&#x3D;&quot;stuNum&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;ruleForm.stuNum&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;性别&quot;&gt;</span><br><span class="line">            &lt;el-radio v-model&#x3D;&quot;ruleForm.sex&quot; label&#x3D;&quot;1&quot;&gt;男&lt;&#x2F;el-radio&gt;</span><br><span class="line">            &lt;el-radio v-model&#x3D;&quot;ruleForm.sex&quot; label&#x3D;&quot;2&quot;&gt;女&lt;&#x2F;el-radio&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;联系方式&quot; prop&#x3D;&quot;phone&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;tel&quot; v-model&#x3D;&quot;ruleForm.phone&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;所在校区&quot; prop&#x3D;&quot;options&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;block&quot;&gt;</span><br><span class="line">              &lt;el-cascader</span><br><span class="line">                placeholder&#x3D;&quot;试试搜索：校区&quot;</span><br><span class="line">                :options&#x3D;&quot;ruleForm.options&quot;</span><br><span class="line">                filterable&gt;&lt;&#x2F;el-cascader&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;密码&quot; prop&#x3D;&quot;pass&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;password&quot; v-model&#x3D;&quot;ruleForm.pass&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;确认密码&quot; prop&#x3D;&quot;checkPass&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;password&quot; v-model&#x3D;&quot;ruleForm.checkPass&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;邮箱&quot; prop&#x3D;&quot;email&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;email&quot; v-model&#x3D;&quot;ruleForm.email&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label&#x3D;&quot;验证码&quot; prop&#x3D;&quot;code&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;ruleForm.code&quot; autocomplete&#x3D;&quot;off&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;sendEmail&quot;&gt;发送验证码&lt;&#x2F;el-button&gt;</span><br><span class="line">            &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;submitForm(&#39;ruleForm&#39;)&quot;&gt;提交&lt;&#x2F;el-button&gt;</span><br><span class="line">            &lt;el-button @click&#x3D;&quot;resetForm(&#39;ruleForm&#39;)&quot;&gt;重置&lt;&#x2F;el-button&gt;</span><br><span class="line">          &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;&#x2F;el-form&gt;</span><br><span class="line">      &lt;&#x2F;el-col&gt;</span><br><span class="line">    &lt;&#x2F;el-row&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import axios from &#39;axios&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Register&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    var validatePass &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;请输入密码&#39;))</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        if (value !&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">          var reg &#x3D; &#x2F;(?&#x3D;.*[0-9])(?&#x3D;.*[a-zA-Z]).&#123;8,30&#125;&#x2F;</span><br><span class="line">          if (!reg.test(value)) &#123;</span><br><span class="line">            callback(new Error(&#39;密码中必须包含字母、数字，至少8位，至多30&#39;))</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        callback()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    var validatePass2 &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;请再次输入密码&#39;))</span><br><span class="line">      &#125; else if (value !&#x3D;&#x3D; this.ruleForm.pass) &#123;</span><br><span class="line">        callback(new Error(&#39;两次输入密码不一致!&#39;))</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        callback()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    var checkUserName &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;请输入用户名&#39;))</span><br><span class="line">      &#125;</span><br><span class="line">      callback()</span><br><span class="line">    &#125;</span><br><span class="line">    var checkStuNum &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;请输入学号&#39;))</span><br><span class="line">      &#125;</span><br><span class="line">      callback()</span><br><span class="line">    &#125;</span><br><span class="line">    var checkPhone &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;手机号不可为空&#39;))</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        if (value !&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">          var reg &#x3D; &#x2F;^1[3456789]\d&#123;9&#125;$&#x2F;</span><br><span class="line">          if (!reg.test(value)) &#123;</span><br><span class="line">            callback(new Error(&#39;请输入有效的手机号码&#39;))</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        callback()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    var checkEmail &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">      if (value &#x3D;&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">        callback(new Error(&#39;邮箱不可为空&#39;))</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        if (value !&#x3D;&#x3D; &#39;&#39;) &#123;</span><br><span class="line">          var reg &#x3D; &#x2F;^\w+((.\w+)|(-\w+))@[A-Za-z0-9]+((.|-)[A-Za-z0-9]+).[A-Za-z0-9]+$&#x2F;</span><br><span class="line">          if (!reg.test(value)) &#123;</span><br><span class="line">            callback(new Error(&#39;邮箱格式不正确，请输入有效的邮箱账号&#39;))</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return &#123;</span><br><span class="line">      ruleForm: &#123;</span><br><span class="line">        pass: &#39;&#39;,</span><br><span class="line">        checkPass: &#39;&#39;,</span><br><span class="line">        userName: &#39;&#39;,</span><br><span class="line">        stuNum: &#39;&#39;,</span><br><span class="line">        sex: &#39;1&#39;,</span><br><span class="line">        phone: &#39;&#39;,</span><br><span class="line">        email: &#39;&#39;,</span><br><span class="line">        code: &#39;&#39;,</span><br><span class="line">        options: [&#123;</span><br><span class="line">          value: &#39;hbmu&#39;,</span><br><span class="line">          label: &#39;湖北医药学院&#39;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            value: &#39;xnb&#39;,</span><br><span class="line">            label: &#39;校本部&#39;</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            value: &#39;dfxq&#39;,</span><br><span class="line">            label: &#39;东风校区&#39;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">      rules: &#123;</span><br><span class="line">        pass: [</span><br><span class="line">          &#123; required: true, validator: validatePass, trigger: &#39;blur&#39; &#125;</span><br><span class="line">        ],</span><br><span class="line">        checkPass: [</span><br><span class="line">          &#123; required: true, validator: validatePass2, trigger: &#39;blur&#39; &#125;</span><br><span class="line">        ],</span><br><span class="line">        userName: [</span><br><span class="line">          &#123; required: true, validator: checkUserName, trigger: &#39;blur&#39; &#125;</span><br><span class="line">        ],</span><br><span class="line">        stuNum: [</span><br><span class="line">          &#123;required: true, validator: checkStuNum, trigger: &#39;blur&#39;&#125;</span><br><span class="line">        ],</span><br><span class="line">        phone: [</span><br><span class="line">          &#123;required: true, validator: checkPhone, trigger: &#39;blur&#39;&#125;</span><br><span class="line">        ],</span><br><span class="line">        email: [</span><br><span class="line">          &#123;required: true, validator: checkEmail, trigger: &#39;blur&#39;&#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    submitForm (formName) &#123;</span><br><span class="line">      var vm &#x3D; this</span><br><span class="line">      var formData &#x3D; new FormData()</span><br><span class="line">      formData.append(&#39;userName&#39;, this.ruleForm.userName)</span><br><span class="line">      formData.append(&#39;pass&#39;, this.ruleForm.pass)</span><br><span class="line">      formData.append(&#39;stuNum&#39;, this.ruleForm.stuNum)</span><br><span class="line">      formData.append(&#39;sex&#39;, this.ruleForm.sex)</span><br><span class="line">      formData.append(&#39;phone&#39;, this.ruleForm.phone)</span><br><span class="line">      formData.append(&#39;email&#39;, this.ruleForm.email)</span><br><span class="line">      formData.append(&#39;code&#39;, this.ruleForm.code)</span><br><span class="line">      axios.post(&#39;http:&#x2F;&#x2F;127.0.0.1:9999&#x2F;WEhbmu&#x2F;register&#39;, formData).then(res &#x3D;&gt; &#123;</span><br><span class="line">        console.log(res)</span><br><span class="line">        if (res.data &#x3D;&#x3D;&#x3D; &#39;success&#39;) &#123;</span><br><span class="line">          vm.$message(&#123;</span><br><span class="line">            message: &#39;注册成功，请登录&#39;,</span><br><span class="line">            type: &#39;success&#39;</span><br><span class="line">          &#125;)</span><br><span class="line">          vm.$router.push(&#39;&#x2F;login&#39;)</span><br><span class="line">        &#125;</span><br><span class="line">        if (res.data &#x3D;&#x3D;&#x3D; &#39;error&#39;) &#123;</span><br><span class="line">          vm.$message(&#123;</span><br><span class="line">            message: &#39;学号重复请检查或联系管理员&#39;,</span><br><span class="line">            type: &#39;error&#39;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        if (res.data &#x3D;&#x3D;&#x3D; &#39;codeError&#39;) &#123;</span><br><span class="line">          vm.$message(&#123;</span><br><span class="line">            message: &#39;验证码不正确&#39;,</span><br><span class="line">            type: &#39;error&#39;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    resetForm (formName) &#123;</span><br><span class="line">      this.$refs[formName].resetFields()</span><br><span class="line">    &#125;,</span><br><span class="line">    sendEmail (email) &#123;</span><br><span class="line">      var formData &#x3D; new FormData()</span><br><span class="line">      var vm &#x3D; this</span><br><span class="line">      formData.append(&#39;email&#39;, this.ruleForm.email)</span><br><span class="line">      axios.post(&#39;http:&#x2F;&#x2F;127.0.0.1:9999&#x2F;WEhbmu&#x2F;sendEmail&#39;, formData).then(res &#x3D;&gt; &#123;</span><br><span class="line">        vm.$message(&#123;</span><br><span class="line">          message: &#39;验证码发送成功，请及时查收&#39;,</span><br><span class="line">          type: &#39;success&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#register_box&#123;</span><br><span class="line">  border: 1px grey solid;</span><br><span class="line">  margin: 5% auto;</span><br><span class="line">  width: 20%;</span><br><span class="line">  padding: 20px 20px;</span><br><span class="line">  border-radius: 20px;</span><br><span class="line">  box-shadow: 0px 0px 20px grey;</span><br><span class="line">&#125;</span><br><span class="line">h1&#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #63b86b;</span><br><span class="line">  margin-left: 3px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure></li><li><p>controller</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.huangl.project.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.core.util.TimeUtil;</span><br><span class="line"><span class="keyword">import</span> com.huangl.project.config.RedisConfig;</span><br><span class="line"><span class="keyword">import</span> com.huangl.project.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.huangl.project.service.UserService;</span><br><span class="line"><span class="keyword">import</span> io.lettuce.core.ScriptOutputType;</span><br><span class="line"><span class="keyword">import</span> io.netty.util.internal.StringUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.BoundHashOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.ValueOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.MailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSenderImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.spring5.context.SpringContextUtils;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/WEhbmu&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    定义前缀信息区分邮箱有验证码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_PREFIX = <span class="string">&quot;user:verify:&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 实现用户注册功能</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="meta">@CrossOrigin</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">saveUser</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;userName&quot;)</span> String userName,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;pass&quot;)</span> String pass,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;stuNum&quot;)</span> Integer stuNum,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;sex&quot;)</span> Integer sex,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;phone&quot;)</span> String phone,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;code&quot;)</span> String code,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;email&quot;)</span> String email</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">this</span>.userService.queryAllByStuNum(stuNum);</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(users)) &#123;</span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setUserName(userName);</span><br><span class="line">            user.setPass(pass);</span><br><span class="line">            user.setStuNum(stuNum);</span><br><span class="line">            user.setPhone(phone);</span><br><span class="line"></span><br><span class="line"><span class="comment">//            获取redis保存的验证码校验</span></span><br><span class="line">            String valCode = <span class="keyword">this</span>.redisTemplate.opsForValue().get(<span class="string">&quot;KEY_PREFIX:&quot;</span> + email).toString();</span><br><span class="line">            <span class="keyword">if</span> (valCode.equals(code)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (sex == <span class="number">1</span>) &#123;</span><br><span class="line">                    user.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                user.setSex(<span class="string">&quot;女&quot;</span>);</span><br><span class="line"></span><br><span class="line">                user.setSchool(<span class="string">&quot;湖北医药学院&quot;</span>);</span><br><span class="line">                user.setArea(<span class="string">&quot;校本部&quot;</span>);</span><br><span class="line">                user.setStuPic(<span class="string">&quot;http://125&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">this</span>.userService.saveUser(user);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;codeError&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> email 利用smtp实现邮箱验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sendEmail&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendEmail</span><span class="params">(<span class="meta">@RequestParam(value = &quot;email&quot;)</span> String email)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 测试邮箱验证</span></span><br><span class="line">        <span class="keyword">int</span> s = (<span class="keyword">int</span>) ((Math.random() * <span class="number">9</span> + <span class="number">1</span>) * <span class="number">100000</span>);</span><br><span class="line">        String code = String.valueOf(s);</span><br><span class="line">        SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        message.setSubject(<span class="string">&quot;欢迎注册校园二手交易平台，请查收验证码&quot;</span>);</span><br><span class="line">        message.setText(<span class="string">&quot;尊敬的用户,您好:\n&quot;</span></span><br><span class="line">                + <span class="string">&quot;\n本次请求的邮件验证码为:&quot;</span> + code + <span class="string">&quot;,本验证码2分钟内有效，请及时输入。（请勿泄露此验证码）\n&quot;</span></span><br><span class="line">                + <span class="string">&quot;\n如非本人操作，请忽略该邮件。\n(这是一封自动发送的邮件，请不要直接回复）&quot;</span>);</span><br><span class="line">        message.setFrom(<span class="string">&quot;wehbmu@qq.com&quot;</span>);</span><br><span class="line">        message.setTo(email);</span><br><span class="line">        javaMailSender.send(message);</span><br><span class="line"></span><br><span class="line"><span class="comment">//向redis里存入数据并设置过期事件2min</span></span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.opsForValue().set(<span class="string">&quot;KEY_PREFIX:&quot;</span> + email, code, <span class="number">2</span>, TimeUnit.MINUTES);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stuNum</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 实现登录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@CrossOrigin</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;stuNum&quot;)</span> String stuNum,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;password&quot;)</span> String password</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">this</span>.userService.queryUserByUserNameAndPassword(stuNum, password);</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(users)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>service</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.huangl.project.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.huangl.project.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.huangl.project.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 实现用户注册</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userMapper.saveUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryAllByStuNum</span><span class="params">(Integer stuNum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.queryAllByStuNum(stuNum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stuNum</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * 实现登录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  List&lt;User&gt; <span class="title">queryUserByUserNameAndPassword</span><span class="params">(String stuNum, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.queryUserByUserNameAndPassword(stuNum,password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>mapper</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.huangl.project.mapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.huangl.project.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert(&quot;INSERT into `USER` VALUES(#&#123;id&#125;,#&#123;userName&#125;,#&#123;phone&#125;,#&#123;pass&#125;,#&#123;stuNum&#125;,#&#123;sex&#125;,#&#123;school&#125;,#&#123;area&#125;,#&#123;stuPic&#125;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where stuNum like #&#123;stuNum&#125;&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryAllByStuNum</span><span class="params">(Integer stuNum)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where stuNum like #&#123;stuNum&#125; and pass like #&#123;password&#125;&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryUserByUserNameAndPassword</span><span class="params">(String stuNum, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7.5安装Mysql8，并本地连接</title>
      <link href="2021/03/10/centos7-5-an-zhuang-mysql8-bing-ben-di-lian-jie/"/>
      <url>2021/03/10/centos7-5-an-zhuang-mysql8-bing-ben-di-lian-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="安装centos7-5"><a href="#安装centos7-5" class="headerlink" title="安装centos7.5"></a>安装centos7.5</h1><h1 id="安装MySQL8-0"><a href="#安装MySQL8-0" class="headerlink" title="安装MySQL8.0"></a>安装MySQL8.0</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.下载并添加存储库</span></span><br><span class="line">sudo yum localinstall https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm</span><br><span class="line">（如果是在centos8中安装</span><br><span class="line">sudo yum localinstall https://dev.mysql.com/get/mysql80-community-release-el8-1.noarch.rpm</span><br><span class="line">）</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 安装MySQL8.0包</span></span><br><span class="line">（如果是在centos8中安装先执行`yum module disable mysql`）</span><br><span class="line">yum install mysql-community-server</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 重载所有修改过的配置文件</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4.开启服务</span></span><br><span class="line">systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 5.开机自启</span></span><br><span class="line">systemctl enable mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 6.获取初始密码</span></span><br><span class="line">grep &#x27;password&#x27; /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 7.登录mysql</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 8.设置密码强度为低级</span></span><br><span class="line">set global validate_password.policy=0;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 9.设置密码长度</span></span><br><span class="line">set global validate_password.length=4;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10.修改本地密码</span></span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 11.退出并用新密码登录</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 12.创建用户</span></span><br><span class="line">create user &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 13.允许远程连接</span></span><br><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; with grant option;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 14.刷新权限</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h1 id="本地连接虚拟机中的MySQL8-0"><a href="#本地连接虚拟机中的MySQL8-0" class="headerlink" title="本地连接虚拟机中的MySQL8.0"></a>本地连接虚拟机中的MySQL8.0</h1><blockquote><p>如果配置到上面直接navicate连接的话会报错，因为8.0和5.x的密码策略不同</p></blockquote><p><img src="centos7-5%E5%AE%89%E8%A3%85Mysql8%EF%BC%8C%E5%B9%B6%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5/image-20210310170043956.png" alt="image-20210310170043956"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上网搜索解决方案，网上说出现这种情况的原因是：mysql8 之前的版本中加密规则是mysql_native_password,而在mysql8之后,加密规则是caching_sha2_password, </span><br></pre></td></tr></table></figure><p>8.0解决方法</p><ol><li>更新navicate驱动；</li><li>修改mysql密码策略；</li></ol><p>法二解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">1.登录mysql</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">2.</span></span><br><span class="line">use mysql;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">3.修改加密规则</span></span><br><span class="line">alter user &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27; password expire never;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">4.更新用户密码</span></span><br><span class="line">alter user &#x27;root&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">5.刷新权限</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>此时连接就是没有问题了</p><h1 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h1><blockquote><p> 由于端口3306默认未开放，方法关闭防火墙，或者是开放3306端口</p></blockquote><p>由于安全考虑，选择开放3306端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看防火墙状态</span></span><br><span class="line">firewall-cmd --state</span><br><span class="line">或  systemctl status firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">若防火墙关闭则开启</span></span><br><span class="line">systemctl start firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">开启3306端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line"><span class="meta">#</span><span class="bash">--zone=public：表示作用域为公共</span></span><br><span class="line"><span class="meta">#</span><span class="bash">--add-port=3306/tcp：添加tcp协议的端口3306</span></span><br><span class="line"><span class="meta">#</span><span class="bash">--permanent：永久生效，若无此参数配置重启后失效</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">重启防火墙</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line">或systemctl restart firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">移除端口</span></span><br><span class="line">firewall-cmd -permanent --remove-port=3306/tcp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看端口是否开放</span></span><br><span class="line">firewall-cmd --query-port=3306/tcp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos7.5 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vesper脚手架搭建</title>
      <link href="2021/02/25/vesper-jiao-shou-jia-da-jian/"/>
      <url>2021/02/25/vesper-jiao-shou-jia-da-jian/</url>
      
        <content type="html"><![CDATA[<p><strong>Vesper脚手架搭建</strong></p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h2 id="创建项目com-vesper-base"><a href="#创建项目com-vesper-base" class="headerlink" title="创建项目com.vesper.base"></a>创建项目com.vesper.base</h2><h2 id="添加相关依赖"><a href="#添加相关依赖" class="headerlink" title="添加相关依赖"></a>添加相关依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.vesper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>base<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-oauth2-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置SMTP邮箱--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置redis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        alibaba连接--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        pagehelper所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置MybatisPlus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.75<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        Mybatis-Plus代码自动生成所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="覆盖相关配置"><a href="#覆盖相关配置" class="headerlink" title="覆盖相关配置"></a>覆盖相关配置</h2><blockquote><p>在这里application.properties中配置公共项</p><p>在application-dev.properties中配置测试环境下的配置项</p><p>在application-dev.properties中配置生产环境下</p><p>! 通过spring.profiles.active=dev  来使用测试环境的配置项</p></blockquote><p>①application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动端口配置</span></span><br><span class="line"><span class="meta">server.port</span>=<span class="string">2006</span></span><br><span class="line"><span class="comment"># session的失效时间</span></span><br><span class="line"><span class="meta">server.servlet.session.timeout</span>=<span class="string">1800</span></span><br><span class="line"><span class="comment"># 日期格式化</span></span><br><span class="line"><span class="meta">spring.jackson.date-format</span>=<span class="string">yyyy-MM-dd HH:mm:ss</span></span><br><span class="line"><span class="meta">spring.jackson.time-zone</span>=<span class="string">GMT+8</span></span><br><span class="line"><span class="comment"># 定义加载的配置文件</span></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pagehelper配置</span></span><br><span class="line"><span class="comment">## 指定分页插件使用何种语言,不指定则自动识别</span></span><br><span class="line"><span class="meta">pagehelper.helper-dialect</span>=<span class="string">mysql</span></span><br><span class="line"><span class="comment">## 分页合理化参数,设为true,则当pageNum&lt;0时,会查询第一页</span></span><br><span class="line"><span class="meta">pagehelper.reasonable</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 支持通过Mapper接口参数来传递分页参数</span></span><br><span class="line"><span class="meta">pagehelper.support-methods-arguments</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 用于从对象中工具属性名取值</span></span><br><span class="line"><span class="meta">pagehelper.params</span>=<span class="string">count=countSql</span></span><br></pre></td></tr></table></figure><p> ②application-dev.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置SMTP服务</span></span><br><span class="line"><span class="meta">spring.mail.default-encoding</span>=<span class="string">utf-8</span></span><br><span class="line"><span class="meta">spring.mail.host</span>=<span class="string">smtp.qq.com</span></span><br><span class="line"><span class="meta">spring.mail.protocol</span>=<span class="string">smtp</span></span><br><span class="line"><span class="comment">## 发送端的用户名邮箱</span></span><br><span class="line"><span class="meta">spring.mail.username</span>=<span class="string">wehbmu@qq.com</span></span><br><span class="line"><span class="comment">## 发送端的密码</span></span><br><span class="line"><span class="meta">spring.mail.password</span>=<span class="string">zdqcvphkicqlbcgh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置redis</span></span><br><span class="line"><span class="comment">## 连接工厂使用的数据库索引</span></span><br><span class="line"><span class="meta">spring.redis.database</span>=<span class="string">0</span></span><br><span class="line"><span class="comment">## redis服务器主机</span></span><br><span class="line"><span class="meta">spring.redis.host</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="comment">## redis服务器登录密码</span></span><br><span class="line"><span class="meta">spring.redis.password</span>=<span class="string"></span></span><br><span class="line"><span class="comment">## 池中空闲连接的最大数量,使用负值表示无限数量的空闲连接</span></span><br><span class="line"><span class="meta">spring.redis.jedis.pool.max-idle</span>=<span class="string">9</span></span><br><span class="line"><span class="comment">## 在池消耗时,在抛出异常前连接分配应阻塞的最长时间.使用负值无限期阻止</span></span><br><span class="line"><span class="meta">spring.redis.jedis.pool.max-wait</span>=<span class="string">-1</span></span><br><span class="line"><span class="comment">## 目标时池中维护的最小空闲连接数.只在为正时生效</span></span><br><span class="line"><span class="meta">spring.redis.jedis.pool.min-idle</span>=<span class="string">0</span></span><br><span class="line"><span class="comment">## 连接超时</span></span><br><span class="line"><span class="meta">spring.redis.timeout</span>=<span class="string">5000</span></span><br><span class="line"><span class="comment">## Redis服务器端口</span></span><br><span class="line"><span class="meta">spring.redis.port</span>=<span class="string">6379</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库连接配置</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/db_boot_base?serverTimezone=GMT%2b8&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="comment">## 在连接归还到连接池时是否测试该连接</span></span><br><span class="line"><span class="meta">spring.datasource.test-on-return</span>=<span class="string">false</span></span><br><span class="line"><span class="comment">## 获取连接时验证,影响性能</span></span><br><span class="line"><span class="meta">spring.datasource.test-on-borrow</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">spring.datasource.validation-query</span>=<span class="string">SELECT 1 FROM DUAL</span></span><br><span class="line"><span class="comment">## 空闲连接回收的时间间隔,与test-while-idle一起使用,设置5min</span></span><br><span class="line"><span class="meta">spring.datasource.time-between-eviction-runs-millis</span>=<span class="string">300000</span></span><br><span class="line"><span class="meta">spring.datasource.test-while-idle</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 连接池空闲连接的有效时间,设置30min</span></span><br><span class="line"><span class="meta">spring.datasource.min-evictable-idle-time-millis</span>=<span class="string">1800000</span></span><br><span class="line"><span class="meta">spring.datasource.initial-size</span>=<span class="string">5</span></span><br><span class="line"><span class="comment">## 指定连接池中最大的活跃连接数</span></span><br><span class="line"><span class="meta">spring.datasource.max-active</span>=<span class="string">50</span></span><br><span class="line"><span class="comment">## 指定连接池等待连接返回的最大等待时间,毫秒时间</span></span><br><span class="line"><span class="meta">spring.datasource.max-wait</span>=<span class="string">60000</span></span><br><span class="line"><span class="comment">## 指定必须保持连接的最小值</span></span><br><span class="line"><span class="meta">spring.datasource.min-idle</span>=<span class="string">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Mybatis-Plus</span></span><br><span class="line"><span class="comment">## 将带有下划线的表字段映射未驼峰格式的实体类属性</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.map-underscore-to-camel-case</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 自动映射策略,指定Mybatis是否且如何来自动映射数据库字段与对象的属性</span></span><br><span class="line"><span class="comment">### full 对所有的resultMap都进行自动映射</span></span><br><span class="line"><span class="comment">### partial 支队非嵌套的resultMap进行自动映射</span></span><br><span class="line"><span class="comment">### none 不启用自动映射</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.auto-mapping-behavior</span>=<span class="string">full</span></span><br><span class="line"><span class="comment">## 配置控制台打印完整带参数的SQL语句</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"><span class="comment">## 可以配置多个mapper.xml路径,逗号分隔</span></span><br><span class="line"><span class="meta">mybatis-plus.mapper-locations</span>=<span class="string">classpath:mapper/*Mapper.xml</span></span><br><span class="line"><span class="comment">## 逻辑删除配置 删除前</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.logic-not-delete-value</span>=<span class="string">1</span></span><br><span class="line"><span class="comment">## 逻辑删除配置 删除后</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.logic-delete-value</span>=<span class="string">0</span></span><br><span class="line"><span class="comment">## 驼峰命名</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.table-underline</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 设置实体扫描类,多个package用逗号或分号分隔</span></span><br><span class="line"><span class="meta">mybatis-plus.type-aliases-package</span>=<span class="string">com.vesper.base.entity</span></span><br><span class="line"><span class="comment">## 数据库相关配置</span></span><br><span class="line"><span class="comment">### 主键类型 AUTO数据库自增 INPUT用户输入ID  ID_WORKER全局唯一ID(数字) UUID全局唯一ID(UUID)</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.id-type</span>=<span class="string">input</span></span><br><span class="line"><span class="comment">### 字段策略 ignore忽略判断  not_null非null判断    not_empty非空判断</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.select-strategy</span>=<span class="string">not_null</span></span><br><span class="line"><span class="comment">## 驼峰下划线转换</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.column-underline</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.banner</span>=<span class="string">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 热部署生效</span></span><br><span class="line"><span class="meta">spring.devtools.restart.enabled</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片上传设置</span></span><br><span class="line"><span class="meta">vesper.upload.photo.sufix</span>=<span class="string">.jpg,.png,.gif,.jpeg</span></span><br><span class="line"><span class="meta">vesper.upload.photo.maxsize</span>=<span class="string">1024</span></span><br><span class="line"><span class="meta">vesper.upload.photo.path</span>=<span class="string">E:/IntellijTry/vesper/base/src/main/resources/upload</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库备份设置</span></span><br><span class="line"><span class="meta">vesper.database.backup.dir</span>=<span class="string">E:/IntellijTry/vesper/base/src/main/resources/backup</span></span><br><span class="line"><span class="meta">vesper.database.backup.username</span>=<span class="string">vesper</span></span><br><span class="line"><span class="meta">vesper.database.backup.password</span>=<span class="string">vesper</span></span><br><span class="line"><span class="meta">vesper.database.backup.database.name</span>=<span class="string">db_boot_base</span></span><br></pre></td></tr></table></figure><h2 id="启动热部署"><a href="#启动热部署" class="headerlink" title="启动热部署"></a>启动热部署</h2><ol><li><p>所需依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>勾选</p><p><img src="Vesper%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/image-20210225103448233.png" alt="image-20210225103448233"></p></li><li><p><code>ctrl+shift+alt+/</code>点击registry</p><p><img src="Vesper%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/image-20210225103645582.png" alt="image-20210225103645582"></p></li><li><p>勾选如下</p><p><img src="Vesper%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/image-20210225103715652.png" alt="image-20210225103715652"></p><p>5.配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 热部署配置</span></span><br><span class="line"><span class="comment">## 关闭缓存即时刷新</span></span><br><span class="line"><span class="meta">spring.thymeleaf.cache</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">## 热部署生效</span></span><br><span class="line"><span class="meta">spring.devtools.restart.enabled</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="自定义site-properties配置网站基础信息"><a href="#自定义site-properties配置网站基础信息" class="headerlink" title="自定义site.properties配置网站基础信息"></a>自定义site.properties配置网站基础信息</h2><p>​    1. site.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#网站基础信息配置</span></span><br><span class="line"><span class="meta">wehbmu.site.name</span>=<span class="string">Vesper\u811a\u624b\u67b6</span></span><br><span class="line"><span class="meta">wehbmu.site.url</span>=<span class="string">https://wehbmu.com</span></span><br></pre></td></tr></table></figure><p>2.新建SiteConfig网站基础配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这是网站基础配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> *Component:把普通的pojo实例化到spring容器中,相当于配置文件中的&lt;bean id=&quot;&quot; class=&quot;&quot; /&gt;</span></span><br><span class="line"><span class="comment"> * PropertySource:加载指定配置文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@PropertySource(value = &quot;classpath:site.properties&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SiteConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;wehbmu.site.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String siteName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;wehbmu.site.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String siteUrl;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSiteName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> siteName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSiteName</span><span class="params">(String siteName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.siteName = siteName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSiteUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> siteUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSiteUrl</span><span class="params">(String siteUrl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.siteUrl = siteUrl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>简单使用一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/vesper/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SiteConfig siteConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用springboot自带的日志</span></span><br><span class="line">    <span class="keyword">private</span> Logger log = LoggerFactory.getLogger(UserController.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String webName = siteConfig.getSiteName();</span><br><span class="line">        <span class="comment">//打印日志</span></span><br><span class="line">        log.info(<span class="string">&quot;webName=&quot;</span>+webName);</span><br><span class="line">        <span class="comment">//打印日志warn</span></span><br><span class="line">        log.warn();</span><br><span class="line">        String wn = <span class="keyword">this</span>.siteConfig.getSiteName()+<span class="string">&quot;23333&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> wn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置MybatisPlus自动生成代码"><a href="#配置MybatisPlus自动生成代码" class="headerlink" title="配置MybatisPlus自动生成代码"></a>配置MybatisPlus自动生成代码</h2><ol><li>依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在启动器同级建立<code>MysqlGenerator</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> * Mybatis-Plus代码自动生成器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MysqlGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 读取控制台内容</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">scanner</span><span class="params">(String tip)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        StringBuilder help = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        help.append(<span class="string">&quot;请输入&quot;</span> + tip + <span class="string">&quot;：&quot;</span>);</span><br><span class="line">        System.out.println(help.toString());</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext()) &#123;</span><br><span class="line">            String ipt = scanner.next();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotBlank(ipt)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ipt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MybatisPlusException(<span class="string">&quot;请输入正确的&quot;</span> + tip + <span class="string">&quot;！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        gc.setOutputDir(projectPath + <span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;jobob&quot;</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// gc.setSwagger2(true); 实体属性 Swagger2 注解</span></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/db_boot_base?serverTimezone=GMT%2b8&amp;useUnicode=true&amp;characterEncoding=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">// dsc.setSchemaName(&quot;public&quot;);</span></span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setModuleName(scanner(<span class="string">&quot;模块名&quot;</span>));</span><br><span class="line">        pc.setParent(<span class="string">&quot;com.vesper.base&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义配置</span></span><br><span class="line">        InjectionConfig cfg = <span class="keyword">new</span> InjectionConfig() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// to do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果模板引擎是 freemarker</span></span><br><span class="line">        String templatePath = <span class="string">&quot;/templates/mapper.xml.ftl&quot;</span>;</span><br><span class="line">        <span class="comment">// 如果模板引擎是 velocity</span></span><br><span class="line">        <span class="comment">// String templatePath = &quot;/templates/mapper.xml.vm&quot;;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义输出配置</span></span><br><span class="line">        List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！</span></span><br><span class="line">                <span class="keyword">return</span> projectPath + <span class="string">&quot;/src/main/resources/mapper/&quot;</span> + pc.getModuleName()</span><br><span class="line">                        + <span class="string">&quot;/&quot;</span> + tableInfo.getEntityName() + <span class="string">&quot;Mapper&quot;</span> + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        cfg.setFileCreate(new IFileCreate() &#123;</span></span><br><span class="line"><span class="comment">            @Override</span></span><br><span class="line"><span class="comment">            public boolean isCreate(ConfigBuilder configBuilder, FileType fileType, String filePath) &#123;</span></span><br><span class="line"><span class="comment">                // 判断自定义文件夹是否需要创建</span></span><br><span class="line"><span class="comment">                checkDir(&quot;调用默认方法创建的目录，自定义目录用&quot;);</span></span><br><span class="line"><span class="comment">                if (fileType == FileType.MAPPER) &#123;</span></span><br><span class="line"><span class="comment">                    // 已经生成 mapper 文件判断存在，不想重新生成返回 false</span></span><br><span class="line"><span class="comment">                    return !new File(filePath).exists();</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                // 允许生成模板文件</span></span><br><span class="line"><span class="comment">                return true;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line">        mpg.setCfg(cfg);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置模板</span></span><br><span class="line">        TemplateConfig templateConfig = <span class="keyword">new</span> TemplateConfig();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置自定义输出模板</span></span><br><span class="line">        <span class="comment">//指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别</span></span><br><span class="line">        <span class="comment">// templateConfig.setEntity(&quot;templates/entity2.java&quot;);</span></span><br><span class="line">        <span class="comment">// templateConfig.setService();</span></span><br><span class="line">        <span class="comment">// templateConfig.setController();</span></span><br><span class="line"></span><br><span class="line">        templateConfig.setXml(<span class="keyword">null</span>);</span><br><span class="line">        mpg.setTemplate(templateConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setSuperEntityClass(<span class="string">&quot;你自己的父类实体,没有就不用设置!&quot;</span>);</span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 公共父类</span></span><br><span class="line">        strategy.setSuperControllerClass(<span class="string">&quot;你自己的父类控制器,没有就不用设置!&quot;</span>);</span><br><span class="line">        <span class="comment">// 写于父类中的公共字段</span></span><br><span class="line">        strategy.setSuperEntityColumns(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        strategy.setInclude(scanner(<span class="string">&quot;表名，多个英文逗号分割&quot;</span>).split(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">&quot;_&quot;</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line">        mpg.setTemplateEngine(<span class="keyword">new</span> FreemarkerTemplateEngine());</span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>运行<code>MysqlGenerator</code>即可</li></ol><h2 id="解决跨域问题CorsFilter"><a href="#解决跨域问题CorsFilter" class="headerlink" title="解决跨域问题CorsFilter"></a>解决跨域问题CorsFilter</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解决跨域问题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@WebFilter(urlPatterns = &quot;/*&quot;)</span></span><br><span class="line"><span class="meta">@Order(-99999)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsFilter</span> <span class="keyword">extends</span> <span class="title">HttpFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">2386571986045107652L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String OPTIONS_METHOD = <span class="string">&quot;OPTIONS&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(HttpServletRequest req, HttpServletResponse res, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String origin = req.getHeader(HttpHeaders.ORIGIN);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(origin)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端的域</span></span><br><span class="line">            res.addHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, origin);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端提交的Header</span></span><br><span class="line">            String requestHeaders = req.getHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS);</span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(requestHeaders)) &#123;</span><br><span class="line">                res.addHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, requestHeaders);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端访问的Header</span></span><br><span class="line">            res.addHeader(HttpHeaders.ACCESS_CONTROL_EXPOSE_HEADERS, <span class="string">&quot;Cache-Control, Content-Language, Content-Type, Expires, Last-Modified, Pragma&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端携带凭证信息</span></span><br><span class="line">            res.addHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 允许客户端请求方法</span></span><br><span class="line">            res.addHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, <span class="string">&quot;GET, POST, PUT, OPTIONS, DELETE&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (OPTIONS_METHOD.equalsIgnoreCase(req.getMethod())) &#123;</span><br><span class="line">                res.setStatus(HttpServletResponse.SC_NO_CONTENT);</span><br><span class="line">                res.setContentType(MediaType.TEXT_HTML_VALUE);</span><br><span class="line">                res.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                res.setContentLength(<span class="number">0</span>);</span><br><span class="line">                res.addHeader(HttpHeaders.ACCESS_CONTROL_MAX_AGE, <span class="string">&quot;1800&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.doFilter(req, res, chain);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mybatis-Plus实现Id-amp-时间自动填充"><a href="#Mybatis-Plus实现Id-amp-时间自动填充" class="headerlink" title="Mybatis-Plus实现Id&amp;时间自动填充"></a>Mybatis-Plus实现Id&amp;时间自动填充</h2><blockquote><p>每个实体一般都有createTime和updateTime</p></blockquote><ol><li>在相关实体类中添加<code>@TableField</code>注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> * 基础实体公共属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseEntity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在insert操作时,自动创建id</span></span><br><span class="line"><span class="comment">     * 在handler&gt;MyMetaObjectHandler中具体实现</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自增策略,当产生update和create操作时,自动复制updateTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br></pre></td></tr></table></figure><ol start="2"><li>在handler文件夹下创建接口<code>MyMetaObjectHandler</code>具体实现<strong>自动填充的值</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> * 实现createTime,updateTime自增的实现接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;start insert field......&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;createTime&quot;</span>, LocalDateTime.now(),metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,LocalDateTime.now(),metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;id&quot;</span>, UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,LocalDateTime.now(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>此时每次在写入是,id,createTime,updateTime自动填充</li><li>每次修改是,updateTime自动填充</li></ul><h2 id="自定义错误码统一处理类"><a href="#自定义错误码统一处理类" class="headerlink" title="自定义错误码统一处理类"></a>自定义错误码统一处理类</h2><blockquote><p>bean&gt;CodeMsg</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 错误码统一处理类，所有的错误码统一定义在这里</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeMsg</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;<span class="comment">//错误码</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;<span class="comment">//错误信息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造函数私有化即单例模式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">CodeMsg</span><span class="params">(<span class="keyword">int</span> code,String msg)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通用错误码定义</span></span><br><span class="line">    <span class="comment">//处理成功消息码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg SUCCESS = <span class="keyword">new</span> CodeMsg(<span class="number">0</span>, <span class="string">&quot;success&quot;</span>);</span><br><span class="line">    <span class="comment">//非法数据错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg DATA_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">1</span>, <span class="string">&quot;非法数据！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg CPACHA_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">2</span>, <span class="string">&quot;验证码不能为空！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg VALIDATE_ENTITY_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">3</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg SESSION_EXPIRED = <span class="keyword">new</span> CodeMsg(-<span class="number">4</span>, <span class="string">&quot;会话已失效，请刷新页面重试！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg CPACHA_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">5</span>, <span class="string">&quot;验证码错误！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg USER_SESSION_EXPIRED = <span class="keyword">new</span> CodeMsg(-<span class="number">6</span>, <span class="string">&quot;还未登录或会话失效，请重新登录！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg UPLOAD_PHOTO_SUFFIX_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">7</span>, <span class="string">&quot;图片格式不正确！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg UPLOAD_PHOTO_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">8</span>, <span class="string">&quot;图片上传错误！&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台管理类错误码</span></span><br><span class="line">    <span class="comment">//用户管理类错误</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USERNAME_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">2000</span>, <span class="string">&quot;用户名不能为空！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_PASSWORD_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">2001</span>, <span class="string">&quot;密码不能为空！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_NO_RIGHT = <span class="keyword">new</span> CodeMsg(-<span class="number">2002</span>, <span class="string">&quot;您所属的角色没有该权限！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//登录类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USERNAME_NO_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">3000</span>, <span class="string">&quot;该用户名不存在！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_PASSWORD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">3001</span>, <span class="string">&quot;密码错误！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_UNABLE = <span class="keyword">new</span> CodeMsg(-<span class="number">3002</span>, <span class="string">&quot;该用户已被冻结，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_ROLE_UNABLE = <span class="keyword">new</span> CodeMsg(-<span class="number">3003</span>, <span class="string">&quot;该用户所属角色状态不可用，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_ROLE_AUTHORITES_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">3004</span>, <span class="string">&quot;该用户所属角色无可用权限，请联系管理员！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台菜单管理类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_ADD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">4000</span>, <span class="string">&quot;菜单添加失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_EDIT_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">4001</span>, <span class="string">&quot;菜单编辑失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_ID_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">4002</span>, <span class="string">&quot;菜单ID不能为空！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_ID_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">4003</span>, <span class="string">&quot;菜单ID错误！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_MENU_DELETE_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">4004</span>, <span class="string">&quot;改菜单下有子菜单，不允许删除！&quot;</span>);</span><br><span class="line">    <span class="comment">//后台角色管理类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_ROLE_ADD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">5000</span>, <span class="string">&quot;角色添加失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_ROLE_NO_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">5001</span>, <span class="string">&quot;该角色不存在！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_ROLE_EDIT_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">5002</span>, <span class="string">&quot;角色编辑失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_ROLE_DELETE_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">5003</span>, <span class="string">&quot;该角色下存在用户信息，不可删除！&quot;</span>);</span><br><span class="line">    <span class="comment">//后台用户管理类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_ROLE_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">6000</span>, <span class="string">&quot;请选择用户所属角色！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USERNAME_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">6001</span>, <span class="string">&quot;该用户名已存在，请换一个试试！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USE_ADD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">6002</span>, <span class="string">&quot;用户添加失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USE_NO_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">6003</span>, <span class="string">&quot;用户不存在！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USE_EDIT_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">6004</span>, <span class="string">&quot;用户编辑失败，请联系管理员！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USE_DELETE_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">6005</span>, <span class="string">&quot;该用户存在关联数据，不允许删除！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台用户修改密码类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_UPDATE_PWD_ERROR = <span class="keyword">new</span> CodeMsg(-<span class="number">7000</span>, <span class="string">&quot;旧密码错误！&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_USER_UPDATE_PWD_EMPTY = <span class="keyword">new</span> CodeMsg(-<span class="number">7001</span>, <span class="string">&quot;新密码不能为空！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台用户修改密码类错误码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeMsg ADMIN_DATABASE_BACKUP_NO_EXIST = <span class="keyword">new</span> CodeMsg(-<span class="number">8000</span>, <span class="string">&quot;备份记录不存在！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证码生成类"><a href="#验证码生成类" class="headerlink" title="验证码生成类"></a>验证码生成类</h2><ol><li><p>CaptchaUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证码生成器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> llq</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码来源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">private</span> <span class="keyword">char</span>[] code = &#123;</span><br><span class="line">            <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">private</span> String[] fontNames = <span class="keyword">new</span> String[]&#123;</span><br><span class="line">            <span class="string">&quot;黑体&quot;</span>, <span class="string">&quot;宋体&quot;</span>, <span class="string">&quot;Courier&quot;</span>, <span class="string">&quot;Arial&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Verdana&quot;</span>, <span class="string">&quot;Times&quot;</span>, <span class="string">&quot;Tahoma&quot;</span>, <span class="string">&quot;Georgia&quot;</span>&#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字体样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">private</span> <span class="keyword">int</span>[] fontStyles = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;</span><br><span class="line">            Font.BOLD, Font.ITALIC|Font.BOLD</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码长度</span></span><br><span class="line"><span class="comment">     * 默认4个字符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> vcodeLen = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码图片字体大小</span></span><br><span class="line"><span class="comment">     * 默认17</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> fontsize = <span class="number">21</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码图片宽度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> width = (fontsize+<span class="number">1</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码图片高度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> height = fontsize+<span class="number">12</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 干扰线条数</span></span><br><span class="line"><span class="comment">     * 默认3条</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> disturbline = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CaptchaUtil</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定验证码长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcodeLen 验证码长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CaptchaUtil</span><span class="params">(<span class="keyword">int</span> vcodeLen)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.vcodeLen = vcodeLen;</span><br><span class="line">        <span class="keyword">this</span>.width = (fontsize+<span class="number">1</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CaptchaUtil</span><span class="params">(<span class="keyword">int</span> vcodeLen,<span class="keyword">int</span> fontSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.vcodeLen = vcodeLen;</span><br><span class="line">        <span class="keyword">this</span>.fontsize = fontSize;</span><br><span class="line">        <span class="keyword">this</span>.width = (fontsize+<span class="number">1</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">        height = fontsize+<span class="number">12</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CaptchaUtil</span><span class="params">(<span class="keyword">int</span> vcodeLen,<span class="keyword">int</span> fontSize,<span class="keyword">int</span> width,<span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.vcodeLen = vcodeLen;</span><br><span class="line">        <span class="keyword">this</span>.fontsize = fontSize;</span><br><span class="line">        <span class="keyword">this</span>.width = width;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成验证码图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcode 要画的验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> drawline 是否画干扰线</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">generatorVCodeImage</span><span class="params">(String vcode, <span class="keyword">boolean</span> drawline)</span></span>&#123;</span><br><span class="line">        <span class="comment">//创建验证码图片</span></span><br><span class="line">        BufferedImage vcodeImage = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        Graphics g = vcodeImage.getGraphics();</span><br><span class="line">        <span class="comment">//填充背景色</span></span><br><span class="line">        g.setColor(<span class="keyword">new</span> Color(<span class="number">246</span>, <span class="number">240</span>, <span class="number">250</span>));</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="keyword">if</span>(drawline)&#123;</span><br><span class="line">            drawDisturbLine(g);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用于生成伪随机数</span></span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="comment">//在图片上画验证码</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; vcode.length();i++)&#123;</span><br><span class="line">            <span class="comment">//设置字体</span></span><br><span class="line">            g.setFont(<span class="keyword">new</span> Font(fontNames[ran.nextInt(fontNames.length)], fontStyles[ran.nextInt(fontStyles.length)], fontsize));</span><br><span class="line">            <span class="comment">//随机生成颜色</span></span><br><span class="line">            g.setColor(getRandomColor());</span><br><span class="line">            <span class="comment">//画验证码</span></span><br><span class="line">            g.drawString(vcode.charAt(i)+<span class="string">&quot;&quot;</span>, i*fontsize+<span class="number">10</span>, fontsize+<span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放此图形的上下文以及它使用的所有系统资源</span></span><br><span class="line">        g.dispose();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> vcodeImage;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得旋转字体的验证码图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> drawline 是否画干扰线</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">generatorRotateVCodeImage</span><span class="params">(String vcode, <span class="keyword">boolean</span> drawline)</span></span>&#123;</span><br><span class="line">        <span class="comment">//创建验证码图片</span></span><br><span class="line">        BufferedImage rotateVcodeImage = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        Graphics2D g2d = rotateVcodeImage.createGraphics();</span><br><span class="line">        <span class="comment">//填充背景色</span></span><br><span class="line">        g2d.setColor(<span class="keyword">new</span> Color(<span class="number">246</span>, <span class="number">240</span>, <span class="number">250</span>));</span><br><span class="line">        g2d.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="keyword">if</span>(drawline)&#123;</span><br><span class="line">            drawDisturbLine(g2d);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//在图片上画验证码</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; vcode.length();i++)&#123;</span><br><span class="line">            BufferedImage rotateImage = getRotateImage(vcode.charAt(i));</span><br><span class="line">            g2d.drawImage(rotateImage, <span class="keyword">null</span>, (<span class="keyword">int</span>) (<span class="keyword">this</span>.height * <span class="number">0.7</span>) * i, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        g2d.dispose();</span><br><span class="line">        <span class="keyword">return</span> rotateVcodeImage;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">generatorVCode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len = code.length;</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; vcodeLen;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> index = ran.nextInt(len);</span><br><span class="line">            sb.append(code[index]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为验证码图片画一些干扰线</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> g</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawDisturbLine</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; disturbline;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> y1 = ran.nextInt(height);</span><br><span class="line">            <span class="keyword">int</span> x2 = ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> y2 = ran.nextInt(height);</span><br><span class="line">            g.setColor(getRandomColor());</span><br><span class="line">            <span class="comment">//画干扰线</span></span><br><span class="line">            g.drawLine(x1, y1, x2, y2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取一张旋转的图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> c 要画的字符</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> BufferedImage <span class="title">getRotateImage</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">        BufferedImage rotateImage = <span class="keyword">new</span> BufferedImage(height, height, BufferedImage.TYPE_INT_ARGB);</span><br><span class="line">        Graphics2D g2d = rotateImage.createGraphics();</span><br><span class="line">        <span class="comment">//设置透明度为0</span></span><br><span class="line">        g2d.setColor(<span class="keyword">new</span> Color(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        g2d.fillRect(<span class="number">0</span>, <span class="number">0</span>, height, height);</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        g2d.setFont(<span class="keyword">new</span> Font(fontNames[ran.nextInt(fontNames.length)], fontStyles[ran.nextInt(fontStyles.length)], fontsize));</span><br><span class="line">        g2d.setColor(getRandomColor());</span><br><span class="line">        <span class="keyword">double</span> theta = getTheta();</span><br><span class="line">        <span class="comment">//旋转图片</span></span><br><span class="line">        g2d.rotate(theta, height/<span class="number">2</span>, height/<span class="number">2</span>);</span><br><span class="line">        g2d.drawString(Character.toString(c), (height-fontsize)/<span class="number">2</span>, fontsize+<span class="number">5</span>);</span><br><span class="line">        g2d.dispose();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> rotateImage;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回一个随机颜色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Color <span class="title">getRandomColor</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(ran.nextInt(<span class="number">220</span>), ran.nextInt(<span class="number">220</span>), ran.nextInt(<span class="number">220</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 角度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">double</span> <span class="title">getTheta</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ((<span class="keyword">int</span>) (Math.random()*<span class="number">1000</span>) % <span class="number">2</span> == <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>)*Math.random();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 验证码字符个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getVcodeLen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> vcodeLen;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置验证码字符个数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcodeLen</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVcodeLen</span><span class="params">(<span class="keyword">int</span> vcodeLen)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = (fontsize+<span class="number">3</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">this</span>.vcodeLen = vcodeLen;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 字体大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getFontsize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fontsize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置字体大小</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fontsize</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFontsize</span><span class="params">(<span class="keyword">int</span> fontsize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = (fontsize+<span class="number">3</span>)*vcodeLen+<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">this</span>.height = fontsize+<span class="number">15</span>;</span><br><span class="line">        <span class="keyword">this</span>.fontsize = fontsize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 图片宽度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWidth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置图片宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWidth</span><span class="params">(<span class="keyword">int</span> width)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 图片高度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置图片高度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span><span class="params">(<span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 干扰线条数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDisturbline</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> disturbline;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置干扰线条数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> disturbline</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDisturbline</span><span class="params">(<span class="keyword">int</span> disturbline)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.disturbline = disturbline;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>CaptchaController</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 系统验证码公用控制器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/cpacha&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger log = LoggerFactory.getLogger(CaptchaController.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用验证码生成器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcodeLength</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fontSize</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/generate_captcha&quot;,method=RequestMethod.GET)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generateCpacha</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;vl&quot;,defaultValue=&quot;4&quot;)</span>Integer vcodeLength,//vcodeLength,验证码长度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;fs&quot;,defaultValue=&quot;21&quot;)</span>Integer fontSize,//fontSize,验证码字体大小</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;w&quot;,defaultValue=&quot;98&quot;)</span>Integer width,//width,图片宽度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;h&quot;,defaultValue=&quot;33&quot;)</span>Integer height,//height,图片高度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;method&quot;,defaultValue=&quot;admin_login&quot;)</span>String method,//用来调用此方法的名称，以此名称为键，存入到session中</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        CaptchaUtil captchaUtil = <span class="keyword">new</span> CaptchaUtil(vcodeLength,fontSize,width,height);</span><br><span class="line">        String generatorVCode = captchaUtil.generatorVCode();</span><br><span class="line">        <span class="comment">//将生成的验证码放入session，以供放后面程序的验证使用</span></span><br><span class="line">        request.getSession().setAttribute(method, generatorVCode);</span><br><span class="line">        log.info(<span class="string">&quot;验证码成功生成，method=&quot;</span> + method + <span class="string">&quot;,value=&quot;</span> + generatorVCode);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(captchaUtil.generatorRotateVCodeImage(generatorVCode, <span class="keyword">true</span>), <span class="string">&quot;gif&quot;</span>, response.getOutputStream());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="注意事项吧"><a href="#注意事项吧" class="headerlink" title="注意事项吧"></a>注意事项吧</h1><blockquote><p>将公共实体抽离建立BaseEntity</p><p>由于id,createTime,updateTime每个实体都有,所以可以抽离出来</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> * 基础实体公共属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseEntity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在insert操作时,自动创建id</span></span><br><span class="line"><span class="comment">     * 在handler&gt;MyMetaObjectHandler中具体实现</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自增策略,当产生update和create操作时,自动复制updateTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="实现前端-后端"><a href="#实现前端-后端" class="headerlink" title="实现前端+后端"></a>实现前端+后端</h1><h2 id="公共组件"><a href="#公共组件" class="headerlink" title="公共组件"></a>公共组件</h2><h3 id="Capacha组件"><a href="#Capacha组件" class="headerlink" title="Capacha组件"></a>Capacha组件</h3><blockquote><p>展示验证码,点击刷新</p></blockquote><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a><strong>前端</strong></h4><ol><li>Captcha.vue</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--验证码组件--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;captcha-container&quot;&gt;</span><br><span class="line">    &lt;img id&#x3D;&quot;captchaImg&quot; @click&#x3D;&quot;reloadCaptcha&quot; :src&#x3D;&quot;codeImg&quot;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Captcha.vue&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      codeImg: &#39;http:&#x2F;&#x2F;127.0.0.1:2006&#x2F;captcha&#x2F;generate_captcha&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    reloadCaptcha () &#123;</span><br><span class="line">      this.codeImg &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:2006&#x2F;captcha&#x2F;generate_captcha?&#39; + Math.random()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>main.js使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;MyCaptcha&#x27;</span>, Captcha)</span><br></pre></td></tr></table></figure><ol start="3"><li>页面中使用</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;</span><br><span class="line">  &lt;MyCaptcha&gt;&lt;&#x2F;MyCaptcha&gt;</span><br><span class="line">&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a><strong>后端</strong></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/captcha&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger log = LoggerFactory.getLogger(CaptchaController.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用验证码生成器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vcodeLength</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fontSize</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/generate_captcha&quot;,method=RequestMethod.GET)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generateCpacha</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;vl&quot;,defaultValue=&quot;4&quot;)</span>Integer vcodeLength,//vcodeLength,验证码长度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;fs&quot;,defaultValue=&quot;21&quot;)</span>Integer fontSize,//fontSize,验证码字体大小</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;w&quot;,defaultValue=&quot;98&quot;)</span>Integer width,//width,图片宽度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;h&quot;,defaultValue=&quot;33&quot;)</span>Integer height,//height,图片高度</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(name=&quot;method&quot;,defaultValue=&quot;admin_login&quot;)</span>String method,//用来调用此方法的名称，以此名称为键，存入到session中</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        CaptchaUtil captchaUtil = <span class="keyword">new</span> CaptchaUtil(vcodeLength,fontSize,width,height);</span><br><span class="line">        String generatorVCode = captchaUtil.generatorVCode();</span><br><span class="line">        <span class="comment">//将生成的验证码放入session，以供放后面程序的验证使用</span></span><br><span class="line">        request.getSession().setAttribute(method, generatorVCode);</span><br><span class="line">        log.info(<span class="string">&quot;验证码成功生成，method=&quot;</span> + method + <span class="string">&quot;,value=&quot;</span> + generatorVCode);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(captchaUtil.generatorRotateVCodeImage(generatorVCode, <span class="keyword">true</span>), <span class="string">&quot;gif&quot;</span>, response.getOutputStream());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="背景粒子组件"><a href="#背景粒子组件" class="headerlink" title="背景粒子组件"></a>背景粒子组件</h3><ol><li><p>创建组件StarrySky.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;starrySky-container&quot;&gt;</span><br><span class="line">    &lt;vue-particles</span><br><span class="line">      color&#x3D;&quot;#3a91cf&quot;</span><br><span class="line">      :particleOpacity&#x3D;&quot;0.7&quot;</span><br><span class="line">      :particlesNumber&#x3D;&quot;60&quot;</span><br><span class="line">      shapeType&#x3D;&quot;circle&quot;</span><br><span class="line">      :particleSize&#x3D;&quot;4&quot;</span><br><span class="line">      linesColor&#x3D;&quot;#fa914e&quot;</span><br><span class="line">      :linesWidth&#x3D;&quot;1&quot;</span><br><span class="line">      :lineLinked&#x3D;&quot;true&quot;</span><br><span class="line">      :lineOpacity&#x3D;&quot;0.4&quot;</span><br><span class="line">      :linesDistance&#x3D;&quot;150&quot;</span><br><span class="line">      :moveSpeed&#x3D;&quot;2&quot;</span><br><span class="line">      :hoverEffect&#x3D;&quot;true&quot;</span><br><span class="line">      hoverMode&#x3D;&quot;grab&quot;</span><br><span class="line">      :clickEffect&#x3D;&quot;true&quot;</span><br><span class="line">      clickMode&#x3D;&quot;push&quot;</span><br><span class="line">      class&#x3D;&quot;lizi&quot;</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;&#x2F;vue-particles&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;StarrySky&#39;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">color: String类型。默认&#39;#dedede&#39;。粒子颜色。</span><br><span class="line">particleOpacity: Number类型。默认0.7。粒子透明度。</span><br><span class="line">particlesNumber: Number类型。默认80。粒子数量。</span><br><span class="line">shapeType: String类型。默认&#39;circle&#39;。可用的粒子外观类型有：&quot;circle&quot;,&quot;edge&quot;,&quot;triangle&quot;, &quot;polygon&quot;,&quot;star&quot;。</span><br><span class="line">particleSize: Number类型。默认80。单个粒子大小。</span><br><span class="line">linesColor: String类型。默认&#39;#dedede&#39;。线条颜色。</span><br><span class="line">linesWidth: Number类型。默认1。线条宽度。</span><br><span class="line">lineLinked: 布尔类型。默认true。连接线是否可用。</span><br><span class="line">lineOpacity: Number类型。默认0.4。线条透明度。</span><br><span class="line">linesDistance: Number类型。默认150。线条距离。</span><br><span class="line">moveSpeed: Number类型。默认3。粒子运动速度。</span><br><span class="line">hoverEffect: 布尔类型。默认true。是否有hover特效。</span><br><span class="line">hoverMode: String类型。默认true。可用的hover模式有: &quot;grab&quot;, &quot;repulse&quot;, &quot;bubble&quot;。</span><br><span class="line">clickEffect: 布尔类型。默认true。是否有click特效。</span><br><span class="line">clickMode: String类型。默认true。可用的click模式有: &quot;push&quot;, &quot;remove&quot;, &quot;repulse&quot;, &quot;bubble&quot;。</span><br></pre></td></tr></table></figure></li><li><p>在main.js中注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> StarrySky <span class="keyword">from</span> <span class="string">&#x27;@/components/StarrySky&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">&#x27;MyStarrySky&#x27;</span>, StarrySky)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 脚手架 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Win服务器安装SQL Server与IIS服务及FTP开启</title>
      <link href="2021/02/24/win-fu-wu-qi-an-zhuang-sql-server-yu-iis-fu-wu-ji-ftp-kai-qi/"/>
      <url>2021/02/24/win-fu-wu-qi-an-zhuang-sql-server-yu-iis-fu-wu-ji-ftp-kai-qi/</url>
      
        <content type="html"><![CDATA[<p><strong>Win服务器安装SQL Server与IIS服务及FTP开启</strong></p><h1 id="SQL-server服务卸载-各版本均可"><a href="#SQL-server服务卸载-各版本均可" class="headerlink" title="SQL server服务卸载(各版本均可)"></a>SQL server服务卸载(各版本均可)</h1><blockquote><p> 由于第一次安装失败,所以卸载后重装,步骤记录</p></blockquote><ol><li><p>运行&gt; 输入<code>services.msc</code>,查看所有SQL server服务并停止</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214004.png" alt="image-20210224090708962"></p></li><li><p>在控制面板中查看类别选择,进入程序卸载界面</p></li><li><p>在右上角输入sql server,卸载所有与SQL server相关的程序</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214005.png" alt="image-20210224091003438"></p></li><li><p>删除SQL server相关注册表</p><p><code>win+r</code>输入<code>regedit</code>进入注册表</p><ol><li><p>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager中删除<code>PendingFileRenameOperations</code></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214006.png" alt="image-20210224092809472"></p></li><li><p>删除HKEY_CURRENT_USER\SOFTWARE\Microsoft\下的  SQL server相关</p></li><li><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\下面所有关于SQL server的子项删除</p></li><li><p>删除HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSSQLServer</p></li></ol></li><li><p>删除相关文件夹</p><ol><li>删除安装SQL server的物理路径,包含默认安装路径下所有</li></ol></li><li><p>卸载完成后重启电脑</p></li></ol><h1 id="安装IIS服务"><a href="#安装IIS服务" class="headerlink" title="安装IIS服务"></a>安装IIS服务</h1><blockquote><p>由于安装包较大安装此服务,开启ftp传输</p></blockquote><ol><li><p>服务器管理器中点击添加角色</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214007.png" alt="image-20210224094256588"></p></li><li><p>一直下一步到服务器角色,勾选Web 服务器(IIS)</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214008.png" alt="image-20210224094346691"></p></li><li><p>在功能中勾选Net3.5及4.5及其所有子项</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214009.png" alt="image-20210224094446281"></p></li><li><p>点击下一步后,会有勾选的,因为我已安装所以无图.   勾选时确保所有子项\展开项全部勾选</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214010.png" alt="image-20210224095036494"></p></li><li><p>如果没有联网就需要下载Net3.5,并在指定备用源路径中指定路径</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214011.png" alt="image-20210224095507427"></p></li></ol><p><a href="https://wwi.lanzous.com/b0108j5ti">https://wwi.lanzous.com/b0108j5ti</a><br>密码:eog3</p><p>Net3.5压缩包</p><h1 id="搭建FTP站点"><a href="#搭建FTP站点" class="headerlink" title="搭建FTP站点"></a>搭建FTP站点</h1><blockquote><p>在被传送的服务器中搭建ftp服务</p></blockquote><ol><li><p>运行&gt; <code>inetmgr</code>进入IIS管理器,添加FTP站点</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214012.png" alt="image-20210224095718390"></p></li><li><p>配置站点名与允许被访问的路径</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214013.png" alt="image-20210224095815284"></p></li><li><p>选择绑定的ip,更改端口.    并选择无SSL</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214014.png" alt="image-20210224095909874"></p></li><li><p>全勾选,选择所有用户,虽然不安全,但是我用完删掉</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214015.png" alt="image-20210224095950658"></p></li><li><p>此时便可以在跳板机中通过xftp连接,传文件</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210312214016.png" alt="image-20210224100102634"></p></li></ol><h1 id="安装Sqlserver"><a href="#安装Sqlserver" class="headerlink" title="安装Sqlserver"></a>安装Sqlserver</h1><ol><li>没报错就是点下一步</li><li>有全选就全选</li><li>实例可以直接选默认</li><li>选择服务时,有一个时禁用,可以改为手动</li><li>混合模式,自己设置sa密码</li><li>有添加当前用户直接点</li><li>控制器名称可以不写,直接下一步</li></ol>]]></content>
      
      
      <categories>
          
          <category> win服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL Server </tag>
            
            <tag> 服务器 </tag>
            
            <tag> IIS服务 </tag>
            
            <tag> FTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot项目双模块项目打包</title>
      <link href="2021/02/19/springboot-da-bao-duo-mo-kuai-xiang-mu/"/>
      <url>2021/02/19/springboot-da-bao-duo-mo-kuai-xiang-mu/</url>
      
        <content type="html"><![CDATA[<p><strong>SpringBoot+Mybatis配置多数据源</strong></p><h1 id="SpringBoot项目双模块项目打包"><a href="#SpringBoot项目双模块项目打包" class="headerlink" title="SpringBoot项目双模块项目打包"></a>SpringBoot项目双模块项目打包</h1><ol><li>现在项目的pom中添加如下依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--排除springboot自带的tomcat容器--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>首先，当打包的项目中有多个模块时，需要先将被依赖的模块，eg：Common。将其先打包未jar包保存至本地仓库<code>mvn clean install -DskipTests=true</code></li><li>改写启动类，继承SpringBootServletInitializer，并重写相关方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&#123;&quot;Snow.Ifreedom.dao&quot;,&quot;Snow.Ifreedom.*.dao&quot;,&quot;Snow.FrameWork.DataAccess&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SnowaiApplication</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SnowaiApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title">configure</span><span class="params">(SpringApplicationBuilder application)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> application.sources(SnowaiApplication.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>将公共类（被依赖的）达成jar包存入本地仓库</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install -DskipTests</span><br></pre></td></tr></table></figure><ol start="4"><li>最终需要达成war包的项目依次点击</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210219164116.png" alt="image-20210219150639160"></p><ol start="5"><li>接下类就是放入tomcat中部署，分两种</li></ol><h2 id="tomcat部署法一"><a href="#tomcat部署法一" class="headerlink" title="tomcat部署法一"></a>tomcat部署法一</h2><ol><li>这一种方法，直接将war包放入tomcat的webapps中，并重命名未<strong>ROOT</strong>，启动tomcat后，将自动编译war包，并生成ROOT文件夹。此时浏览器中输入<code>localhost</code>:8080即可访问，在<strong>ROOT</strong>中的项目访问不需加前缀</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210219164117.png" alt="image-20210219151558403"></p><p>如果不是重命名为root，则访问时的路径为:  ip+端口+war包名</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210219164118.png" alt="image-20210219151656809"></p><h2 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h2><p>第二种方法就是一个tomcat部署多个项目，需要配置暂时未解决。</p><ol><li>一个webapps中放置一个项目</li><li>将webapps复制重命名为webapps1，并放置所需war包，建议重命名为ROOT</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210219164119.png" alt="image-20210219163637882"></p><ol start="3"><li>修改server.xml文件，有几个项目则复制几个Service</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 需要修改的地方就是Catalina1，webapps1，端口号--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Service</span> <span class="attr">name</span>=<span class="string">&quot;Catalina1&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里的端口号修改以免冲突 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8999&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Engine</span> <span class="attr">name</span>=<span class="string">&quot;Catalina1&quot;</span> <span class="attr">defaultHost</span>=<span class="string">&quot;localhost&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.realm.LockOutRealm&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Realm</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.realm.UserDatabaseRealm&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">resourceName</span>=<span class="string">&quot;UserDatabase&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Realm</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> <span class="attr">directory</span>=<span class="string">&quot;logs&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">prefix</span>=<span class="string">&quot;localhost_access_log&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;.txt&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">pattern</span>=<span class="string">&quot;%h %l %u %t <span class="symbol">&amp;quot;</span>%r<span class="symbol">&amp;quot;</span> %s %b&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Engine</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Service</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210219164120.png" alt="image-20210219164000012"></p><p>可</p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> war </tag>
            
            <tag> 打包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MybatisPlus</title>
      <link href="2021/01/27/mybatisplus/"/>
      <url>2021/01/27/mybatisplus/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 一款全免费且强大的 IDEA 插件，支持跳转，自动补全生成 SQL，代码生成</p></blockquote><p><a href="https://mp.baomidou.com/">MybatisPlus官网</a></p><p><a href="https://mp.baomidou.com/config/#localcachescope">配置项</a></p><p>可用来<a href="https://mp.baomidou.com/guide/dynamic-datasource.html#%E6%96%87%E6%A1%A3-documentation">实现多数据源配置</a></p><h1 id="SpringBoot项目集成MybatisPlus"><a href="#SpringBoot项目集成MybatisPlus" class="headerlink" title="SpringBoot项目集成MybatisPlus"></a>SpringBoot项目集成MybatisPlus</h1><h2 id="引入pom依赖"><a href="#引入pom依赖" class="headerlink" title="引入pom依赖"></a>引入pom依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        配置mybatisPlus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="修改application-yml配置"><a href="#修改application-yml配置" class="headerlink" title="修改application.yml配置"></a>修改application.yml配置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  配置mybatis-Plus</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">auto-mapping-behavior:</span> <span class="string">full</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*Mapper.xml</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line"><span class="comment">#    逻辑删除配置</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line"><span class="comment">#      删除前</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">1</span></span><br><span class="line"><span class="comment">#      删除后</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">0</span></span><br><span class="line"><span class="comment">#      驼峰命名</span></span><br><span class="line">      <span class="attr">table-underline:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#      设置扫描实体类</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.huangl.project.entity</span></span><br></pre></td></tr></table></figure><h2 id="dao层配置"><a href="#dao层配置" class="headerlink" title="dao层配置"></a>dao层配置</h2><p><img src="MybatisPlus/image-20210127172357308.png" alt="image-20210127172357308"></p><p>dao层接口都需要继承BaseMapper&lt;&gt;   中间为所建实体类</p><h2 id="进行限定查询"><a href="#进行限定查询" class="headerlink" title="进行限定查询"></a>进行限定查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment"> * 实现通过email进行限定查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;email&quot;</span>,<span class="string">&quot;125@qq.com&quot;</span>);</span><br><span class="line">    List&lt;User&gt; users = <span class="keyword">this</span>.userDao.selectByMap(map);</span><br><span class="line">    System.out.println(users);</span><br><span class="line">    <span class="keyword">return</span> users;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="MybatisPlus代码生成器"><a href="#MybatisPlus代码生成器" class="headerlink" title="MybatisPlus代码生成器"></a>MybatisPlus代码生成器</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        Mybatis-Plus代码自动生成所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>自定义类MybatisPlusGeneratorSQL</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.vesper.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.exceptions.MybatisPlusException;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringPool;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.InjectionConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.*;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableInfo;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> * Mybatis-Plus代码自动生成器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MysqlGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 读取控制台内容</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">scanner</span><span class="params">(String tip)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        StringBuilder help = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        help.append(<span class="string">&quot;请输入&quot;</span> + tip + <span class="string">&quot;：&quot;</span>);</span><br><span class="line">        System.out.println(help.toString());</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext()) &#123;</span><br><span class="line">            String ipt = scanner.next();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotBlank(ipt)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ipt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MybatisPlusException(<span class="string">&quot;请输入正确的&quot;</span> + tip + <span class="string">&quot;！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        gc.setOutputDir(projectPath + <span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;jobob&quot;</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// gc.setSwagger2(true); 实体属性 Swagger2 注解</span></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/db_boot_base?serverTimezone=GMT%2b8&amp;useUnicode=true&amp;characterEncoding=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">// dsc.setSchemaName(&quot;public&quot;);</span></span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setModuleName(scanner(<span class="string">&quot;模块名&quot;</span>));</span><br><span class="line">        pc.setParent(<span class="string">&quot;com.vesper.base&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义配置</span></span><br><span class="line">        InjectionConfig cfg = <span class="keyword">new</span> InjectionConfig() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// to do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果模板引擎是 freemarker</span></span><br><span class="line">        String templatePath = <span class="string">&quot;/templates/mapper.xml.ftl&quot;</span>;</span><br><span class="line">        <span class="comment">// 如果模板引擎是 velocity</span></span><br><span class="line">        <span class="comment">// String templatePath = &quot;/templates/mapper.xml.vm&quot;;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义输出配置</span></span><br><span class="line">        List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！</span></span><br><span class="line">                <span class="keyword">return</span> projectPath + <span class="string">&quot;/src/main/resources/mapper/&quot;</span> + pc.getModuleName()</span><br><span class="line">                        + <span class="string">&quot;/&quot;</span> + tableInfo.getEntityName() + <span class="string">&quot;Mapper&quot;</span> + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        cfg.setFileCreate(new IFileCreate() &#123;</span></span><br><span class="line"><span class="comment">            @Override</span></span><br><span class="line"><span class="comment">            public boolean isCreate(ConfigBuilder configBuilder, FileType fileType, String filePath) &#123;</span></span><br><span class="line"><span class="comment">                // 判断自定义文件夹是否需要创建</span></span><br><span class="line"><span class="comment">                checkDir(&quot;调用默认方法创建的目录，自定义目录用&quot;);</span></span><br><span class="line"><span class="comment">                if (fileType == FileType.MAPPER) &#123;</span></span><br><span class="line"><span class="comment">                    // 已经生成 mapper 文件判断存在，不想重新生成返回 false</span></span><br><span class="line"><span class="comment">                    return !new File(filePath).exists();</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                // 允许生成模板文件</span></span><br><span class="line"><span class="comment">                return true;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line">        mpg.setCfg(cfg);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置模板</span></span><br><span class="line">        TemplateConfig templateConfig = <span class="keyword">new</span> TemplateConfig();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置自定义输出模板</span></span><br><span class="line">        <span class="comment">//指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别</span></span><br><span class="line">        <span class="comment">// templateConfig.setEntity(&quot;templates/entity2.java&quot;);</span></span><br><span class="line">        <span class="comment">// templateConfig.setService();</span></span><br><span class="line">        <span class="comment">// templateConfig.setController();</span></span><br><span class="line"></span><br><span class="line">        templateConfig.setXml(<span class="keyword">null</span>);</span><br><span class="line">        mpg.setTemplate(templateConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setSuperEntityClass(<span class="string">&quot;你自己的父类实体,没有就不用设置!&quot;</span>);</span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 公共父类</span></span><br><span class="line">        strategy.setSuperControllerClass(<span class="string">&quot;你自己的父类控制器,没有就不用设置!&quot;</span>);</span><br><span class="line">        <span class="comment">// 写于父类中的公共字段</span></span><br><span class="line">        strategy.setSuperEntityColumns(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        strategy.setInclude(scanner(<span class="string">&quot;表名，多个英文逗号分割&quot;</span>).split(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">&quot;_&quot;</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line">        mpg.setTemplateEngine(<span class="keyword">new</span> FreemarkerTemplateEngine());</span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntellIJ IDEA2020.3学习</title>
      <link href="2021/01/26/intellij-idea2020-3-xue-xi/"/>
      <url>2021/01/26/intellij-idea2020-3-xue-xi/</url>
      
        <content type="html"><![CDATA[<p>注意：请卸载掉之前的破解，才能安装此破解工具，否则会出现idea不能打开的情况~</p><p>最近，找到了一种新的idea激活方法，支持Jetbrains全家桶，没得zhile那么复杂，各种参数，插件补丁体积也特别小~</p><p>官网下载速度比X度快，所以自行到 JetBrains 官网下载需要的IDE安装包。教程演示使用的是IDEA，所有的 JetBrains IDE 激活方式都一样，大胆往下看。点击下面链接下载当前最新版本，安装包下载完成后，双击开始安装，傻瓜式下一步安装即可：</p><p>IntelliJ IDEA：<a href="https://www.jetbrains.com/idea">https://www.jetbrains.com/idea</a></p><p>GoLand：<a href="https://www.jetbrains.com/go">https://www.jetbrains.com/go</a></p><p>安装完成后，选择 ”Evaluate for free“ 免费试用，点击 “Evaluate” 进入 IDE 中，新建或打开一个项目。</p><p><img src="IntellIJ-IDEA2020-3%E5%AD%A6%E4%B9%A0/20210126112959.png!thumbnail" alt="img"></p><p>说明：如果不能出现这个界面，请打开压缩包执行相应的重置脚本~</p><p>windows系统：reset_jetbrains_eval_windows.vbs linux/mac系统：reset_jetbrains_eval_mac_linux.sh</p><p><img src="IntellIJ-IDEA2020-3%E5%AD%A6%E4%B9%A0/20210126113000.png!thumbnail" alt="img"></p><h2 id="激活IDEA"><a href="#激活IDEA" class="headerlink" title="激活IDEA"></a>激活IDEA</h2><p>下面开始介绍如何永久激活 JetBrains IDE。激活插件在文末领取，领取的文件夹中有2个文件（请不要删除），如下：</p><p>Plain  Text</p><p>BetterIntelliJ.zip</p><p>激活码.txt</p><p>1、打开插件中心 File -&gt; Settings -&gt; Manage Plugins Reposito，设置插件中心仓库，如下图所示</p><p><img src="IntellIJ-IDEA2020-3%E5%AD%A6%E4%B9%A0/20210126113001.png!thumbnail" alt="img"></p><p>设置仓库地址：<a href="https://repo.idechajian.com/">https://repo.idechajian.com</a> ，如下图所示</p><p><img src="IntellIJ-IDEA2020-3%E5%AD%A6%E4%B9%A0/20210126113002.png!thumbnail" alt="img"></p><p>点击OK，便可以在插件中心，搜索关键字“BetterIntellij”，如下图所示</p><p><img src="IntellIJ-IDEA2020-3%E5%AD%A6%E4%B9%A0/20210126113003.png!thumbnail" alt="img"></p><p>点击安装或者更新，便会提示你，已自动配置好javaagent~</p><p>这时，必须要重启IDEA，才能生效。</p><p>2、打开注册界面 Help -&gt; Register，选择添加激活码（见key.txt），如下图所示</p><p><img src="IntellIJ-IDEA2020-3%E5%AD%A6%E4%B9%A0/20210126113004.png!thumbnail" alt="img"></p><p>这时，你便激活成功了，到2099年~</p><p><img src="IntellIJ-IDEA2020-3%E5%AD%A6%E4%B9%A0/20210126113005.png!thumbnail" alt="img"></p><p>一切就这么愉快的搞定了~</p><h2 id="获取插件"><a href="#获取插件" class="headerlink" title="获取插件"></a>获取插件</h2><p><a href="https://wwi.lanzous.com/igguPkff2if">https://wwi.lanzous.com/igguPkff2if</a><br>密码:WEhbmu</p><p>便会得到文件夹中的激活补丁 ~</p><h3 id="1、打不开IDEA？"><a href="#1、打不开IDEA？" class="headerlink" title="1、打不开IDEA？"></a>1、打不开IDEA？</h3><p>由于你安装了其它的破解补丁，需要去看看idea64.exe.vmoptions的配置对不对？ 位置：C:\Users\用户名\AppData\Roaming\JetBrains\IntelliJIdea2020.2\idea64.exe.vmoptions，建议去掉之前的 -javaagent 的配置。然后，再根据上面的教程安装咱们的破解补丁~</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IntellIJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot+Mybatis配置多数据源</title>
      <link href="2021/01/20/springboot-mybatis-pei-zhi-duo-shu-ju-yuan/"/>
      <url>2021/01/20/springboot-mybatis-pei-zhi-duo-shu-ju-yuan/</url>
      
        <content type="html"><![CDATA[<p><strong>SpringBoot+Mybatis配置多数据源</strong></p><p>项目结构如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210120172113.png" alt="image-20210120165842654"></p><h1 id="建库建表"><a href="#建库建表" class="headerlink" title="建库建表"></a>建库建表</h1><ol><li>test1</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for student</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `student`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student` (</span><br><span class="line">  `id` <span class="type">varchar</span>(<span class="number">12</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">36</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `age` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>MyISAM <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of student</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;里斯&#x27;</span>, <span class="string">&#x27;2&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;3&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;赵六&#x27;</span>, <span class="string">&#x27;4&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>test2</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for lesson</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `lesson`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `lesson` (</span><br><span class="line">  `id` <span class="type">varchar</span>(<span class="number">12</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">36</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `credit` <span class="type">float</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  `teacher` <span class="type">varchar</span>(<span class="number">36</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>MyISAM <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of lesson</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `lesson` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;JAVA程序入门&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;张三&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `lesson` <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;赵六&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="修改默认配置文件"><a href="#修改默认配置文件" class="headerlink" title="修改默认配置文件"></a>修改默认配置文件</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8090</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">first:</span></span><br><span class="line">      <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test1?serverTimezone=CTT&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">second:</span></span><br><span class="line">      <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test2?serverTimezone=CTT&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br></pre></td></tr></table></figure><blockquote><p>由于配置中相当于自定了一套数据源的配置，所以不需要使用yml的<code>spring.datasource</code></p></blockquote><ol><li>在启动类中去除springboot自动配置数据源的功能</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class&#125;)</span></span><br></pre></td></tr></table></figure><ol start="2"><li>同时yml中也无法通过mybatis配置mapper的位置</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mybatis:</span></span><br><span class="line"><span class="comment">#  mapper-locations: classpath:com/docimp/docimp/mapper/*.xml</span></span><br></pre></td></tr></table></figure><ul><li>所以此时就需要在为DataSource创建SessionFactory时直接指定mapper的地址，否则报错<code>Invalid bound statement (not found)</code></li></ul><h1 id="创建相关config"><a href="#创建相关config" class="headerlink" title="创建相关config"></a>创建相关config</h1><h2 id="FirstDataSourceConfig"><a href="#FirstDataSourceConfig" class="headerlink" title="FirstDataSourceConfig"></a>FirstDataSourceConfig</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(basePackages = &quot;com.exportppt.demo.dao.first&quot;,sqlSessionTemplateRef =&quot;firstSqlSessionTemplate&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstDataSourceConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.first.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.first.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.first.password&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.first.driverClassName&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line">    <span class="comment">/**本数据源扫描的mapper路径*/</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String MAPPER_LOCATION = <span class="string">&quot;classpath:mapper/first/*.xml&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**创建数据源*/</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;firstDS&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">getFirstDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DataSource build =  DataSourceBuilder.create()</span><br><span class="line">                .driverClassName(driverClassName)</span><br><span class="line">                .url(url)</span><br><span class="line">                .username(username)</span><br><span class="line">                .password(password)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> build;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**创建SessionFactory*/</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;firstSqlSessionFactory&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">firstSqlSessionFactory</span><span class="params">(<span class="meta">@Qualifier(&quot;firstDS&quot;)</span> DataSource dataSource)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SqlSessionFactoryBean bean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        bean.setDataSource(dataSource);</span><br><span class="line">        <span class="comment">//设置mapper配置文件</span></span><br><span class="line">        bean.setMapperLocations(<span class="keyword">new</span> PathMatchingResourcePatternResolver().getResources(MAPPER_LOCATION));</span><br><span class="line">        <span class="keyword">return</span> bean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**创建事务管理器*/</span></span><br><span class="line">    <span class="meta">@Bean(&quot;firstTransactionManger&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">firstTransactionManger</span><span class="params">(<span class="meta">@Qualifier(&quot;firstDS&quot;)</span> DataSource dataSource)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**创建SqlSessionTemplate*/</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;firstSqlSessionTemplate&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionTemplate <span class="title">firstSqlSessionTemplate</span><span class="params">(<span class="meta">@Qualifier(&quot;firstSqlSessionFactory&quot;)</span> SqlSessionFactory sqlSessionFactory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SqlSessionTemplate(sqlSessionFactory);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SecondDataSourceConfig"><a href="#SecondDataSourceConfig" class="headerlink" title="SecondDataSourceConfig"></a>SecondDataSourceConfig</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(basePackages = &quot;com.exportppt.demo.dao.second&quot;,sqlSessionTemplateRef =&quot;secondSqlSessionTemplate&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondDataSourceConfig</span>  </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.second.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.second.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.second.password&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.second.driverClassName&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line">    <span class="comment">/**本数据源扫描的mapper路径*/</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String MAPPER_LOCATION = <span class="string">&quot;classpath:mapper/second/*.xml&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**创建数据源*/</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;secondDS&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">getSecondDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DataSource build =  DataSourceBuilder.create()</span><br><span class="line">                .driverClassName(driverClassName)</span><br><span class="line">                .url(url)</span><br><span class="line">                .username(username)</span><br><span class="line">                .password(password)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> build;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**创建SessionFactory*/</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;secondSqlSessionFactory&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">secondSqlSessionFactory</span><span class="params">(<span class="meta">@Qualifier(&quot;secondDS&quot;)</span> DataSource dataSource)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SqlSessionFactoryBean bean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        bean.setDataSource(dataSource);</span><br><span class="line">        <span class="comment">//设置mapper配置文件</span></span><br><span class="line">        bean.setMapperLocations(<span class="keyword">new</span> PathMatchingResourcePatternResolver().getResources(MAPPER_LOCATION));</span><br><span class="line">        <span class="keyword">return</span> bean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**创建事务管理器*/</span></span><br><span class="line">    <span class="meta">@Bean(&quot;secondTransactionManger&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">secondTransactionManger</span><span class="params">(<span class="meta">@Qualifier(&quot;secondDS&quot;)</span> DataSource dataSource)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**创建SqlSessionTemplate*/</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;secondSqlSessionTemplate&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionTemplate <span class="title">secondSqlSessionTemplate</span><span class="params">(<span class="meta">@Qualifier(&quot;secondSqlSessionFactory&quot;)</span> SqlSessionFactory sqlSessionFactory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SqlSessionTemplate(sqlSessionFactory);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建实体类entity"><a href="#创建实体类entity" class="headerlink" title="创建实体类entity"></a>创建实体类entity</h1><h2 id="Student"><a href="#Student" class="headerlink" title="Student"></a>Student</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span>  String name;</span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Lesson"><a href="#Lesson" class="headerlink" title="Lesson"></a>Lesson</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lesson</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String teacher;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">float</span> credit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建controller"><a href="#创建controller" class="headerlink" title="创建controller"></a>创建controller</h1><h2 id="MultiController"><a href="#MultiController" class="headerlink" title="MultiController"></a>MultiController</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/multidb&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultiDbController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentService studentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LessonService lessonService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getLesson&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Lesson&gt; <span class="title">getLessons</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">this</span>.lessonService.findById(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getStudents&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">getStudents</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.lessonService.queryStudents();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建service"><a href="#创建service" class="headerlink" title="创建service"></a>创建service</h1><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210120172114.png" alt="image-20210120171234453"></p><h2 id="StudentService"><a href="#StudentService" class="headerlink" title="StudentService"></a>StudentService</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentMapper studentMapper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">queryStudents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.studentMapper.queryStudents();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="LessonService"><a href="#LessonService" class="headerlink" title="LessonService"></a>LessonService</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LessonService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentMapper studentMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LessonMapper lessonMapper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Lesson&gt; <span class="title">findById</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">this</span>.lessonMapper.findById(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">queryStudents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.studentMapper.queryStudents();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建dao层"><a href="#创建dao层" class="headerlink" title="创建dao层"></a>创建dao层</h1><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210120172115.png" alt="image-20210120171626770"></p><h2 id="StudentMapper"><a href="#StudentMapper" class="headerlink" title="StudentMapper"></a>StudentMapper</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Student&gt; <span class="title">queryStudents</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LessonMapper"><a href="#LessonMapper" class="headerlink" title="LessonMapper"></a>LessonMapper</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LessonMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Lesson&gt; <span class="title">findById</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建mapper层，dao层的实现"><a href="#创建mapper层，dao层的实现" class="headerlink" title="创建mapper层，dao层的实现"></a>创建mapper层，dao层的实现</h1><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210120172116.png" alt="image-20210120171750384"></p><h2 id="StudentMapper-1"><a href="#StudentMapper-1" class="headerlink" title="StudentMapper"></a>StudentMapper</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>  <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.exportppt.demo.dao.first.StudentMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;studentMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.exportppt.demo.po.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryStudents&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;studentMap&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="LessonMapper-1"><a href="#LessonMapper-1" class="headerlink" title="LessonMapper"></a>LessonMapper</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>  <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.exportppt.demo.dao.second.LessonMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;lessonMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.exportppt.demo.po.Lesson&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;credit&quot;</span> <span class="attr">property</span>=<span class="string">&quot;credit&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;lessonMap&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM lesson WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 多数据源配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Mybatis </tag>
            
            <tag> 多数据源 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Apache POI操作ppt模板</title>
      <link href="2021/01/15/li-yong-apache-poi-cao-zuo-ppt-mo-ban/"/>
      <url>2021/01/15/li-yong-apache-poi-cao-zuo-ppt-mo-ban/</url>
      
        <content type="html"><![CDATA[<p><strong>利用Apache POI操作ppt模板</strong></p><blockquote><p>实现的是读取ppt模板，修改动态数据，输出新ppt文件</p></blockquote><p>构建的时maven项目所依赖如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        依赖引入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.19<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-base<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-annotation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        导出ppt的poi所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-scratchpad<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="阶段一"><a href="#阶段一" class="headerlink" title="阶段一"></a>阶段一</h1><ul><li>能修改模板中的数据，但是无法保留样式</li><li>注，模板中需要修改的数据 改为 <code>&#123;xxx&#125;</code> 的形式，不可重名，且目前测试不能用汉字。我多用数字代替</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这种方式改变模板数据，无法保留原有样式</span></span><br><span class="line"><span class="comment">//读取原始模板ppt数据</span></span><br><span class="line">String modelPath = <span class="string">&quot;D://统计结果导出.pptx&quot;</span>;</span><br><span class="line">XMLSlideShow slideShow = <span class="keyword">new</span> XMLSlideShow(<span class="keyword">new</span> FileInputStream(modelPath));</span><br><span class="line"></span><br><span class="line">List&lt;XSLFSlide&gt; slides = slideShow.getSlides();</span><br><span class="line"><span class="keyword">for</span> (XSLFSlide slide : slides) &#123;</span><br><span class="line">    List&lt;XSLFShape&gt; shapes = slide.getShapes();</span><br><span class="line">    <span class="keyword">for</span> (XSLFShape shape : shapes) &#123;</span><br><span class="line">        <span class="keyword">if</span> (shape <span class="keyword">instanceof</span> XSLFAutoShape) &#123;</span><br><span class="line">            XSLFAutoShape autoShape = (XSLFAutoShape) shape;</span><br><span class="line">            String text = autoShape.getText();</span><br><span class="line">            <span class="keyword">if</span> (text.contains(<span class="string">&quot;&#123;test&#125;&quot;</span>)) &#123;</span><br><span class="line">                XSLFTextRun textRun = autoShape.setText(text.replace(<span class="string">&quot;&#123;test&#125;&quot;</span>, <span class="string">&quot;改变成功&quot;</span>));</span><br><span class="line">                textRun.setFontColor(Color.black);</span><br><span class="line">                textRun.setFontFamily(<span class="string">&quot;微软雅黑&quot;</span>);</span><br><span class="line">                textRun.setFontSize(<span class="number">14.0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">slideShow.write(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D://统计结果导出test.pptx&quot;</span>));</span><br></pre></td></tr></table></figure><h1 id="阶段二"><a href="#阶段二" class="headerlink" title="阶段二"></a>阶段二</h1><ul><li>利用paragraphs，可以保留原有样式</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">  List&lt;Stat&gt; stats = <span class="keyword">this</span>.statService.selectAll();</span><br><span class="line">    stats.forEach(stat -&gt; &#123;</span><br><span class="line">        String modelPath = <span class="string">&quot;D://模板.pptx&quot;</span>;</span><br><span class="line">        XMLSlideShow slideShow = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            slideShow = <span class="keyword">new</span> XMLSlideShow(<span class="keyword">new</span> FileInputStream(modelPath));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;XSLFSlide&gt; slides = slideShow.getSlides();</span><br><span class="line">        <span class="keyword">for</span> (XSLFSlide slide : slides)&#123;</span><br><span class="line">            List&lt;XSLFShape&gt; shapes = slide.getShapes();</span><br><span class="line">            <span class="keyword">for</span> (XSLFShape shape : shapes)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//                修改文本数据利用textshape</span></span><br><span class="line">                <span class="keyword">if</span> (shape <span class="keyword">instanceof</span> TextShape)&#123;</span><br><span class="line">                    List&lt;XSLFTextParagraph&gt; textParagraphs = ((TextShape) shape).getTextParagraphs();</span><br><span class="line">                    <span class="keyword">if</span> (textParagraphs == <span class="keyword">null</span> || textParagraphs.size() == <span class="number">0</span>)&#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span> (XSLFTextParagraph textParagraph : textParagraphs)&#123;</span><br><span class="line">                        <span class="keyword">if</span> (textParagraph == <span class="keyword">null</span>)&#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                         List&lt;XSLFTextRun&gt; textRuns = textParagraph.getTextRuns();</span><br><span class="line">                        <span class="keyword">if</span> (textRuns == <span class="keyword">null</span>)&#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">for</span> (XSLFTextRun textRun : textRuns)&#123;</span><br><span class="line">                            textRun.setText(textRun.getRawText().replace(<span class="string">&quot;&#123;1&#125;&quot;</span>,stat.getRefPre()));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">            slideShow.write(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D://输出新文档test.pptx&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li>shape instanceof TextShape 只能操作文本数据</li></ul><h1 id="阶段三"><a href="#阶段三" class="headerlink" title="阶段三"></a>阶段三</h1><p>修改ppt文档中的表格数据，利用 shape instanceof XSLFTable</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"> List&lt;Stat&gt; stats = <span class="keyword">this</span>.statService.selectAll();</span><br><span class="line">    stats.forEach(stat -&gt; &#123;</span><br><span class="line">        String modelPath = <span class="string">&quot;D://模板.pptx&quot;</span>;</span><br><span class="line">        XMLSlideShow slideShow = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            slideShow = <span class="keyword">new</span> XMLSlideShow(<span class="keyword">new</span> FileInputStream(modelPath));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;XSLFSlide&gt; slides = slideShow.getSlides();</span><br><span class="line">        <span class="keyword">for</span> (XSLFSlide slide : slides)&#123;</span><br><span class="line">            List&lt;XSLFShape&gt; shapes = slide.getShapes();</span><br><span class="line">            <span class="keyword">for</span> (XSLFShape shape : shapes)&#123;</span><br><span class="line">                <span class="comment">//                修改表格数据 利用xslfTable</span></span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (shape <span class="keyword">instanceof</span> XSLFTable)&#123;</span><br><span class="line"><span class="comment">//                    XSLFTableCell cell = ((XSLFTable) shape).getCell(2, 2);</span></span><br><span class="line">                     <span class="keyword">int</span> rows = ((XSLFTable) shape).getNumberOfRows();</span><br><span class="line">                     <span class="keyword">int</span> columns = ((XSLFTable) shape).getNumberOfColumns();</span><br><span class="line">                     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt; rows; i++)&#123;</span><br><span class="line">                         <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; columns;j++)&#123;</span><br><span class="line">                             String text = ((XSLFTable) shape).getCell(i, j).getText();</span><br><span class="line">                             <span class="keyword">if</span> (StringUtils.isNotBlank(text) &amp;&amp; StringUtils.isNotEmpty(text))&#123;</span><br><span class="line"><span class="comment">//                                 ((XSLFTable) shape).getCell(i,j).setText();</span></span><br><span class="line">                                 ((XSLFTable) shape).getCell(i,j).setText(((XSLFTable) shape).getCell(i,j).getText().replace(<span class="string">&quot;&#123;call&#125;&quot;</span>,stat.getCall()));</span><br><span class="line">                                 ((XSLFTable) shape).getCell(i,j).setText(((XSLFTable) shape).getCell(i,j).getText().replace(<span class="string">&quot;&#123;connect&#125;&quot;</span>,stat.getConnect()));</span><br><span class="line">                                 ((XSLFTable) shape).getCell(i,j).setText(((XSLFTable) shape).getCell(i,j).getText().replace(<span class="string">&quot;&#123;noneCollect&#125;&quot;</span>,stat.getNoneCollect()));</span><br><span class="line">                                 ((XSLFTable) shape).getCell(i,j).setText(((XSLFTable) shape).getCell(i,j).getText().replace(<span class="string">&quot;&#123;ref&#125;&quot;</span>,stat.getRef()));</span><br><span class="line">                                 ((XSLFTable) shape).getCell(i,j).setText(((XSLFTable) shape).getCell(i,j).getText().replace(<span class="string">&quot;&#123;connectPre&#125;&quot;</span>,stat.getConnectPre()));</span><br><span class="line">                                 ((XSLFTable) shape).getCell(i,j).setText(((XSLFTable) shape).getCell(i,j).getText().replace(<span class="string">&quot;&#123;refPre&#125;&quot;</span>,stat.getRefPre()));</span><br><span class="line">                                 ((XSLFTable) shape).getCell(i,j).setText(((XSLFTable) shape).getCell(i,j).getText().replace(<span class="string">&quot;&#123;usefulCollect&#125;&quot;</span>,stat.getUsefulCollect()));</span><br><span class="line">                             &#125;</span><br><span class="line">                         &#125;</span><br><span class="line">                     &#125;</span><br><span class="line"></span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            slideShow.write(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D://输出新文件模板test.pptx&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="阶段四"><a href="#阶段四" class="headerlink" title="阶段四"></a>阶段四</h1><p>自己手动创建一个带表格的ppt</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">       String[] strings1 = <span class="keyword">new</span> String[<span class="number">9</span>];</span><br><span class="line"></span><br><span class="line">        strings1= <span class="keyword">this</span>.statService.selectAll();</span><br><span class="line">        System.out.println(strings1[<span class="number">3</span>]);</span><br><span class="line">        System.out.println(strings1[<span class="number">5</span>]);</span><br><span class="line">        System.out.println(<span class="string">&quot;-=-=-=-=-=-=-=-=-=&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String[] strings = <span class="keyword">new</span> String[<span class="number">3</span>];</span><br><span class="line">        strings[<span class="number">0</span>] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">        strings[<span class="number">1</span>] = <span class="string">&quot;hell&quot;</span>;</span><br><span class="line">        strings[<span class="number">2</span>] = <span class="string">&quot;hello13&quot;</span>;</span><br><span class="line">        *<span class="comment">//** 加载PPT **//*</span></span><br><span class="line">        XMLSlideShow ppt = <span class="keyword">new</span> XMLSlideShow();</span><br><span class="line"></span><br><span class="line">        *<span class="comment">//** 创建一个slide，理解为PPT里的每一页 **//*</span></span><br><span class="line">        XSLFSlide slide = ppt.createSlide();</span><br><span class="line">        *<span class="comment">//** 获得slideMasters**//*</span></span><br><span class="line">        List&lt;XSLFSlideMaster&gt; slideMasters = ppt.getSlideMasters();</span><br><span class="line">        *<span class="comment">//** 创建表格**//*</span></span><br><span class="line">        XSLFTable table = slide.createTable();</span><br><span class="line">        *<span class="comment">//** 设置表格 x ,y ,width,height **//*</span></span><br><span class="line">        Rectangle2D rectangle2D = <span class="keyword">new</span> Rectangle2D.Double(<span class="number">20</span>, <span class="number">90</span>, <span class="number">2200</span>, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        stats.forEach(stat -&gt; &#123;</span><br><span class="line">            HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            map.put(<span class="string">&quot;有效采集&quot;</span>, stat.getUsefulCollect());</span><br><span class="line">            map.put(<span class="string">&quot;接通&quot;</span>, stat.getConnect());</span><br><span class="line">            map.put(<span class="string">&quot;拒接&quot;</span>, stat.getRef());</span><br><span class="line">            map.put(<span class="string">&quot;未接通&quot;</span>, stat.getNoneCollect());</span><br><span class="line">            map.put(<span class="string">&quot;呼叫&quot;</span>, stat.getCall());</span><br><span class="line">            map.put(<span class="string">&quot;接通率&quot;</span>, stat.getConnectPre());</span><br><span class="line">            map.put(<span class="string">&quot;有效采集率接通&quot;</span>, stat.getUsefulConnectCollect());</span><br><span class="line">            map.put(<span class="string">&quot;有效采集率呼叫&quot;</span>, stat.getUsefulCallCollect());</span><br><span class="line">            map.put(<span class="string">&quot;拒接率&quot;</span>, stat.getRefPre());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">            System.out.println(map);</span><br><span class="line">            System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">            Set&lt;Map.Entry&lt;String, Object&gt;&gt; set = map.entrySet();</span><br><span class="line">            System.out.println(set);</span><br><span class="line">            System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">            Set&lt;String&gt; setkey = map.keySet();</span><br><span class="line">            System.out.println(setkey);</span><br><span class="line">            System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//迭代输出map中的kv</span></span><br><span class="line">            <span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">                Object o = map.get(key);</span><br><span class="line">                System.out.println(key + <span class="string">&quot;:&quot;</span> + o);</span><br><span class="line"></span><br><span class="line">                *<span class="comment">//** 生成第一行 **//*</span></span><br><span class="line">                XSLFTableRow firstRow = table.addRow();</span><br><span class="line"></span><br><span class="line">                XSLFTableCell cell = firstRow.addCell();</span><br><span class="line">                cell.setBorderColor(TableCell.BorderEdge.left, <span class="keyword">new</span> Color(<span class="number">10</span>, <span class="number">100</span>, <span class="number">120</span>));</span><br><span class="line">                cell.setBorderColor(TableCell.BorderEdge.right, <span class="keyword">new</span> Color(<span class="number">10</span>, <span class="number">100</span>, <span class="number">120</span>));</span><br><span class="line">                cell.setBorderColor(TableCell.BorderEdge.bottom, <span class="keyword">new</span> Color(<span class="number">10</span>, <span class="number">100</span>, <span class="number">120</span>));</span><br><span class="line">                cell.setBorderColor(TableCell.BorderEdge.top, <span class="keyword">new</span> Color(<span class="number">10</span>, <span class="number">100</span>, <span class="number">120</span>));</span><br><span class="line"></span><br><span class="line">                cell.setBorderWidth(TableCell.BorderEdge.left, <span class="number">3</span>);</span><br><span class="line">                cell.setBorderWidth(TableCell.BorderEdge.right, <span class="number">3</span>);</span><br><span class="line">                cell.setBorderWidth(TableCell.BorderEdge.top, <span class="number">3</span>);</span><br><span class="line">                cell.setBorderWidth(TableCell.BorderEdge.bottom, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">                cell.setText(key + <span class="string">&quot;:&quot;</span> + o);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;);*/</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* */</span><span class="comment">/** 生成第一个单元格**/</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">        XSLFTableCell firstCell =  firstRow.addCell();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        */</span><span class="comment">/** 设置单元格的边框颜色 **/</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">        firstCell.setBorderColor(TableCell.BorderEdge.left,new Color(10,100,120));</span></span><br><span class="line"><span class="comment">        firstCell.setBorderColor(TableCell.BorderEdge.right,new Color(10,100,120));</span></span><br><span class="line"><span class="comment">        firstCell.setBorderColor(TableCell.BorderEdge.top,new Color(10,100,120));</span></span><br><span class="line"><span class="comment">        firstCell.setBorderColor(TableCell.BorderEdge.bottom,new Color(10,100,120));</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        */</span><span class="comment">/** 设置单元格边框 **/</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">        firstCell.setBorderWidth(TableCell.BorderEdge.left,3);</span></span><br><span class="line"><span class="comment">        firstCell.setBorderWidth(TableCell.BorderEdge.right,3);</span></span><br><span class="line"><span class="comment">        firstCell.setBorderWidth(TableCell.BorderEdge.top,3);</span></span><br><span class="line"><span class="comment">        firstCell.setBorderWidth(TableCell.BorderEdge.bottom,3);</span></span><br><span class="line"><span class="comment">        */</span><span class="comment">/** 设置文本 **/</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">        users.forEach(user -&gt; &#123;</span></span><br><span class="line"><span class="comment">            String name = user.getName();</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;=============&quot;);</span></span><br><span class="line"><span class="comment">            firstCell.setText(name);</span></span><br><span class="line"><span class="comment">        &#125;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        */</span><span class="comment">/** 设置单元格的边框宽度 **/</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">//        创建第一行第二个单元格</span></span><br><span class="line"><span class="comment">        XSLFTableCell secondCell =  firstRow.addCell();</span></span><br><span class="line"><span class="comment">        secondCell.setText(&quot;sfdsf&quot;);</span></span><br><span class="line"><span class="comment">        */</span><span class="comment">/** 设置单元格的边框颜色 **/</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">        secondCell.setBorderColor(TableCell.BorderEdge.bottom,new Color(10,100,120));</span></span><br><span class="line"><span class="comment">        secondCell.setBorderColor(TableCell.BorderEdge.right,new Color(10,100,120));</span></span><br><span class="line"><span class="comment">        secondCell.setBorderColor(TableCell.BorderEdge.left,new Color(10,100,120));</span></span><br><span class="line"><span class="comment">        secondCell.setBorderColor(TableCell.BorderEdge.top,new Color(10,100,120));</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        */</span><span class="comment">/** 设置单元格边框 **/</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">        secondCell.setBorderWidth(TableCell.BorderEdge.left,3);</span></span><br><span class="line"><span class="comment">        secondCell.setBorderWidth(TableCell.BorderEdge.right,3);</span></span><br><span class="line"><span class="comment">        secondCell.setBorderWidth(TableCell.BorderEdge.top,3);</span></span><br><span class="line"><span class="comment">        secondCell.setBorderWidth(TableCell.BorderEdge.bottom,3);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      table.setAnchor(rectangle2D);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        response.setHeader(&quot;content-disposition&quot;, &quot;attachment;filename=&quot; + URLEncoder.encode(&quot;统计结果导出.pptx&quot;, &quot;UTF-8&quot;));</span></span><br><span class="line"><span class="comment">        ServletOutputStream outputStream = response.getOutputStream();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        /** 文件路径 **/</span></span><br><span class="line">        String filePath = <span class="string">&quot;D://统计结果导出.pptx&quot;</span>;</span><br><span class="line">        <span class="comment">/** 输出文件 **/</span></span><br><span class="line">       ppt.write(outputStream);</span><br><span class="line">        outputStream.close();</span><br><span class="line">        ppt.close();</span><br><span class="line">        ppt.write(<span class="keyword">new</span> FileOutputStream(filePath));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> POI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ApachePOI </tag>
            
            <tag> PowerPoint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>axios入门学习</title>
      <link href="2021/01/15/axios-ru-men-xue-xi/"/>
      <url>2021/01/15/axios-ru-men-xue-xi/</url>
      
        <content type="html"><![CDATA[<p><strong>Axios</strong></p><h1 id="Axios引言"><a href="#Axios引言" class="headerlink" title="Axios引言"></a>Axios引言</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># axios引言</span></span><br><span class="line">Axios是一个异步请求技术</span><br><span class="line"></span><br><span class="line"><span class="section"># 异步请求技术</span></span><br><span class="line">  基于XMLHttpRequest对象发起的请求都是异步请求</span><br><span class="line"><span class="section"># 异步请求特点</span></span><br><span class="line"><span class="code">请求之后页面不动，响应回来更新的是页面的局部，多个请求间互不影响，并行执行</span></span><br><span class="line"><span class="code">ajax是jQuery中的</span></span><br><span class="line"><span class="code">系统架构 前后端分离----异步请求技术---》Vue全家桶 前端技术 Vue 淘汰了jQuery</span></span><br></pre></td></tr></table></figure><h1 id="Axios基本入门"><a href="#Axios基本入门" class="headerlink" title="Axios基本入门"></a>Axios基本入门</h1><h2 id="下载地址官网"><a href="#下载地址官网" class="headerlink" title="下载地址官网"></a>下载地址<a href="http://www.axios-js.com/">官网</a></h2><p><a href="https://www.kancloud.cn/yunye/axios/234845">中文文档</a></p><h2 id="Axios案例"><a href="#Axios案例" class="headerlink" title="Axios案例"></a>Axios案例</h2><h3 id="Get请求"><a href="#Get请求" class="headerlink" title="Get请求"></a>Get请求</h3><p>首先自行构建一个简单的项目数据</p><p>entity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Date bir;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/axios&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AxiosController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="meta">@CrossOrigin</span>  <span class="comment">//允许请求跨域</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">1</span>,<span class="string">&quot;Peter&quot;</span>,<span class="number">15</span>,<span class="keyword">new</span> Date()));</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">2</span>,<span class="string">&quot;Kitty&quot;</span>,<span class="number">16</span>,<span class="keyword">new</span> Date()));</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">3</span>,<span class="string">&quot;Ben&quot;</span>,<span class="number">75</span>,<span class="keyword">new</span> Date()));</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">4</span>,<span class="string">&quot;Weidy&quot;</span>,<span class="number">45</span>,<span class="keyword">new</span> Date()));</span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>html界面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axios<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;script src=&quot;/static/axios.min.js&quot;&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//get方式请求</span></span></span><br><span class="line"><span class="javascript">        axios.get(<span class="string">&#x27;http://127.0.0.1:8888/axios/findAll&#x27;</span>)  <span class="comment">//发送请求的url</span></span></span><br><span class="line"><span class="javascript">            .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(response.data);   <span class="comment">//响应回来出发的回调函数</span></span></span><br><span class="line"><span class="javascript">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(err);   <span class="comment">//当请求错误时的回调函数</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动后可在html中看到控制台已将数据打印</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210115150406.png" alt="image-20210110151058710"></p><p>response 是在调用后台接口后所得到的信息</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210115150407.png" alt="image-20210110151133637"></p><h3 id="Get请求之携带前台的参数"><a href="#Get请求之携带前台的参数" class="headerlink" title="Get请求之携带前台的参数"></a>Get请求之携带前台的参数</h3><blockquote><p>例如前台返回username，后台根据username进行select</p></blockquote><ol><li>在前台get请求中填写如所需参数</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axios<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;script src=&quot;/static/axios.min.js&quot;&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//get方式请求</span></span></span><br><span class="line"><span class="javascript">        axios.get(<span class="string">&#x27;http://127.0.0.1:8888/axios/findAll?username=Peter&amp;age=15&#x27;</span>)  <span class="comment">//发送请求的url</span></span></span><br><span class="line"><span class="javascript">            .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(response.data);   <span class="comment">//响应回来出发的回调函数</span></span></span><br><span class="line"><span class="javascript">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(err);   <span class="comment">//当请求错误时的回调函数</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在controller中要创建对应的对象接受前台传来的参数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/axios&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AxiosController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="meta">@CrossOrigin</span>  <span class="comment">//允许请求跨域</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">(String username,Integer age)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;名字：&quot;</span>+username);</span><br><span class="line">        System.out.println(<span class="string">&quot;年龄：&quot;</span>+age);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">1</span>,<span class="string">&quot;Peter&quot;</span>,<span class="number">15</span>,<span class="keyword">new</span> Date()));</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">2</span>,<span class="string">&quot;Kitty&quot;</span>,<span class="number">16</span>,<span class="keyword">new</span> Date()));</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">3</span>,<span class="string">&quot;Ben&quot;</span>,<span class="number">75</span>,<span class="keyword">new</span> Date()));</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">4</span>,<span class="string">&quot;Weidy&quot;</span>,<span class="number">45</span>,<span class="keyword">new</span> Date()));</span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后台输出结果</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210115150408.png" alt="image-20210110152615294"></p><h3 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h3><ol><li>在前端界面中定义请求</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axiosPost请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;script src=&quot;/static/axios.min.js&quot;&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//post方式请求</span></span></span><br><span class="line"><span class="javascript">        axios.post(<span class="string">&#x27;http://127.0.0.1:8888/axios/save&#x27;</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(response.data);</span></span><br><span class="line"><span class="javascript">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(err);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在controller中定义方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line"> <span class="meta">@CrossOrigin</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">sava</span><span class="params">()</span></span>&#123;</span><br><span class="line">     Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">     map.put(<span class="string">&quot;status&quot;</span>,<span class="number">200</span>);</span><br><span class="line">     map.put(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;成功了！&quot;</span>);</span><br><span class="line">     <span class="keyword">return</span>  map;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210115150409.png" alt="image-20210110154704736"></p><h3 id="Post请求携带参数"><a href="#Post请求携带参数" class="headerlink" title="Post请求携带参数"></a>Post请求携带参数</h3><blockquote><ol><li>axios在发送post请求时传递的参数如果为对象类型，axios会自动将对象转为json格式的字符串使用，application/json的请求头向后端服务接口传递参数</li><li>axios的post请求传递参数的两种方式<ol><li>使用字符串进行参数传递： “name=zhangsan&amp;age=23”   此种形式</li><li>后端接口使用@RequsetBody注解形式接收参数</li></ol></li></ol></blockquote><p>第一种:字符串形式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axiosPost请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;script src=&quot;/static/axios.min.js&quot;&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//post方式请求</span></span></span><br><span class="line"><span class="javascript">        axios.post(<span class="string">&#x27;http://127.0.0.1:8888/axios/save&#x27;</span>,<span class="string">&quot;name=测试账号&amp;age=23&quot;</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(response.data);</span></span><br><span class="line"><span class="javascript">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(err);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CONTROLLER</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">sava</span><span class="params">(String name,Integer age)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;name:&quot;</span>+name);</span><br><span class="line">    System.out.println(<span class="string">&quot;age:&quot;</span>+ age);</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;status&quot;</span>,<span class="number">200</span>);</span><br><span class="line">    map.put(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;成功了！&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>  map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210115150410.png" alt="image-20210110162937316"></p><p>第二种：使用@RequestBody注解</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axiosPost请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;script src=&quot;/static/axios.min.js&quot;&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//post方式请求</span></span></span><br><span class="line"><span class="javascript">        axios.post(<span class="string">&#x27;http://127.0.0.1:8888/axios/save&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">            name: <span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line">            age: 34</span><br><span class="line"><span class="javascript">        &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(response.data);</span></span><br><span class="line"><span class="javascript">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(err);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">sava</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;user:&quot;</span> + user);</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;status&quot;</span>,<span class="number">200</span>);</span><br><span class="line">    map.put(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;成功了！&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>  map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210115150411.png" alt="image-20210110163120410"></p><h1 id="axios并发请求"><a href="#axios并发请求" class="headerlink" title="axios并发请求"></a>axios并发请求</h1><blockquote><p>并发请求：在同一时间发送多个不同的请求到后端服务，最后统一处理不同服务的响应结果</p><ol><li>针对于并发请求需要用到axios.all()函数来完成并发请求的处理</li><li>针对于并发请求的结果汇总需要使用axios.spread()函数来统一汇总请求结果</li></ol></blockquote><ol><li>html界面</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axiosPost请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;script src=&quot;/static/axios.min.js&quot;&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//axios并行请求</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">findAll</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">return</span>  axios.get(<span class="string">&#x27;http://127.0.0.1:8888/axios/findAll?username=zhangsan&amp;age=89&#x27;</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">return</span>  axios.post(<span class="string">&#x27;http://127.0.0.1:8888/axios/save&#x27;</span>,&#123;<span class="attr">name</span>: <span class="string">&#x27;lisi&#x27;</span>,<span class="attr">age</span>: <span class="string">&#x27;99&#x27;</span>&#125;)</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        axios.all([findAll(),save()]).then(axios.spread(<span class="function"><span class="keyword">function</span> (<span class="params">result1,result2</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(result1);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(result2);</span></span><br><span class="line">        &#125;))</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210115150412.png" alt="image-20210110172301066"></p>]]></content>
      
      
      <categories>
          
          <category> Axios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot+Element+EasyPOI实现上传 下载</title>
      <link href="2021/01/15/springboot-element-easypoi-shi-xian-shang-chuan-xia-zai/"/>
      <url>2021/01/15/springboot-element-easypoi-shi-xian-shang-chuan-xia-zai/</url>
      
        <content type="html"><![CDATA[<p><strong>SpringBoot+Element+EasyPOI实现上传下载</strong></p><blockquote><p>表格的导出无法使用ajax请求</p><p>必须使用window.open()</p><p>或者window.location.href()</p></blockquote><h1 id="简单表格"><a href="#简单表格" class="headerlink" title="简单表格"></a>简单表格</h1><h2 id="引入相关依赖"><a href="#引入相关依赖" class="headerlink" title="引入相关依赖"></a>引入相关依赖</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"> &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-jdbc&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">            &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">            &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--        引入相关依赖--&gt;</span><br><span class="line">&lt;!--        引入mybatis--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.1.3&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">&lt;!--        引入mysql--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">&lt;!--        引入druid--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;druid&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.19&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">&lt;!--        引入thymeleaf--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!--    easyPOI依赖引入--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-base&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-web&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-annotation&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改配置application-yml"><a href="#修改配置application-yml" class="headerlink" title="修改配置application.yml"></a>修改配置application.yml</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: <span class="number">8989</span></span><br><span class="line">spring:</span><br><span class="line">  thymeleaf:</span><br><span class="line">    cache: <span class="keyword">false</span></span><br><span class="line">  datasource:</span><br><span class="line">    type: com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//localhost:3306/easypoi?serverTimezone=CTT&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line">  application:</span><br><span class="line">    name: easypoi</span><br><span class="line">  web:</span><br><span class="line">    resources:</span><br><span class="line">      <span class="keyword">static</span>-locations: classpath:/<span class="keyword">static</span>/,file:$&#123;upload&#125;</span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:com/easypoitry/easypoi_springboot/mapper<span class="comment">/*.xml</span></span><br><span class="line"><span class="comment">  type-aliases-package: com.easypoi.easypoi_springboot.entity</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">upload:</span></span><br><span class="line"><span class="comment">  E:\IntellijTry\easypoi\easypoi_springboot\src\main\resources\static\images</span></span><br></pre></td></tr></table></figure><h2 id="构建User实体类"><a href="#构建User实体类" class="headerlink" title="构建User实体类"></a>构建User实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ExcelTarget(&quot;users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;编号&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;姓名&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;生日&quot;,format = &quot;yyyy年MM月dd日&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date bir;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;爱好&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String habbys;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;身份证号码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String no;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;头像信息&quot;,type = 2,savePath = &quot;E:\\IntellijTry\\easypoi\\easypoi_springboot\\src\\main\\resources\\static\\images&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String photo;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;地址&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建UserController"><a href="#创建UserController" class="headerlink" title="创建UserController"></a>创建UserController</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    导入excel</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/import&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">importExcel</span><span class="params">(MultipartFile excelFile)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      log.info(<span class="string">&quot;文件名： [&#123;&#125;]&quot;</span>,excelFile.getOriginalFilename());</span><br><span class="line"></span><br><span class="line"><span class="comment">//      excel开始导入</span></span><br><span class="line">        ImportParams params = <span class="keyword">new</span> ImportParams();</span><br><span class="line">        params.setTitleRows(<span class="number">1</span>);</span><br><span class="line">        params.setHeadRows(<span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 主键设置，如果这个cell没有值，就被认为无效数据，参数为列序号</span></span><br><span class="line">        params.setKeyIndex(<span class="number">0</span>);</span><br><span class="line">        List&lt;User&gt; users = ExcelImportUtil.importExcel(excelFile.getInputStream(), User.class, params);</span><br><span class="line">        users.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        导入数据库</span></span><br><span class="line">        <span class="keyword">this</span>.userService.saveAll(users);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/user/findAll&quot;</span>;      <span class="comment">//上传完成后重新回到查询所有界面，使用重定向</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;upload&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String realPath;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/export&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exportExcel</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">//        查询所有</span></span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">this</span>.userService.findAll();</span><br><span class="line"><span class="comment">//        重写photo的路径</span></span><br><span class="line">        users.forEach(user -&gt; &#123;</span><br><span class="line">            user.setPhoto(realPath+<span class="string">&quot;/&quot;</span>+user.getPhoto());</span><br><span class="line">        &#125;);</span><br><span class="line"><span class="comment">//        excel导出</span></span><br><span class="line">        Workbook workbook = ExcelExportUtil.exportExcel(<span class="keyword">new</span> ExportParams(<span class="string">&quot;用户信息列表&quot;</span>, <span class="string">&quot;用户信息&quot;</span>), User.class, users);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//        借助response输出</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;content-disposition&quot;</span>,<span class="string">&quot;attachment;filename=&quot;</span>+ URLEncoder.encode(<span class="string">&quot;用户信息输出.xls&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">        ServletOutputStream outputStream = response.getOutputStream();</span><br><span class="line">        workbook.write(outputStream);</span><br><span class="line">        outputStream.close();</span><br><span class="line">        workbook.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//    查询所有</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">findAll</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">this</span>.userService.findAll();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;users&quot;</span>,users);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建UserService"><a href="#创建UserService" class="headerlink" title="创建UserService"></a>创建UserService</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional(propagation = Propagation.SUPPORTS)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    实现保存数据库savaAll</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAll</span><span class="params">(List&lt;User&gt; users)</span> </span>&#123;</span><br><span class="line">        users.forEach(e-&gt;&#123;</span><br><span class="line">            e.setId(<span class="keyword">null</span>);</span><br><span class="line">            String fileName = e.getPhoto().substring(e.getPhoto().lastIndexOf(<span class="string">&quot;\\&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">            e.setPhoto(fileName);</span><br><span class="line">            <span class="keyword">this</span>.userMapper.save(e);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建UserMapper"><a href="#创建UserMapper" class="headerlink" title="创建UserMapper"></a>创建UserMapper</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;SELECT id,name,bir,habbys,no,photo,address from t_user&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    将user数据保存到数据库中</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into t_user values (#&#123;id&#125;,#&#123;name&#125;,#&#123;bir&#125;,#&#123;habbys&#125;,#&#123;no&#125;,#&#123;photo&#125;,#&#123;address&#125;)&quot;)</span></span><br><span class="line">    <span class="meta">@Options(useGeneratedKeys = true,keyProperty = &quot;id&quot;)</span>   <span class="comment">//设置id自增长</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(User e)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="项目导出多sheetbiaoge"><a href="#项目导出多sheetbiaoge" class="headerlink" title="项目导出多sheetbiaoge"></a>项目导出多sheetbiaoge</h1><h2 id="pom依赖"><a href="#pom依赖" class="headerlink" title="pom依赖"></a>pom依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        依赖引入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.19<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-base<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-annotation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        导出ppt的poi所需依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-scratchpad<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="yml"><a href="#yml" class="headerlink" title="yml"></a>yml</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8090</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/ibot?serverTimezone=CTT&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">docImp</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:com/docimp/docimp/mapper/*.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.docimp.docimp.entity</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实现多sheet表格导出controller"><a href="#实现多sheet表格导出controller" class="headerlink" title="实现多sheet表格导出controller"></a>实现多sheet表格导出controller</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/exportExcel&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exportExcel</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第一个sheet内容，</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; callPlan = <span class="keyword">this</span>.userService.selectCallPlan();</span><br><span class="line"></span><br><span class="line">        ExportParams callPlanExportParams = <span class="keyword">new</span> ExportParams();</span><br><span class="line">        callPlanExportParams.setSheetName(<span class="string">&quot;sheet1name&quot;</span>);</span><br><span class="line">        <span class="comment">//创建sheet1使用的map</span></span><br><span class="line">        Map&lt;String, Object&gt; callPlanMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//title参数为ExportParms类型</span></span><br><span class="line">        callPlanMap.put(<span class="string">&quot;title&quot;</span>, callPlanExportParams);</span><br><span class="line">        <span class="comment">//导出模板对应的实体类</span></span><br><span class="line">        callPlanMap.put(<span class="string">&quot;entity&quot;</span>, User.class);</span><br><span class="line">        <span class="comment">//sheet中要填充的数据</span></span><br><span class="line">        callPlanMap.put(<span class="string">&quot;data&quot;</span>, callPlan);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第二个sheet内容</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        List&lt;User&gt; repeatList = <span class="keyword">this</span>.userService.selectRepeatList();</span><br><span class="line"></span><br><span class="line">        ExportParams repeatListExportParams = <span class="keyword">new</span> ExportParams();</span><br><span class="line">        repeatListExportParams.setSheetName(<span class="string">&quot;sheet2name&quot;</span>);</span><br><span class="line">        Map&lt;String, Object&gt; repeatListMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        repeatListMap.put(<span class="string">&quot;title&quot;</span>, repeatListExportParams);</span><br><span class="line">        repeatListMap.put(<span class="string">&quot;entity&quot;</span>, User.class);</span><br><span class="line">        repeatListMap.put(<span class="string">&quot;data&quot;</span>, repeatList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第三个sheet内容</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        List&lt;UserPhone&gt; repeatPhone = <span class="keyword">this</span>.userService.selectRepeatPhone();</span><br><span class="line"></span><br><span class="line">        ExportParams repeatPhoneExportParams = <span class="keyword">new</span> ExportParams();</span><br><span class="line">        repeatPhoneExportParams.setSheetName(<span class="string">&quot;sheet3name&quot;</span>);</span><br><span class="line">        Map&lt;String, Object&gt; repeatPhoneMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        repeatPhoneMap.put(<span class="string">&quot;title&quot;</span>, repeatPhoneExportParams);</span><br><span class="line">        repeatPhoneMap.put(<span class="string">&quot;entity&quot;</span>, UserPhone.class);</span><br><span class="line">        repeatPhoneMap.put(<span class="string">&quot;data&quot;</span>, repeatPhone);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第4个sheet内容</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        List&lt;User&gt; repeatPhoneNotCall = <span class="keyword">this</span>.userService.selectRepeatPhoneNotCall();</span><br><span class="line">        ExportParams repeatPhoneNotCallEportParams = <span class="keyword">new</span> ExportParams();</span><br><span class="line">        repeatPhoneNotCallEportParams.setSheetName(<span class="string">&quot;sheet4name&quot;</span>);</span><br><span class="line">        Map&lt;String, Object&gt; repeatPhoneNotCallMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        repeatPhoneNotCallMap.put(<span class="string">&quot;title&quot;</span>, repeatPhoneNotCallEportParams);</span><br><span class="line">        repeatPhoneNotCallMap.put(<span class="string">&quot;entity&quot;</span>, User.class);</span><br><span class="line">        repeatPhoneNotCallMap.put(<span class="string">&quot;data&quot;</span>, repeatPhoneNotCall);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第5个sheet内容</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        List&lt;User&gt; repeatPhoneBetterList = <span class="keyword">this</span>.userService.selectRepeatPhoneBetterList();</span><br><span class="line">        ExportParams repeatPhoneBetterListExportParams = <span class="keyword">new</span> ExportParams();</span><br><span class="line">        repeatPhoneBetterListExportParams.setSheetName(<span class="string">&quot;sheet5name&quot;</span>);</span><br><span class="line">        Map&lt;String, Object&gt; repeatPhoneBetterListMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        repeatPhoneBetterListMap.put(<span class="string">&quot;title&quot;</span>, repeatPhoneBetterListExportParams);</span><br><span class="line">        repeatPhoneBetterListMap.put(<span class="string">&quot;entity&quot;</span>, User.class);</span><br><span class="line">        repeatPhoneBetterListMap.put(<span class="string">&quot;data&quot;</span>, repeatPhoneBetterList);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//        创建一个sheet集合</span></span><br><span class="line">        ArrayList&lt;Map&lt;String, Object&gt;&gt; sheetsList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        sheetsList.add(callPlanMap);</span><br><span class="line">        sheetsList.add(repeatListMap);</span><br><span class="line">        sheetsList.add(repeatPhoneMap);</span><br><span class="line">        sheetsList.add(repeatPhoneNotCallMap);</span><br><span class="line">        sheetsList.add(repeatPhoneBetterListMap);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="comment">//        执行excel导出</span></span><br><span class="line">        Workbook workbook = ExcelExportUtil.exportExcel(sheetsList, ExcelType.HSSF);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        输出下载reponse</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;content-disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + URLEncoder.encode(<span class="string">&quot;输出excel.xls&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">        ServletOutputStream outputStream = response.getOutputStream();</span><br><span class="line">        workbook.write(outputStream);</span><br><span class="line">        outputStream.close();</span><br><span class="line">        workbook.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> POI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EasyPOI </tag>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EasyPOI学习笔记</title>
      <link href="2021/01/14/easypoi-xue-xi-bi-ji/"/>
      <url>2021/01/14/easypoi-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="http://www.wupaas.com/">官网地址</a></p><p><a href="https://gitee.com/lemur/easypoi">码云地址</a></p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>easypoi父包</p></li><li><p>easypoi-annotation基础注解包，作用与实体对象上，拆分后方便maven多工程的依赖管理；</p></li><li><p>easypoi-base导入导出工具包，可以完成excel导出、导入，word导出导入；</p></li><li><p>easypoi-web耦合了spring-mvc基于abstractview，极大简化了spring-mvc下的导出功能；</p></li><li><p>sax导入使用xercesImpl这个包（这个包可能有问题），word导出使用poi-scratchpad，都已作为可选包</p></li></ol><p>  maven坐标如下</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-base<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.afterturn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easypoi-annotation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><ol><li>搭建项目maven</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210107105922.png" alt="image-20210106100733268"></p><h1 id="Easypoi注解"><a href="#Easypoi注解" class="headerlink" title="Easypoi注解"></a>Easypoi注解</h1><h2 id="Excel导入导出"><a href="#Excel导入导出" class="headerlink" title="Excel导入导出"></a>Excel导入导出</h2><p>Excel的导入导出是Easypoi的核心功能,前期基本也是围绕这个打造的,主要分为三种方式的处理,其中模板和Html目前只支持导出,因为支持Map.class其实导入应该是怎样都支持的</p><ul><li>注解方式,注解变种方式</li><li>模板方式</li><li>Html方式</li></ul><p>下面分别就这三种方式进行讲解</p><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><p>注解介绍</p><p>easypoi起因就是Excel的导入导出,最初的模板是实体和Excel的对应,model–row,filed–col 这样利用注解我们可以和容易做到excel到导入导出</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210107105933.png" alt="image-20210106104736345"></p><p>目前注解有五类分别为：</p><ul><li>@Excel 作用到filed上面，是对Excel一列的一个描述</li><li>@ExcelCollection 表示一个集合，主要针对一对多的导出，eg一个教师对应多个科目，科目就可以用集合表示</li><li>@ExcelEntity 表示一个继续深入导出的实体，但无过多实际意义，只是告诉系统这个对象里同样有导出的字段</li><li>@Excelgnore 和名字一样表示这个字段被忽略跳过这个导出</li><li>@ExcelTarget 这个是作用于最外层的对象，描述这个对象的id，以便支持一个对象可以针对不同导出做出不同处理</li></ul><h3 id="Excel参数"><a href="#Excel参数" class="headerlink" title="@Excel参数"></a>@Excel参数</h3><blockquote><p>这个是必须使用的注解,如果需求简单只使用这一个注解也是可以的,涵盖了常用的Excel需求,需要大家熟悉这个功能,主要分为基础,图片处理,时间处理,合并处理几块,name_id是上面讲的id用法,这里就不累言了</p></blockquote><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th align="center">功能</th></tr></thead><tbody><tr><td>name</td><td>String</td><td>null</td><td align="center">列名,支持name_id</td></tr><tr><td>needMerge</td><td>boolean</td><td>fasle</td><td align="center">是否需要纵向合并单元格(用于含有list中,单个的单元格,合并list创建的多个row)</td></tr><tr><td>orderNum</td><td>String</td><td>“0”</td><td align="center">列的排序,支持name_id</td></tr><tr><td>replace</td><td>String[]</td><td>{}</td><td align="center">值得替换  导出是{a_id,b_id} 导入反过来</td></tr><tr><td>savePath</td><td>String</td><td>“upload”</td><td align="center">导入文件保存路径,如果是图片可以填写,默认是upload/className/ IconEntity这个类对应的就是upload/Icon/</td></tr><tr><td>type</td><td>int</td><td>1</td><td align="center">导出类型 1 是文本 2 是图片,3 是函数,10 是数字 默认是文本</td></tr><tr><td>width</td><td>double</td><td>10</td><td align="center">列宽</td></tr><tr><td>height</td><td>double</td><td>10</td><td align="center"><strong>列高,后期打算统一使用@ExcelTarget的height,这个会被废弃,注意</strong></td></tr><tr><td>isStatistics</td><td>boolean</td><td>fasle</td><td align="center">自动统计数据,在追加一行统计,把所有数据都和输出 <strong>这个处理会吞没异常,请注意这一点</strong></td></tr><tr><td>isHyperlink</td><td>boolean</td><td>false</td><td align="center">超链接,如果是需要实现接口返回对象</td></tr><tr><td>isImportField</td><td>boolean</td><td>true</td><td align="center">校验字段,看看这个字段是不是导入的Excel中有,如果没有说明是错误的Excel,读取失败,支持name_id</td></tr><tr><td>exportFormat</td><td>String</td><td>“”</td><td align="center">导出的时间格式,以这个是否为空来判断是否需要格式化日期</td></tr><tr><td>importFormat</td><td>String</td><td>“”</td><td align="center">导入的时间格式,以这个是否为空来判断是否需要格式化日期</td></tr><tr><td>format</td><td>String</td><td>“”</td><td align="center">时间格式,相当于同时设置了exportFormat 和 importFormat</td></tr><tr><td>databaseFormat</td><td>String</td><td>“yyyyMMddHHmmss”</td><td align="center">导出时间设置,如果字段是Date类型则不需要设置 数据库如果是string 类型,这个需要设置这个数据库格式,用以转换时间格式输出</td></tr><tr><td>numFormat</td><td>String</td><td>“”</td><td align="center">数字格式化,参数是Pattern,使用的对象是DecimalFormat</td></tr><tr><td>imageType</td><td>int</td><td>1</td><td align="center">导出类型 1 从file读取 2 是从数据库中读取 默认是文件 同样导入也是一样的</td></tr><tr><td>suffix</td><td>String</td><td>“”</td><td align="center">文字后缀,如% 90 变成90%</td></tr><tr><td>isWrap</td><td>boolean</td><td>true</td><td align="center">是否换行 即支持\n</td></tr><tr><td>mergeRely</td><td>int[]</td><td>{}</td><td align="center">合并单元格依赖关系,比如第二列合并是基于第一列 则{0}就可以了</td></tr><tr><td>mergeVertical</td><td>boolean</td><td>fasle</td><td align="center">纵向合并内容相同的单元格</td></tr><tr><td>fixedIndex</td><td>int</td><td>-1</td><td align="center">对应excel的列,忽略名字</td></tr><tr><td>isColumnHidden</td><td>boolean</td><td>false</td><td align="center">导出隐藏列</td></tr></tbody></table><h3 id="ExcelTarget参数"><a href="#ExcelTarget参数" class="headerlink" title="@ExcelTarget参数"></a>@ExcelTarget参数</h3><blockquote><p>限定一个到处实体的注解,以及一些通用设置,作用于最外面的实体</p></blockquote><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>功能</th></tr></thead><tbody><tr><td>value</td><td>String</td><td>null</td><td>定义ID</td></tr><tr><td>height</td><td>double</td><td>10</td><td>设置行高</td></tr><tr><td>fontSize</td><td>short</td><td>11</td><td>设置文字大小</td></tr></tbody></table><h3 id="ExcelEntity"><a href="#ExcelEntity" class="headerlink" title="@ExcelEntity"></a>@ExcelEntity</h3><blockquote><p>标记是不是导出excel 标记为实体类,一遍是一个内部属性类,标记是否继续穿透,可以自定义内部id</p></blockquote><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>功能</th></tr></thead><tbody><tr><td>id</td><td>String</td><td>null</td><td>定义ID</td></tr></tbody></table><h3 id="ExcelCollection"><a href="#ExcelCollection" class="headerlink" title="@ExcelCollection"></a>@ExcelCollection</h3><blockquote><p>一对多的集合注解,用以标记集合是否被数据以及集合的整体排序</p></blockquote><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>功能</th></tr></thead><tbody><tr><td>id</td><td>String</td><td>null</td><td>定义ID</td></tr><tr><td>name</td><td>String</td><td>null</td><td>定义集合列名,支持nanm_id</td></tr><tr><td>orderNum</td><td>int</td><td>0</td><td>排序,支持name_id</td></tr><tr><td>type</td><td>Class&lt;?&gt;</td><td>ArrayList.class</td><td>导入时创建对象使用</td></tr></tbody></table><h3 id="ExcelIgnore"><a href="#ExcelIgnore" class="headerlink" title="@ExcelIgnore"></a>@ExcelIgnore</h3><blockquote><p>忽略这个属性,多使用需循环引用中,无需多解释吧^^,添加此注解后此元素不会被导出excel</p></blockquote><h1 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h1><h2 id="搭建一个简单的项目"><a href="#搭建一个简单的项目" class="headerlink" title="搭建一个简单的项目"></a>搭建一个简单的项目</h2><h3 id="新建实体类user"><a href="#新建实体类user" class="headerlink" title="新建实体类user"></a>新建实体类user</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.Excel;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.ExcelTarget;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ExcelTarget(&quot;users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Excel(name = &quot;身份标识&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;姓名&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;年龄&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;生日&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date dir;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105617.png" alt="image-20210106112034729"></p><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105618.png" alt="image-20210106123818441"></p><h3 id="新建测试类实现方法"><a href="#新建测试类实现方法" class="headerlink" title="新建测试类实现方法"></a>新建测试类实现方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.easypoiTry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.assertTrue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.ExcelExportUtil;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.ExportParams;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.params.ExcelExportEntity;</span><br><span class="line"><span class="keyword">import</span> com.easypoiTry.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Unit test for simple App.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppTest</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Rigorous Test :-)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    模拟数据库记录</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUsers</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setId(i);</span><br><span class="line">            user.setName(<span class="string">&quot;Hmoumou_&quot;</span>+i);</span><br><span class="line">            user.setAge(<span class="number">20</span>+i);</span><br><span class="line">            user.setDir(<span class="keyword">new</span> Date());</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                user.setStatus(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">                user.setHobby(Arrays.asList(<span class="string">&quot;睡觉&quot;</span>,<span class="string">&quot;吃饭&quot;</span>));</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                user.setStatus(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">                user.setHobby(Arrays.asList(<span class="string">&quot;嫦娥&quot;</span>,<span class="string">&quot;游泳&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            users.add(user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    导出excel表</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExport</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">//        获取数据</span></span><br><span class="line">        List&lt;User&gt; users = getUsers();</span><br><span class="line"><span class="comment">//      导出excel</span></span><br><span class="line"><span class="comment">//        参数1excelParams：导出配置对象；参数2：导出的类型；参数3：导出的数据集合</span></span><br><span class="line">        Workbook workbook = ExcelExportUtil.exportExcel(<span class="keyword">new</span> ExportParams(<span class="string">&quot;用户列表测试&quot;</span>, <span class="string">&quot;用户信息&quot;</span>), User.class, users);</span><br><span class="line"><span class="comment">//      将excel写入指定位置</span></span><br><span class="line">        FileOutputStream outputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;C:\\Users\\H某人\\Desktop\\测试excel输出.xls&quot;</span>);</span><br><span class="line">        workbook.write(outputStream);</span><br><span class="line">        outputStream.close();</span><br><span class="line">        workbook.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shouldAnswerWithTrue</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        assertTrue( <span class="keyword">true</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="导出list集合"><a href="#导出list集合" class="headerlink" title="导出list集合"></a>导出list集合</h3><p>默认样式如下</p><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105619.png" alt="image-20210106131049276"></p><p>如果不想使用中括号，可以操作如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@ExcelIgnore</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobby;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Excel(name = &quot;爱好&quot;,width = 20.0,orderNum = &quot;5&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String hobbystr;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以通过hobbystr转换一下</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHobbystr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        hobby.forEach(e-&gt;&#123;</span><br><span class="line">            sb.append(e).append(<span class="string">&quot;、&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20210115145813.png" alt="image-20210106132721729"></p><h3 id="一对一关系对象导入"><a href="#一对一关系对象导入" class="headerlink" title="一对一关系对象导入"></a>一对一关系对象导入</h3><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105621.png" alt="image-20210106134331513"></p><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105622.png" alt="image-20210106134345161"></p><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105623.png" alt="image-20210106134358980"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.easypoiTry.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.Excel;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.ExcelTarget;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ExcelTarget(&quot;cards&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Card</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;身份证号码&quot;,width = 30.0,orderNum = &quot;6&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String cardId;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;地址&quot;,width = 40.0,orderNum = &quot;7&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.easypoiTry.entity;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.Excel;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.ExcelEntity;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.ExcelIgnore;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.ExcelTarget;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hmoumou</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ExcelTarget(&quot;users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Excel(name = &quot;身份标识&quot;,orderNum = &quot;0&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;姓名&quot;,orderNum = &quot;1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"><span class="comment">//    suffix添加后缀</span></span><br><span class="line">    <span class="meta">@Excel(name = &quot;年龄&quot;,orderNum = &quot;3&quot;,suffix = &quot;岁&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"><span class="comment">//    width是输出时excel的列宽设置，orderNum是输出顺序</span></span><br><span class="line">    <span class="meta">@Excel(name = &quot;生日&quot;,width = 20.0,orderNum = &quot;2&quot;,format = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date dir;</span><br><span class="line"><span class="comment">//replace中利用前值替换后值</span></span><br><span class="line">    <span class="meta">@Excel(name = &quot;状态&quot;,replace = &#123;&quot;注册_1&quot;,&quot;未注册_0&quot;&#125;,orderNum = &quot;4&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Excel(name = &quot;爱好&quot;,orderNum = &quot;5&quot;,width = 20.0)</span></span><br><span class="line">    <span class="meta">@ExcelIgnore</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobby;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Excel(name = &quot;爱好&quot;,width = 20.0,orderNum = &quot;5&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String hobbystr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHobbystr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        hobby.forEach(e-&gt;&#123;</span><br><span class="line">            sb.append(e).append(<span class="string">&quot;、&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelEntity</span> <span class="comment">//标识一对一关系</span></span><br><span class="line">    <span class="keyword">private</span> Card card;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.easypoiTry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.assertTrue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.ExcelExportUtil;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.ExportParams;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.params.ExcelExportEntity;</span><br><span class="line"><span class="keyword">import</span> com.easypoiTry.entity.Card;</span><br><span class="line"><span class="keyword">import</span> com.easypoiTry.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Unit test for simple App.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppTest</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Rigorous Test :-)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    模拟数据库记录</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUsers</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setId(i);</span><br><span class="line">            user.setName(<span class="string">&quot;Hmoumou_&quot;</span>+i);</span><br><span class="line">            user.setAge(<span class="number">20</span>+i);</span><br><span class="line">            user.setDir(<span class="keyword">new</span> Date());</span><br><span class="line">            Card card = <span class="keyword">new</span> Card();</span><br><span class="line">            card.setCardId(<span class="string">&quot;428758188805984585&quot;</span>);</span><br><span class="line">            card.setAddress(<span class="string">&quot;遍地是家&quot;</span>);</span><br><span class="line">            user.setCard(card);</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                user.setStatus(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">                user.setHobby(Arrays.asList(<span class="string">&quot;睡觉&quot;</span>,<span class="string">&quot;吃饭&quot;</span>));</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                user.setStatus(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">                user.setHobby(Arrays.asList(<span class="string">&quot;嫦娥&quot;</span>,<span class="string">&quot;游泳&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            users.add(user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    导出excel表</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExport</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">//        获取数据</span></span><br><span class="line">        List&lt;User&gt; users = getUsers();</span><br><span class="line"><span class="comment">//      导出excel</span></span><br><span class="line"><span class="comment">//        参数1excelParams：导出配置对象；参数2：导出的类型；参数3：导出的数据集合</span></span><br><span class="line">        Workbook workbook = ExcelExportUtil.exportExcel(<span class="keyword">new</span> ExportParams(<span class="string">&quot;用户列表测试&quot;</span>, <span class="string">&quot;用户信息&quot;</span>), User.class, users);</span><br><span class="line"><span class="comment">//      将excel写入指定位置</span></span><br><span class="line">        FileOutputStream outputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;C:\\Users\\H某人\\Desktop\\测试excel输出.xls&quot;</span>);</span><br><span class="line">        workbook.write(outputStream);</span><br><span class="line">        outputStream.close();</span><br><span class="line">        workbook.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shouldAnswerWithTrue</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        assertTrue( <span class="keyword">true</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="一对多集合导出"><a href="#一对多集合导出" class="headerlink" title="一对多集合导出"></a>一对多集合导出</h3><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105624.png" alt="image-20210106135847534"></p><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105625.png" alt="image-20210106135859567"></p><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105626.png" alt="image-20210106135913624"></p><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105627.png" alt="image-20210106135924676"></p><h3 id="图片导出"><a href="#图片导出" class="headerlink" title="图片导出"></a>图片导出</h3><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105628.png" alt="image-20210106141433340"></p><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105629.png" alt="image-20210106141443074"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    type为2才能被是被为图片显示</span></span><br><span class="line">    <span class="meta">@Excel(name = &quot;头像信息&quot;,orderNum = &quot;9&quot;,width = 60.0,height = 60.0,type = 2,imageType = 1)</span></span><br><span class="line">    <span class="keyword">private</span> String photo;</span><br></pre></td></tr></table></figure><h3 id="大数据导出"><a href="#大数据导出" class="headerlink" title="大数据导出"></a>大数据导出</h3><p>使用exportBigExcel</p><h1 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h1><h2 id="简单导入实现"><a href="#简单导入实现" class="headerlink" title="简单导入实现"></a>简单导入实现</h2><h3 id="创建对应实体类"><a href="#创建对应实体类" class="headerlink" title="创建对应实体类"></a>创建对应实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.easypoiTry.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.Excel;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.annotation.ExcelTarget;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ExcelTarget(&quot;imps&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">emp</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Excel(name = &quot;编号&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;姓名&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;生日&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date bir;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;年龄&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@Excel(name = &quot;状态&quot;,replace = &#123;&quot;激活_1&quot;,&quot;锁定_0&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="写测试类"><a href="#写测试类" class="headerlink" title="写测试类"></a>写测试类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入普通数据</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testImport</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    ImportParams params = <span class="keyword">new</span> ImportParams();</span><br><span class="line">    params.setTitleRows(<span class="number">1</span>);</span><br><span class="line">    params.setHeadRows(<span class="number">1</span>);</span><br><span class="line">    List&lt;emp&gt; emps = ExcelImportUtil.importExcel(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;C:\\Users\\H某人\\Desktop\\导入测试数据.xls&quot;</span>), emp.class, params);</span><br><span class="line">    emps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="导入技巧"><a href="#导入技巧" class="headerlink" title="导入技巧"></a>导入技巧</h2><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105630.png" alt="image-20210106145937683"></p><h1 id="springboot项目实战"><a href="#springboot项目实战" class="headerlink" title="springboot项目实战"></a>springboot项目实战</h1><h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><h3 id="新建springboot项目"><a href="#新建springboot项目" class="headerlink" title="新建springboot项目"></a>新建springboot项目</h3><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105631.png" alt="image-20210106152307461"></p><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105632.png" alt="image-20210106152342510"></p><h3 id="引入相关依赖"><a href="#引入相关依赖" class="headerlink" title="引入相关依赖"></a>引入相关依赖</h3><ul><li>mybatis</li><li>mysql</li><li>druid</li><li>easypoi</li><li>thymeleaf</li><li>lombok</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"> &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">            &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">     &lt;!--        引入相关依赖--&gt;</span><br><span class="line">&lt;!--        引入mybatis--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.1.3&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">&lt;!--        引入mysql--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">&lt;!--        引入druid--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;druid&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.19&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">&lt;!--        引入thymeleaf--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!--    easyPOI依赖引入--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-base&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-web&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-annotation&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="编写配置文件application-yml"><a href="#编写配置文件application-yml" class="headerlink" title="编写配置文件application.yml"></a>编写配置文件application.yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8989</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/easypoi?serverTimezone=CTT&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">easypoi</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:com/easypoitry/easypoi_springboot/mapper/*.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.easypoi.easypoi_springboot.entity</span></span><br></pre></td></tr></table></figure><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p><img src="https://tuchuang-1300286880.cos.ap-shanghai.myqcloud.com/img/20210107105633.png" alt="image-20210106154902079"></p><h3 id="简易前端"><a href="#简易前端" class="headerlink" title="简易前端"></a>简易前端</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-12&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>选择Excel文件导入到数据中<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-inline&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;excelFile&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span> <span class="attr">value</span>=<span class="string">&quot;导入数据&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-12&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>显示导入数据列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>头像<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>生日<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Hmouren<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>23<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2021.01.01<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Hmouren<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>23<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2021.01.01<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span> <span class="attr">value</span>=<span class="string">&quot;导出excel&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="建库建表"><a href="#建库建表" class="headerlink" title="建库建表"></a>建库建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Navicat MySQL Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Source Server         : 201705092006</span></span><br><span class="line"><span class="comment">Source Server Version : 50726</span></span><br><span class="line"><span class="comment">Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment">Source Database       : easypoi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Target Server Type    : MYSQL</span></span><br><span class="line"><span class="comment">Target Server Version : 50726</span></span><br><span class="line"><span class="comment">File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Date: 2021-01-06 16:19:52</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for t_user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `t_user`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_user` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `bir` <span class="type">timestamp</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> <span class="keyword">ON</span> UPDATE <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  `habbys` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `<span class="keyword">no</span>` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `photo` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `address` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>MyISAM <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of t_user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> POI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EasyPOI </tag>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双系统配置Elastic Beats</title>
      <link href="2020/12/31/shuang-xi-tong-pei-zhi-elastic-beats/"/>
      <url>2020/12/31/shuang-xi-tong-pei-zhi-elastic-beats/</url>
      
        <content type="html"><![CDATA[<blockquote><p>既ELK配置后，继续配置Elastic Beats组件</p><p>上一链接<a href="https://blog.csdn.net/weixin_45891980/article/details/111941237">双系统配置ELK</a></p><p>filebeat、metricbeat、packetbeat、winlogbeat、heartbeat</p></blockquote><p><strong>一些命令要使用 windows PowerShell运行！！！！  管理员权限</strong></p><h1 id="Win下配置上述Beats"><a href="#Win下配置上述Beats" class="headerlink" title="Win下配置上述Beats"></a>Win下配置上述Beats</h1><h2 id="一、配置运行filebeat"><a href="#一、配置运行filebeat" class="headerlink" title="一、配置运行filebeat"></a>一、配置运行filebeat</h2><blockquote><p>顾名思义，Filebeat用于收集和传送日志文件，它也是最常用的Beat。 Filebeat如此高效的事实之一就是它处理背压的方式-因此，如果Logstash繁忙，Filebeat会减慢其读取速率，并在减速结束后加快节奏。<br>Filebeat几乎可以安装在任何操作系统上，包括作为Docker容器安装，还随附用于特定平台（例如Apache，MySQL，Docker等）的内部模块，其中包含这些平台的默认配置和Kibana对象。</p></blockquote><ol><li>安装对应版本解压</li><li>修改配置文件filebeat.yml</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Change to true to enable this input configuration.</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Paths that should be crawled and fetched. Glob based paths.</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">E:\App\logstash\logs\logstash-plain.log</span></span><br><span class="line">    <span class="comment">#- c:\programdata\elasticsearch\logs\*</span></span><br><span class="line">  <span class="attr">setup.kibana:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">&quot;localhost:5601&quot;</span></span><br><span class="line">  <span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="comment"># Array of hosts to connect to.</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br></pre></td></tr></table></figure><ol start="3"><li>在filebeat安装目录，启动服务</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filebeat setup</span><br><span class="line">filebeat -e</span><br></pre></td></tr></table></figure><ol start="4"><li>在es-head中查看，完成</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231094557.png" alt="image-20201231094549978"></p><h2 id="二、配置运行metricbeat"><a href="#二、配置运行metricbeat" class="headerlink" title="二、配置运行metricbeat"></a>二、配置运行metricbeat</h2><blockquote><p>Metricbeat是一种非常受欢迎的beat，它收集并报告各种系统和平台的各种系统级度量。 Metricbeat还支持用于从特定平台收集统计信息的内部模块。您可以使用这些模块和称为指标集的metricsets来配置Metricbeat收集指标的频率以及要收集哪些特定指标。</p></blockquote><ol><li><p>下载解压对应版本</p></li><li><p>修改metricbeat配置文件，metricbeat.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">setup.kibana:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;localhost:5601&quot;</span></span><br><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="comment"># Array of hosts to connect to.</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br></pre></td></tr></table></figure></li><li><p>启动</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">metricbeat setup</span><br><span class="line">metricbeat -e</span><br></pre></td></tr></table></figure><p>状态如下</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231095744.png" alt="image-20201231095744299"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231095806.png" alt="image-20201231095738520"></p><h2 id="三、配置运行packetbeat"><a href="#三、配置运行packetbeat" class="headerlink" title="三、配置运行packetbeat"></a>三、配置运行packetbeat</h2><blockquote><p>网络数据包分析器Packetbeat是第一个引入的beat。 Packetbeat捕获服务器之间的网络流量，因此可用于应用程序和性能监视。<br>Packetbeat可以安装在受监视的服务器上，也可以安装在其专用服务器上。 Packetbeat跟踪网络流量，解码协议并记录每笔交易的数据。 Packetbeat支持的协议包括：DNS，HTTP，ICMP，Redis，MySQL，MongoDB，Cassandra等。</p></blockquote><ol><li><p>下载安装<a href="https://www.winpcap.org/install/default.htm">WinPcap</a></p></li><li><p>下载解压对应版本</p></li><li><p>在安装目录下执行命令，install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install-service-packetbeat.ps1</span><br></pre></td></tr></table></figure><p>若执行策略出错，则更改执行策略</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set-executionpolicy remotesigned</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231102239.png" alt="image-20201231102238944"></p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231102451.png" alt="image-20201231102451408"></p><ol start="4"><li>修改packetbeat配置文件packetbeat.yml</li></ol><p>①监听的device</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">packetbeat.interfaces.device:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>②配置协议type ports</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">packetbeat.protocols:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">icmp</span></span><br><span class="line">  <span class="comment"># Enable ICMPv4 and ICMPv6 monitoring. Default: false</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">amqp</span></span><br><span class="line">  <span class="comment"># Configure the ports where to listen for AMQP traffic. You can disable</span></span><br><span class="line">  <span class="comment"># the AMQP protocol by commenting out the list of ports.</span></span><br><span class="line">  <span class="attr">ports:</span> [<span class="number">5672</span>]</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">cassandra</span></span><br><span class="line">  <span class="comment">#Cassandra port for traffic monitoring.</span></span><br><span class="line">  <span class="attr">ports:</span> [<span class="number">9042</span>]</span><br><span class="line">  </span><br><span class="line">  <span class="comment">#加上</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">dns</span></span><br><span class="line">  <span class="comment"># Configure the ports where to listen for DNS traffic. You can disable</span></span><br><span class="line">  <span class="comment"># the DNS protocol by commenting out the list of ports.</span></span><br><span class="line">  <span class="attr">ports:</span> [<span class="number">53</span>]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># include_authorities controls whether or not the dns.authorities field</span></span><br><span class="line">  <span class="comment"># (authority resource records) is added to messages.</span></span><br><span class="line">  <span class="attr">include_authorities:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># include_additionals controls whether or not the dns.additionals field</span></span><br><span class="line">  <span class="comment"># (additional resource records) is added to messages.</span></span><br><span class="line">  <span class="attr">include_additionals:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>③配置日志的输出</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="comment"># Array of hosts to connect to.</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">setup.kibana:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;localhost:5601&quot;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>获取windows系统的device来配置packetbeat.interfaces.device</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">packetbeat.exe devices</span><br></pre></td></tr></table></figure><ol start="6"><li>运行packetbeat</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">packetbeat.exe</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">作为服务启动：Start-Service packetbeat</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231113548.png" alt="image-20201231113548614"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231114028.png" alt="image-20201231114028355"></p><h2 id="四、配置运行winlogbeat"><a href="#四、配置运行winlogbeat" class="headerlink" title="四、配置运行winlogbeat"></a>四、配置运行winlogbeat</h2><blockquote><p>Winlogbeat仅会引起Windows系统管理员或工程师的兴趣，因为它是专门为收集Windows事件日志而设计的节拍。 它可用于分析安全事件，已安装的更新等。</p></blockquote><ol><li>解压对应版本</li><li>在安装目录下，安装服务</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install-service-winlogbeat.ps1</span><br></pre></td></tr></table></figure><blockquote><p>如果在系统上禁用了脚本执行，则需要为当前会话设置执行策略以允许脚本运行。 PowerShell.exe -ExecutionPolicy UnRestricted -File .\install-service-winlogbeat.ps1.</p></blockquote><p>或者使用下列命令来关闭一些安全防护，输入后按确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Program Files\Winlogbeat&gt; set-executionpolicy remotesigned</span><br><span class="line">PS C:\Program Files\Winlogbeat&gt; set-executionpolicy Bypass</span><br></pre></td></tr></table></figure><ol start="3"><li>修改winlogbeat的配置文件winlogbeat.yml</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">localhost:9200</span></span><br></pre></td></tr></table></figure><ol start="4"><li>检查文件正确性</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winlogbeat.yml -e</span><br></pre></td></tr></table></figure><ol start="5"><li>启动winlogbeat</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Start-Service winlogbeat</span><br><span class="line"></span><br><span class="line">#启动用这个</span><br><span class="line">winlogbeat.exe -e</span><br></pre></td></tr></table></figure><ol start="6"><li>在kibana或es-head查看即可</li><li><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231125322.png" alt="image-20201231125322879"></li></ol><h2 id="五、配置运行heartbeat"><a href="#五、配置运行heartbeat" class="headerlink" title="五、配置运行heartbeat"></a>五、配置运行heartbeat</h2><blockquote><p>Heartbeat是用于“uptime monitoring”的。本质上，Heartbeat是探测服务以检查它们是否可访问的功能，例如，它可以用来验证服务的正常运行时间是否符合您的SLA。 您要做的就是为Heartbeat提供URL和正常运行时间指标的列表，以直接发送到Elasticsearch或Logstash以便在建立索引之前发送到您的堆栈。</p></blockquote><ol><li>下载对应版本</li><li>安装目录下cmd执行intall脚本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">install-service-heartbeat.ps1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#若执行出错，则</span></span></span><br><span class="line">set-executionpolicy remotesigned</span><br></pre></td></tr></table></figure><p>3.配置heartbeat.yml</p><p>①监听的端口，数据传输类型，请求间隔</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Configure monitors inline</span></span><br><span class="line"><span class="attr">heartbeat.monitors:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">  <span class="comment"># ID used to uniquely identify this monitor in elasticsearch even if the config changes</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">my-monitor</span></span><br><span class="line">  <span class="comment"># Human readable display name for this service in Uptime UI and elsewhere</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">My</span> <span class="string">Monitor</span></span><br><span class="line">  <span class="comment"># List or urls to query</span></span><br><span class="line">  <span class="attr">urls:</span> [<span class="string">&quot;http://localhost:9200&quot;</span>]</span><br><span class="line">  <span class="comment"># Configure task schedule</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">&#x27;@every 10s&#x27;</span></span><br><span class="line">  <span class="comment"># Total test connection and data exchange timeout</span></span><br><span class="line">  <span class="comment">#timeout: 16s</span></span><br></pre></td></tr></table></figure><p>②配置kibana</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">setup.kibana:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Kibana Host</span></span><br><span class="line">  <span class="comment"># Scheme and port can be left out and will be set to the default (http and 5601)</span></span><br><span class="line">  <span class="comment"># In case you specify and additional path, the scheme is required: http://localhost:5601/path</span></span><br><span class="line">  <span class="comment"># IPv6 addresses should always be defined as: https://[2001:db8::1]:5601</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;localhost:5601&quot;</span></span><br></pre></td></tr></table></figure><p>③配置message输出</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="comment"># Array of hosts to connect to.</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br></pre></td></tr></table></figure><ol start="4"><li>运行heartbeat</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heartbeat.exe</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">作为windows服务启动：Start-Service packetbeat</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231132453.png" alt="image-20201231132453788"></p><h1 id="Centos7-5配置上述Beats（无winlogbeat）"><a href="#Centos7-5配置上述Beats（无winlogbeat）" class="headerlink" title="Centos7.5配置上述Beats（无winlogbeat）"></a>Centos7.5配置上述Beats（无winlogbeat）</h1><h2 id="一、配置运行filebeat-1"><a href="#一、配置运行filebeat-1" class="headerlink" title="一、配置运行filebeat"></a>一、配置运行filebeat</h2><ol><li>下载解压对应版本</li><li>修改配置文件filebeat.yml</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="comment"># Array of hosts to connect to.</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">setup.kibana:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Kibana Host</span></span><br><span class="line">  <span class="comment"># Scheme and port can be left out and will be set to the default (http and 5601)</span></span><br><span class="line">  <span class="comment"># In case you specify and additional path, the scheme is required: http://localhost:5601/path</span></span><br><span class="line">  <span class="comment"># IPv6 addresses should always be defined as: https://[2001:db8::1]:5601</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;localhost:5601&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Change to true to enable this input configuration.</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Paths that should be crawled and fetched. Glob based paths.</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/log/*.log</span></span><br><span class="line">    <span class="comment">#- c:\programdata\elasticsearch\logs\*</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li><p>启动filebeat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost filebeat]# .&#x2F;filebeat -e</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231144310.png" alt="image-20201231144310089"></p><h2 id="二、配置运行metricbeat-1"><a href="#二、配置运行metricbeat-1" class="headerlink" title="二、配置运行metricbeat"></a>二、配置运行metricbeat</h2><ol><li>下载解压对应版本</li><li>修改配置文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">就是修改kibana和elasticsearch就可以了，和上面的win差不多，下面不赘述</span><br><span class="line"></span><br><span class="line">#启动</span><br><span class="line">.&#x2F;metricbeat -e</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231145229.png" alt="image-20201231145229581"></p><h2 id="三、配置运行packetbeat-1"><a href="#三、配置运行packetbeat-1" class="headerlink" title="三、配置运行packetbeat"></a>三、配置运行packetbeat</h2><ol><li>下载解压对应版本</li><li>修改配置文件</li><li>启动</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231145745.png" alt="image-20201231145745056"></p><h2 id="四、配置运行heartbeat"><a href="#四、配置运行heartbeat" class="headerlink" title="四、配置运行heartbeat"></a>四、配置运行heartbeat</h2><ol><li>下载解压对应版本</li><li>修改配置文件</li><li>启动</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201231150016.png" alt="image-20201231150015990"></p>]]></content>
      
      
      <categories>
          
          <category> Elastic Beats </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora+PicGoApp+腾讯云实现图片上传</title>
      <link href="2020/12/30/typora-picgoapp-teng-xun-yun-shi-xian-tu-pian-shang-chuan/"/>
      <url>2020/12/30/typora-picgoapp-teng-xun-yun-shi-xian-tu-pian-shang-chuan/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Typora-PicGo-app-腾讯云实现上传图床"><a href="#使用Typora-PicGo-app-腾讯云实现上传图床" class="headerlink" title="使用Typora+PicGo.app+腾讯云实现上传图床"></a>使用Typora+PicGo.app+腾讯云实现上传图床</h1><ol><li><p><a href="https://molunerfinn.com/PicGo/">下载PicGo.app</a></p></li><li><p>偏好中进行选择</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230110213.png" alt="image-20201230095340524"></p><ol start="3"><li>配置腾讯云</li></ol><ul><li>在对象存储控制台中创建桶</li></ul><ul><li>在picGo中需要配置如下</li><li>key和id如下看</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230110407.png" alt="image-20201230102143990"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230110408.png" alt="image-20201230102222042"></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230110409.png" alt="image-20201230102337674"></p><ul><li><p>APPID、存储空间名、存储区域在对象存储的存储桶列表中看</p><p>存储空间名是你的桶名</p><p>appid是序列</p><p>存储区域：低于首字母小写</p></li></ul><h2 id="使用github搭建图床"><a href="#使用github搭建图床" class="headerlink" title="使用github搭建图床"></a>使用github搭建图床</h2><ol><li>新建仓库repo</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230110410.png" alt="image-20201230104757072"></p><ol start="2"><li>依次点击setting-developer setting-personal access tokens，去新建一个token（repo必须勾选，名字随意）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230110411.png" alt="image-20201230105000112"></p><p>3.填写picGo中的配置</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230110412.png" alt="image-20201230105142639"></p><p>①仓库名：格式- “Github账户名/仓库名”</p><p>②分支名：默认为master</p><p>③token：上面创建的token</p><p>④存储路径：可以自己设置，eg   img/</p><p>⑤自定义域名：统一使用jsdelivr的CDN加速域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自定义域名格式：https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GitHub账户名&#x2F;仓库名</span><br></pre></td></tr></table></figure><h4 id="PicGo-注意事项"><a href="#PicGo-注意事项" class="headerlink" title="PicGo 注意事项"></a>PicGo 注意事项</h4><p>如果配置完PicGo后却上传图片失败，可以参考以下方法：</p><ol><li>检查自定义域名是否正确</li><li>仓库名不要有空格</li><li>图片名字不要带有特殊符号，如：%、+、*、空格等</li><li>建议开启时间戳重命名，防止图片名字重复</li><li>上传图片间歇太短，需在PicGo设置中关闭Server选项</li><li>PicGo应用不稳定因素，需重启应用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230111435.png" alt="image-20201230111435813"></p>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> PicGo </tag>
            
            <tag> Github </tag>
            
            <tag> 腾讯云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双系统配置ELK与简单使用</title>
      <link href="2020/12/29/shuang-xi-tong-pei-zhi-elk-yu-jian-dan-shi-yong/"/>
      <url>2020/12/29/shuang-xi-tong-pei-zhi-elk-yu-jian-dan-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="win10配置ELK7-8-0-FileBeat"><a href="#win10配置ELK7-8-0-FileBeat" class="headerlink" title="win10配置ELK7.8.0+FileBeat"></a>win10配置ELK7.8.0+FileBeat</h1><blockquote><p>Elasticseatch，Logstash，Kibana，FileBeat</p><p>此处均已7.8.0为例</p><p><a href="https://elasticsearch.cn/download/">elastic中文社区</a></p></blockquote><h2 id="一、配置Elasticsearch"><a href="#一、配置Elasticsearch" class="headerlink" title="一、配置Elasticsearch"></a>一、配置Elasticsearch</h2><ol><li><p>修改Elasticsearch配置文件elasticsearch.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#节点名称（自定义）</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">es-test</span></span><br><span class="line"><span class="comment">#数据存储位置</span></span><br><span class="line"><span class="attr">path.data:</span> <span class="string">E:\App\elasticsearch\data</span></span><br><span class="line"><span class="comment">#日志存储位置</span></span><br><span class="line"><span class="attr">path.logs:</span> <span class="string">E:\App\elasticsearch\logs</span></span><br><span class="line"><span class="comment">#绑定访问的主机ip，0.0.0.0为不限制</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment">#绑定的访问端口，默认的为9200</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9200</span></span><br><span class="line"><span class="comment">#集群初始化的主节点，这个需要包含node.name，否则报错</span></span><br><span class="line"><span class="attr">cluster.inital_master_nodes:</span> [<span class="string">&quot;es-test&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面的是es-head所需的配置（它是针对elasticsearch的客户端工具）</span></span><br><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="attr">node.master:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">xpack.ml.enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ol><p>2.修改完成后直接在bin中启动elasticsearch.bat</p><p>浏览器访问 127.0.0.1:9200</p><h2 id="二、配置Kibana"><a href="#二、配置Kibana" class="headerlink" title="二、配置Kibana"></a>二、配置Kibana</h2><ol><li><p>修改kibana.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#访问端口，默认即为5601</span></span><br><span class="line"><span class="attr">server.port:</span> <span class="number">5601</span></span><br><span class="line"><span class="comment">#配置后端服务器的主机地址(eg此为192.168.1.108，或者是0.0.0.0)</span></span><br><span class="line"><span class="attr">server.host:</span> <span class="string">xxx.xxx.xxx.xxx</span></span><br><span class="line"><span class="comment">#Kibana使用Elasticsearch中的索引来存储保存的检索，可视化控件及仪表板。若无索引则会新建(默认值为.kibana)</span></span><br><span class="line"><span class="attr">kibana.index:</span> <span class="string">&quot;.kibana&quot;</span></span><br><span class="line"><span class="comment">#设置默认加载的应用，默认值为&quot;discover&quot;</span></span><br><span class="line"><span class="attr">kibana.defaultAppId:</span> <span class="string">&quot;home&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这个重要,</span></span><br><span class="line"><span class="attr">elaticsearch.hosts:</span> [<span class="string">&quot;http://192.168.1.108:9200&quot;</span>]</span><br></pre></td></tr></table></figure></li><li><p>修改完成后启动kibana.bat</p><p>本地访问端口<a href="http://192.168.1.108:5601/">http://192.168.1.108:5601/</a></p></li></ol><h2 id="三、配置Logstash"><a href="#三、配置Logstash" class="headerlink" title="三、配置Logstash"></a>三、配置Logstash</h2><blockquote><p>需要jdk环境，自行安装</p><p>在这里就直接使用Elasticsearch中生成的日志文件</p></blockquote><ol><li>配置Logstash</li></ol><p>Logstash配置文件采用json格式，位于</p><p>/etc/logstash/config中。包括三部分：输入、输出、过滤</p><ol start="2"><li><p>创建filetest.conf来配置输入、输出、过滤(这里就直接用logstash本身的日志测试)</p></li><li><p>在config下创建filetest.conf，配置如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">input&#123;</span></span><br><span class="line">  <span class="string">file&#123;</span></span><br><span class="line">    <span class="string">path</span> <span class="string">=&gt;</span> [<span class="string">&quot;E:/App/logstash/logs/logstash-plain.log&quot;</span>]</span><br><span class="line">    <span class="string">type</span> <span class="string">=&gt;</span> <span class="string">&quot;system-log&quot;</span></span><br><span class="line">    <span class="string">start_position</span> <span class="string">=&gt;</span> <span class="string">&quot;beginning&quot;</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="string">filter&#123;</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="string">output&#123;</span></span><br><span class="line">  <span class="string">elasticsearch&#123;</span></span><br><span class="line">    <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;192.168.1.108:9200&quot;</span>]</span><br><span class="line">    <span class="string">index</span> <span class="string">=&gt;</span> <span class="string">&quot;system-log-<span class="template-variable">%&#123;+YYYY.MM&#125;</span>&quot;</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>运行logstash即可，可通过es-head查看</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230162329.png" alt="image-20201229172739922"></p><p>或者是kibana可视化</p><h1 id="Centos7-5配置ELK7-6-2"><a href="#Centos7-5配置ELK7-6-2" class="headerlink" title="Centos7.5配置ELK7.6.2"></a>Centos7.5配置ELK7.6.2</h1><h2 id="一、配置Elasticsearch-1"><a href="#一、配置Elasticsearch-1" class="headerlink" title="一、配置Elasticsearch"></a>一、配置Elasticsearch</h2><h2 id="二、配置Kibana-1"><a href="#二、配置Kibana-1" class="headerlink" title="二、配置Kibana"></a>二、配置Kibana</h2><p>上面两个配置直接看这个链接<a href="https://hmoumou.xyz/2020/09/16/linux-centos7-5-an-zhuang-7-6-2elasticsearch-deng/">配置</a></p><h2 id="三、配置es-head"><a href="#三、配置es-head" class="headerlink" title="三、配置es-head"></a>三、配置es-head</h2><ol><li>修改elasticsearch.yml增加参数</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增加es-head所需参数</span></span><br><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>下载head插件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/mobz/elasticsearch-head/archive/master.zip</span><br></pre></td></tr></table></figure></li><li><p>安装node</p></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://npm.taobao.org/mirrors/node/latest-v4.x/node-v4.4.7-linux-x64.tar.gz</span><br><span class="line">tar -zxvf node-v4.4.7-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p>4.修改环境变量profile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export NODE_HOME=/opt/node-v4.4.7-linux-x64</span><br><span class="line">export PATH=$PATH:$NODE_HOME/bin</span><br><span class="line">export NODE_PATH=$NODE_HOME/lib/node_modules</span><br></pre></td></tr></table></figure><ol start="5"><li>安装grunt</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd elasticsearch-head-master</span><br><span class="line">npm install -g grunt-cli</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">version</span></span><br><span class="line">grunt -version</span><br></pre></td></tr></table></figure><p>6.修改head插件源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim elasticsearch-head-master/Gruntfile.js</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230162330.png" alt="image-20201229141331624"></p><p>7.修改链接地址</p><blockquote><p>elasticsearch-head-master/_site/app.js </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230162331.png" alt="image-20201229141420741"></p><ol start="8"><li>下载运行head必要的文件（放置在文件夹/tmp下）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;tmp</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;Medium&#x2F;phantomjs&#x2F;releases&#x2F;download&#x2F;v2.1.1&#x2F;phantomjs-2.1.1-linux-x86_64.tar.bz2</span><br><span class="line">yum -y install bzip2</span><br></pre></td></tr></table></figure><p>　　</p><p> 　9. 运行head</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;elasticsearch-head-master</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p> 　10. 后台启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grunt server &amp;</span><br></pre></td></tr></table></figure><p>验证9100端口</p><h2 id="四、配置Logstash"><a href="#四、配置Logstash" class="headerlink" title="四、配置Logstash"></a>四、配置Logstash</h2><ol><li>解压就可以了，然后先运行一下简单的（这是标准输入输出，页面输入什么就输出什么，以json格式输出）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost leyou]# ./logstash-7.6.2/bin/logstash -e &#x27;input &#123; stdin&#123;&#125; &#125; output &#123; stdout &#123;&#125; &#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li><p>输出到ES</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./logstash-7.6.2/bin/logstash -e &#x27;input &#123; stdin&#123;&#125; &#125; output &#123; elasticsearch &#123; hosts =&gt; [&quot;192.168.77.131:9200&quot;] index =&gt; &quot;logstash-%&#123;+YYYY.MM.dd&#125;&quot; &#125; &#125;&#x27;</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230162332.png" alt="image-20201229153423353"></p><ol start="3"><li>写一个x.conf收集系统日志</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vim /home/leyou/logstash-7.6.2/config/file.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置如下</span></span><br><span class="line">input&#123;</span><br><span class="line">  file&#123;</span><br><span class="line">    path =&gt; [&quot;/var/log/messages&quot;]</span><br><span class="line">    type =&gt; &quot;system-log&quot;</span><br><span class="line">    start_position =&gt; &quot;beginning&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">filter&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">output&#123;</span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">    hosts =&gt; [&quot;192.168.77.131:9200&quot;]</span><br><span class="line">    index =&gt; &quot;system-log-%&#123;+YYYY.MM&#125;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动防止在后台</p><p><code>../bin/logstash -f ./file.conf &amp;</code></p><p>当文件/var/log/messages有日志写入时就会写es，在head可查</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230162333.png" alt="image-20201229154715937"></p><p>如果没有更新，可以手动添加一条</p><blockquote><p>在kibana 中显示</p></blockquote><p>1.在discovery中添加，然后创建图表即可</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230162334.png" alt="image-20201229155235530"></p>]]></content>
      
      
      <categories>
          
          <category> ELK日志解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
            <tag> ELK </tag>
            
            <tag> Logstash </tag>
            
            <tag> Kibana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Centos7.5安装7.6.2elasticsearch等</title>
      <link href="2020/09/16/linux-centos7-5-an-zhuang-7-6-2elasticsearch-deng/"/>
      <url>2020/09/16/linux-centos7-5-an-zhuang-7-6-2elasticsearch-deng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>首先再一次写elasticsearch7.6.2的安装配置的原因在于。之前学习乐优商城项目时，所使用的springboot版本较高6.x不适配。而elasticsearch7.x安装配置的时候有些许的不同</p></blockquote><p>使用的软件如下</p><p><img src="Linux-Centos7-5%E5%AE%89%E8%A3%857-6-2elasticsearch%E7%AD%89/image-20200916124728495.png" alt="image-20200916124728495"></p><ul><li>elasticsearch7.x使用的jdk版本是11，当然他也有自带的jdk亦可直接使用</li></ul><h1 id="1-在linux安装elasticsearch"><a href="#1-在linux安装elasticsearch" class="headerlink" title="1.在linux安装elasticsearch"></a>1.在linux安装elasticsearch</h1><h2 id="1-1新建一个用户leyou"><a href="#1-1新建一个用户leyou" class="headerlink" title="1.1新建一个用户leyou"></a>1.1新建一个用户leyou</h2><p>·出于安全考虑，Elasticsearch默认不允许以root账户运行</p><p>创建用户leyou</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd leyou</span><br></pre></td></tr></table></figure><p>设置密码为leyou</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd leyou</span><br></pre></td></tr></table></figure><p>切换用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - leyou</span><br></pre></td></tr></table></figure><h2 id="1-2解压安装Elasticsearch"><a href="#1-2解压安装Elasticsearch" class="headerlink" title="1.2解压安装Elasticsearch"></a>1.2解压安装Elasticsearch</h2><p>·在root中新增用户之后，会自动在/home/目录下创建对应用户名的文件夹</p><p>·将安装包放于/home/leyou/下</p><p>·退出到root用户中，修改文件的权限为leyou用户leyou组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown leyou:leyou elasticsearch-6.2.4.tar.gz</span><br></pre></td></tr></table></figure><p>·修改文件的操作权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 elasticsearch-6.2.4.tar.gz</span><br></pre></td></tr></table></figure><p>·使用leyou用户，解压配置elasticsearch-6.2.4.tar.gz</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su - leyou</span><br><span class="line">tar -zxvf elasticsearch-6.2.4.tar.gz</span><br><span class="line">mv elasticsearch-6.2.4.tar.gz elasticsearch</span><br></pre></td></tr></table></figure><p>· 修改配置文件</p><p>需要注意的是，7.6.2版本应该默认是1g。</p><p>需要将虚拟机的内存调至2g，否者启动报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /elasticsearch/config/jvm.options</span><br><span class="line"><span class="meta">#</span><span class="bash">修改如下</span></span><br><span class="line">-Xms1g</span><br><span class="line">-Xmx1g</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /elasticsearch/config/elasticsearch.yml</span><br><span class="line"><span class="meta">#</span><span class="bash">修改如下</span></span><br><span class="line">path.data: /home/leyou/elasticsearch/data</span><br><span class="line">path.logs: /home/leyou/elasticsearch/logs</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">node.name: node-1</span><br><span class="line">network.bind_host: 0.0.0.0</span><br><span class="line">cluster.initial_master_nodes: [&quot;node-1&quot;]</span><br><span class="line">discovery.zen.minimum_master_nodes: 1</span><br><span class="line">gateway.recover_after_nodes: 1</span><br></pre></td></tr></table></figure><p>·在elasticsearch中创建对应的文件夹data</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p data</span><br></pre></td></tr></table></figure><p>启动后如果有报错可以参考</p><p><a href="https://hmoumou.xyz/2020/08/24/linux-centos7-5-an-zhuang-shi-yong-elasticsearch-he-ik-fen-ci-qi/">解决elasticsearch启动报错</a></p><h1 id="2-安装IK分词器"><a href="#2-安装IK分词器" class="headerlink" title="2.安装IK分词器"></a>2.安装IK分词器</h1><p>将安装包<code>elasticsearch-analysis-ik-7.6.2.zip</code>，上传至elasticsearch的plugins目录下，并且解压重命名为ik-analyzer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd .&#x2F;plugins&#x2F;</span><br><span class="line">[leyou@localhost plugins]$ unzip elasticsearch-analysis-ik-7.6.2.zip</span><br><span class="line">mv elasticsearch .&#x2F;ik-analyzer</span><br><span class="line">rm -rf elasticsearch-analysis-ik-6.2.4.zip </span><br><span class="line">#重启elasticsearch即可</span><br></pre></td></tr></table></figure><blockquote><p>elasticsearch和ik分词器都是安装在虚拟机中的</p></blockquote><h1 id="3-在win10下安装kibana"><a href="#3-在win10下安装kibana" class="headerlink" title="3. 在win10下安装kibana"></a>3. 在win10下安装kibana</h1><p>首先就是找位置解压<code>kibana-7.6.2-windows-x86_64.zip</code></p><p>然后修改config中的配置文件<code>kibana.yml</code></p><p>修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch.requestTimeout: 90000</span><br><span class="line">elasticsearch.hosts: [&quot;http:&#x2F;&#x2F;192.168.77.131:9200&quot;]</span><br></pre></td></tr></table></figure><p><img src="Linux-Centos7-5%E5%AE%89%E8%A3%857-6-2elasticsearch%E7%AD%89/image-20200916130324184.png" alt="image-20200916130324184"></p><blockquote><p>至此已经配置成功了</p></blockquote><p><img src="Linux-Centos7-5%E5%AE%89%E8%A3%857-6-2elasticsearch%E7%AD%89/image-20200916130617748.png" alt="image-20200916130617748"></p>]]></content>
      
      
      <categories>
          
          <category> 乐优商城学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Elasticsearch </tag>
            
            <tag> IK分词器 </tag>
            
            <tag> kibana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Centos7.5配置静态ip</title>
      <link href="2020/08/27/linux-centos7-5-pei-zhi-jing-tai-ip/"/>
      <url>2020/08/27/linux-centos7-5-pei-zhi-jing-tai-ip/</url>
      
        <content type="html"><![CDATA[<p>Linux配置IP地址有两种方式</p><h1 id="1-动态获取ip"><a href="#1-动态获取ip" class="headerlink" title="1.动态获取ip"></a>1.动态获取ip</h1><blockquote><p>这种方式一般在初次安装的时候就已经可以完成了</p></blockquote><p>首先通过<code>ip addr</code>查看你的网卡名称</p><p>修改网卡配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens32</span><br></pre></td></tr></table></figure><p>如果采用动态获取IP地址修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO&#x3D;&quot;dhcp&quot;</span><br><span class="line">ONBOOT&#x3D;&quot;yes&quot;</span><br><span class="line">#配置完成后需要重启网络服务</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>不过动态IP有时会自己改变IP地址,不方便使用</p><h1 id="2-配置静态IP地址"><a href="#2-配置静态IP地址" class="headerlink" title="2.配置静态IP地址"></a>2.配置静态IP地址</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">首先一样还是修改如下</span></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens32</span><br><span class="line"><span class="meta">#</span><span class="bash">然后</span></span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">并且加上如下配置</span></span><br><span class="line">IPADDR=192.168.1.160    #IP地址</span><br><span class="line">NETMASK=255.255.255.0#子网掩码</span><br><span class="line">GATEWAY=192.168.1.1#默认网关</span><br><span class="line">DNS1=119.29.29.29#DNS服务器</span><br><span class="line">DNS2=8.8.8.8</span><br></pre></td></tr></table></figure><p><strong>重点讲一下GATEWAY默认网关的配置</strong></p><blockquote><p>在虚拟中安装的系统,如果配置默认网关,则它的值是和整个虚拟机管理软件的设置相关的。此时这个默认网关应该和你的虚拟机管理软件设置一致,而不是主机!!!</p></blockquote><p>下面查看一下自己虚拟机的默认网关</p><p>虚拟机左上角的编辑 -&gt; 虚拟机网络编辑器</p><p>查看NAT’设置</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230111615.png" alt="image-20200827120856607"></p><p>查看网关并与其一致</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230111616.png" alt="image-20200827120915797"></p><p>全部配置完毕后重启网络服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>然后可以ping一下百度,测试联网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230111617.png" alt="image-20200827121100583"></p><p>成功</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Centos7.5安装使用Elasticsearch和IK分词器</title>
      <link href="2020/08/24/linux-centos7-5-an-zhuang-shi-yong-elasticsearch-he-ik-fen-ci-qi/"/>
      <url>2020/08/24/linux-centos7-5-an-zhuang-shi-yong-elasticsearch-he-ik-fen-ci-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h1><p><a href="https://www.elastic.co/cn/">官网</a></p><p>Elastic有一条完整的产品线及解决方案：Elasticsearch、Kibana、Logstash等，前面说的三个就是大家常说的ELK技术栈，（是最新的日志解决方案）</p><p>·Elasticsearch是Elastic Stack的核心</p><p><a href="https://www.elastic.co/cn/elasticsearch/">官网</a></p><p><img src="Linux-Centos7-5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Elasticsearch/image-20200824133927058.png" alt="image-20200824133927058"></p><p>Elasticsearch的特点</p><p>​    ·分布式，无需人工搭建集群（solr就需要人为配置，使用Zookeeper作为注册中心）；</p><p>​     ·Restful风格，一切API都遵循Rest原则，容易上手；</p><p>​     ·近实时搜索。数据更新在Elasticsearch中几乎是完全同步的；</p><h1 id="2-安装Elasticsearch"><a href="#2-安装Elasticsearch" class="headerlink" title="2.安装Elasticsearch"></a>2.安装Elasticsearch</h1><p>·首先前提条件是，虚拟机安装有jdk且版本在1.8及以上</p><h2 id="2-1新建一个用户leyou"><a href="#2-1新建一个用户leyou" class="headerlink" title="2.1新建一个用户leyou"></a>2.1新建一个用户leyou</h2><p>·出于安全考虑，Elasticsearch默认不允许以root账户运行</p><p>创建用户leyou</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd leyou</span><br></pre></td></tr></table></figure><p>设置密码为leyou</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd leyou</span><br></pre></td></tr></table></figure><p>切换用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - leyou</span><br></pre></td></tr></table></figure><h2 id="2-2解压安装Elasticsearch"><a href="#2-2解压安装Elasticsearch" class="headerlink" title="2.2解压安装Elasticsearch"></a>2.2解压安装Elasticsearch</h2><p>·在root中新增用户之后，会自动在/home/目录下创建对应用户名的文件夹</p><p>·将安装包放于/home/leyou/下</p><p>·退出到root用户中，修改文件的权限为leyou用户leyou组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown leyou:leyou elasticsearch-6.2.4.tar.gz</span><br></pre></td></tr></table></figure><p>·修改文件的操作权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 elasticsearch-6.2.4.tar.gz</span><br></pre></td></tr></table></figure><p>·使用leyou用户，解压配置elasticsearch-6.2.4.tar.gz</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su - leyou</span><br><span class="line">tar -zxvf elasticsearch-6.2.4.tar.gz</span><br><span class="line">mv elasticsearch-6.2.4.tar.gz elasticsearch</span><br></pre></td></tr></table></figure><p>·修改配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /elasticsearch/config/jvm.options</span><br><span class="line"><span class="meta">#</span><span class="bash">修改如下</span></span><br><span class="line">-Xms512m</span><br><span class="line">-Xmx512m</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /elasticsearch/config/elasticsearch.yml</span><br><span class="line"><span class="meta">#</span><span class="bash">修改如下</span></span><br><span class="line">path.data: /home/leyou/elasticsearch/data</span><br><span class="line">path.logs: /home/leyou/elasticsearch/logs</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在elasticsearch中创建对应的文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p data</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./elasticsearch/bin/elasticsearch</span><br></pre></td></tr></table></figure><h2 id="2-3启动后报错解决"><a href="#2-3启动后报错解决" class="headerlink" title="2.3启动后报错解决"></a>2.3启动后报错解决</h2><p><img src="Linux-Centos7-5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Elasticsearch/image-20200824135153436.png" alt="image-20200824135153436"></p><h3 id="2-3-1文件权限不足"><a href="#2-3-1文件权限不足" class="headerlink" title="2.3.1文件权限不足"></a>2.3.1文件权限不足</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]</span><br></pre></td></tr></table></figure><p>登录root用户，修改如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/security/limits.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">修改如下</span></span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 4096</span><br><span class="line">* hard nproc 4096</span><br></pre></td></tr></table></figure><h3 id="2-3-2线程数不够"><a href="#2-3-2线程数不够" class="headerlink" title="2.3.2线程数不够"></a>2.3.2线程数不够</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max number of threads [1024] for user [leyou] is too low, increase to at least [4096]</span><br></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/security/litmits.d/20-nproc.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">将</span></span><br><span class="line">* soft nproc 1024</span><br><span class="line"><span class="meta">#</span><span class="bash">改为</span></span><br><span class="line">* soft nproc 4096</span><br></pre></td></tr></table></figure><h3 id="2-3-3进程虚拟内存"><a href="#2-3-3进程虚拟内存" class="headerlink" title="2.3.3进程虚拟内存"></a>2.3.3进程虚拟内存</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]</span><br></pre></td></tr></table></figure><p>修改如下</p><p>vm.max_mao_count:限制一个进程可以拥有的VMA（虚拟内存区域）数量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">添加如下</span></span><br><span class="line">vm.max_map_count=655360</span><br></pre></td></tr></table></figure><p>添加成功之后，执行<code>sysctl -p</code></p><p>重启xshell终端</p><p>使用leyou用户开启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[leyou@localhost ~]$ ./elasticsearch/bin/elasticsearch</span><br></pre></td></tr></table></figure><p>成功启动后会绑定两个端口</p><p><img src="Linux-Centos7-5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Elasticsearch/image-20200824140420036.png" alt="image-20200824140420036"></p><p>·9300：集群结点间通信接口</p><p>·9200：客户端访问接口</p><p>访问<a href="http://192.168.77.131:9200/">http://192.168.77.131:9200/</a></p><p><img src="Linux-Centos7-5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Elasticsearch/image-20200824140549500.png" alt="image-20200824140549500"></p><h3 id="2-4还有一种错误，内核过低"><a href="#2-4还有一种错误，内核过低" class="headerlink" title="2.4还有一种错误，内核过低"></a>2.4还有一种错误，内核过低</h3><p>如果使用的是centos7以下版本，egcentos6，其linux内核版本为2.6。而Elasticsearch的插件要求至少3.5以上版本，所以此时需要禁用这个插件</p><p>修改elasticsearch.yml文件，在最下面添加如下配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootstrap.system_call_filter:false</span><br></pre></td></tr></table></figure><h2 id="3-安装IK分词器"><a href="#3-安装IK分词器" class="headerlink" title="3.安装IK分词器"></a>3.安装IK分词器</h2><p>将安装包<code>elasticsearch-analysis-ik-6.2.4.zip</code>，上传至elasticsearch的plugins目录下，并且解压重命名为ik-analyzer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd .&#x2F;plugins&#x2F;</span><br><span class="line">[leyou@localhost plugins]$ unzip elasticsearch-analysis-ik-6.2.4.zip</span><br><span class="line">mv elasticsearch .&#x2F;ik-analyzer</span><br><span class="line">rm -rf elasticsearch-analysis-ik-6.2.4.zip </span><br><span class="line">#重启elasticsearch即可</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 乐优商城学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Elasticsearch </tag>
            
            <tag> IK分词器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo进阶优化教程学习</title>
      <link href="2020/08/15/hexo-jin-jie-you-hua-jiao-cheng-xue-xi/"/>
      <url>2020/08/15/hexo-jin-jie-you-hua-jiao-cheng-xue-xi/</url>
      
        <content type="html"><![CDATA[<p>本文转载于<a href="https://blog.sky03.cn/posts/42790.html">Sky03</a>，仅做学习用途</p><h2 id="npm速度优化"><a href="#npm速度优化" class="headerlink" title="npm速度优化"></a>npm速度优化</h2><hr><blockquote><p>玩hexo的，肯定经常和npm打交道，但是npm的下载速度着实是有点慢。</p><p>由于下面内容会安装较多的插件，建议先更改npm仓库地址，以便能更快的安装插件</p></blockquote><ul><li>阿里的淘宝团队在国内做了个跟npm仓库一样的镜像叫<code>cnpm</code>。</li><li>淘宝镜像与npm官方包的同步频率目前为10分钟一次，来保证尽量与官方服务同步。</li><li>所以二者可以说是一样，不用担心有什么差别。</li></ul><h3 id="通过改变地址来使用淘宝镜像（推介）"><a href="#通过改变地址来使用淘宝镜像（推介）" class="headerlink" title="通过改变地址来使用淘宝镜像（推介）"></a>通过改变地址来使用淘宝镜像（推介）</h3><ul><li><p>npm的默认仓库地址是 <code>https://registry.npmjs.org/</code></p></li><li><p>可以使用以下命令查看当前npm的仓库地址</p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure></li><li><p>可以使用以下命令来改变默认下载地址，从而达到不安装<code>cnpm</code>就能采用淘宝镜像的目的，然后使用上面的get命令查看是否设置成功。</p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装CNPM"><a href="#安装CNPM" class="headerlink" title="安装CNPM"></a>安装CNPM</h3><ul><li><p>安装cnpm，命令：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>安装后，使用以下命令测试是否安装成功：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure></li><li><p>成功后，以后都使用 <code>cnpm</code> 代替以前 <code>npm</code> 来执行命令！</p></li></ul><h2 id="访问速度优化"><a href="#访问速度优化" class="headerlink" title="访问速度优化"></a>访问速度优化</h2><hr><h3 id="图片加载优化"><a href="#图片加载优化" class="headerlink" title="图片加载优化"></a>图片加载优化</h3><p>在做优化之前，让我们先了解什么是<code>预加载</code> 和 <code>懒加载</code>（废话时间）。</p><h4 id="什么是预加载"><a href="#什么是预加载" class="headerlink" title="什么是预加载"></a>什么是预加载</h4><p><code>预加载</code>就是进入项目前提前加载资源，避免在项目中加载缓慢，影响用户体验</p><ul><li>缺点：会增加服务器压力</li></ul><h4 id="什么是懒加载"><a href="#什么是懒加载" class="headerlink" title="什么是懒加载"></a>什么是懒加载</h4><p><code>懒加载</code>一般是当图片滚动进可视窗口内才加载图片，可视窗口之外的图片则不加载</p><ul><li>优点：对服务器有一定的缓解压力作用</li></ul><p>我用的 <a href="https://github.com/blinkfox/hexo-theme-matery">matery主题</a> 整体采用预加载模式，这样可以在我们访问其他页面的时候会稍微快点。我们可以在这个基础上对图片进行懒加载，这样做效果就是html、css、js加载之后，图片再加载。既保证了网页的打开速度，也不会因图片的庞大体积而拖累了整个页面的加载。</p><h4 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h4><p>首先安装图片懒加载插件： <a href="https://github.com/Troy-Yang/hexo-lazyload-image">hexo-lazyload-image</a></p><p>在Hexo根目录执行</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></table></figure><p>然后在Hexo配置文件末尾加入以下代码</p><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">onlypost:</span> <span class="literal">false</span>  <span class="comment"># 是否只对文章的图片做懒加载</span></span><br><span class="line">  <span class="attr">loadingImg:</span> <span class="comment"># eg ./images/loading.gif</span></span><br></pre></td></tr></table></figure><p>到这里就配置完了，执行<code>hexo cl&amp;&amp;hexo g&amp;&amp;hexo s</code>就有效果了，以后博客上的图片就都是懒加载了，以上步骤理论上任何主题都可以用</p><p>一般情况下懒加载会和gallery插件会发生冲突，结果可能就是点开图片，左翻右翻都是loading image。matery主题的解决方案是：</p><p>修改 <code>/themes/matery/source/js</code> 中的 <code>matery.js</code>文件</p><p>在第108行加上：</p><p>js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).find(<span class="string">&#x27;img[data-original]&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="built_in">this</span>).parent().attr(<span class="string">&quot;href&quot;</span>, $(<span class="built_in">this</span>).attr(<span class="string">&quot;data-original&quot;</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>做完这步之后，还有点小Bug，首页的logo点击会直接打开logo图，而不是跳到首页。</p><p>伪解决方案：打开 <code>/themes/matery/layout/_partial/header.ejs</code>文件，</p><p>在<code>img</code>和<code>span</code>的两个头加个<code>div</code>：</p><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;brand-logo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- url_for() %&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;waves-effect waves-light&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            &lt;% if (theme.logo !== undefined &amp;&amp; theme.logo.length &gt; 0) &#123; %&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&lt;%= theme.logo %&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo-img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;LOGO&quot;</span>&gt;</span></span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;logo-span&quot;</span>&gt;</span>&lt;%- config.title %&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="自定义loading图片"><a href="#自定义loading图片" class="headerlink" title="自定义loading图片"></a>自定义loading图片</h4><p><code>hexo-lazyload-image</code> 插件提供了自定义loading图片的选项</p><p>方法就是在 <code>loadingImg</code> 后配置图片的路径就好了</p><p><strong>Like this：</strong></p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">onlypost:</span> <span class="literal">false</span>  <span class="comment"># 是否只对文章的图片做懒加载</span></span><br><span class="line">  <span class="attr">loadingImg:</span> <span class="string">/medias/loading.gif</span> <span class="comment"># eg ./images/loading.gif</span></span><br></pre></td></tr></table></figure><h4 id="懒加载优化"><a href="#懒加载优化" class="headerlink" title="懒加载优化"></a>懒加载优化</h4><blockquote><p>经过以上操作就已经很完美了，以下内容可做可不做</p></blockquote><ul><li><p>其实第一次加载后本地都是有缓存的，如果每次都把loading显示出来就不那么好看</p></li><li><p>所以我们需要对插件进行魔改，让图片稍微提前加载，避开加载动画</p></li><li><p>打开 <code>Hexo根目录</code>&gt;<code>node_modules</code> &gt; <code>hexo-lazyload-image</code> &gt; <code>lib</code> &gt; <code>simple-lazyload.js</code> 文件</p></li><li><p>第9行修改为：</p><p>js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp; rect.top &lt;= (<span class="built_in">window</span>.innerHeight +<span class="number">240</span> || <span class="built_in">document</span>.documentElement.clientHeight +<span class="number">240</span>)</span><br></pre></td></tr></table></figure></li><li><p>作用：提前240个像素加载图片；当然这个值也可以根据自己情况修改</p></li></ul><h3 id="代码压缩优化"><a href="#代码压缩优化" class="headerlink" title="代码压缩优化"></a>代码压缩优化</h3><h4 id="为什么要把代码压缩？"><a href="#为什么要把代码压缩？" class="headerlink" title="为什么要把代码压缩？"></a>为什么要把代码压缩？</h4><p>因为hexo生成的html、css、js等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的“压缩”。</p><p>有人说空格换行能占多少字节？确实占不了多少，但是一个人访问是这么多字节，那么一百人，一万人呢？加起来这量就不少了吧，这都是流量啊！这也是很多css/js文件的后缀为*.min.js或*.min.css的原因。虽然我们可能没那么多访问量，但是能减小一点资源文件的大小也是对访问速度有那么一点提升的。</p><h4 id="gulp实现代码压缩"><a href="#gulp实现代码压缩" class="headerlink" title="gulp实现代码压缩"></a>gulp实现代码压缩</h4><ul><li><p>cd到Hexo根目录依次执行以下命令：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局安装gulp模块</span></span><br><span class="line">npm install gulp -g</span><br><span class="line"><span class="comment"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span></span><br><span class="line">npm install gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save</span><br><span class="line"><span class="comment"># 额外的功能模块</span></span><br><span class="line">npm install gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save</span><br></pre></td></tr></table></figure></li><li><p>在Hexo根目录新建文件 <code>gulpfile.js</code>，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。</p><p>js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&quot;gulp&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> debug = <span class="built_in">require</span>(<span class="string">&quot;gulp-debug&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> cleancss = <span class="built_in">require</span>(<span class="string">&quot;gulp-clean-css&quot;</span>); <span class="comment">//css压缩组件</span></span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">&quot;gulp-uglify&quot;</span>); <span class="comment">//js压缩组件</span></span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">&quot;gulp-htmlmin&quot;</span>); <span class="comment">//html压缩组件</span></span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">&quot;gulp-htmlclean&quot;</span>); <span class="comment">//html清理组件</span></span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">&quot;gulp-imagemin&quot;</span>); <span class="comment">//图片压缩组件</span></span><br><span class="line"><span class="keyword">var</span> changed = <span class="built_in">require</span>(<span class="string">&quot;gulp-changed&quot;</span>); <span class="comment">//文件更改校验组件</span></span><br><span class="line"><span class="keyword">var</span> gulpif = <span class="built_in">require</span>(<span class="string">&quot;gulp-if&quot;</span>); <span class="comment">//任务 帮助调用组件</span></span><br><span class="line"><span class="keyword">var</span> plumber = <span class="built_in">require</span>(<span class="string">&quot;gulp-plumber&quot;</span>); <span class="comment">//容错组件（发生错误不跳出任务，并报出错误内容）</span></span><br><span class="line"><span class="keyword">var</span> isScriptAll = <span class="literal">true</span>; <span class="comment">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span></span><br><span class="line"><span class="keyword">var</span> isDebug = <span class="literal">true</span>; <span class="comment">//是否调试显示 编译通过的文件</span></span><br><span class="line"><span class="keyword">var</span> gulpBabel = <span class="built_in">require</span>(<span class="string">&quot;gulp-babel&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> es2015Preset = <span class="built_in">require</span>(<span class="string">&quot;babel-preset-es2015&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> del = <span class="built_in">require</span>(<span class="string">&quot;del&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> Hexo = <span class="built_in">require</span>(<span class="string">&quot;hexo&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> Hexo(process.cwd(), &#123;&#125;); <span class="comment">// 初始化一个hexo对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 清除public文件夹</span></span><br><span class="line">gulp.task(<span class="string">&quot;clean&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> del([<span class="string">&quot;public/**/*&quot;</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span></span><br><span class="line"><span class="comment">// 创建静态页面 （等同 hexo generate）</span></span><br><span class="line">gulp.task(<span class="string">&quot;generate&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hexo</span><br><span class="line">            .call(<span class="string">&quot;generate&quot;</span>, &#123;</span><br><span class="line">                watch: <span class="literal">false</span></span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> hexo.exit();</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> hexo.exit(err);</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动Hexo服务器</span></span><br><span class="line">gulp.task(<span class="string">&quot;server&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hexo</span><br><span class="line">        .init()</span><br><span class="line">        .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> hexo.call(<span class="string">&quot;server&quot;</span>, &#123;&#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 部署到服务器</span></span><br><span class="line">gulp.task(<span class="string">&quot;deploy&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hexo</span><br><span class="line">            .call(<span class="string">&quot;deploy&quot;</span>, &#123;</span><br><span class="line">                watch: <span class="literal">false</span></span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> hexo.exit();</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> hexo.exit(err);</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的js文件</span></span><br><span class="line">gulp.task(<span class="string">&quot;compressJs&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src([<span class="string">&quot;./public/**/*.js&quot;</span>, <span class="string">&quot;!./public/libs/**&quot;</span>]) <span class="comment">//排除的js</span></span><br><span class="line">        .pipe(gulpif(!isScriptAll, changed(<span class="string">&quot;./public&quot;</span>)))</span><br><span class="line">        .pipe(gulpif(isDebug, debug(&#123; <span class="attr">title</span>: <span class="string">&quot;Compress JS:&quot;</span> &#125;)))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(</span><br><span class="line">            gulpBabel(&#123;</span><br><span class="line">                presets: [es2015Preset] <span class="comment">// es5检查机制</span></span><br><span class="line">            &#125;)</span><br><span class="line">        )</span><br><span class="line">        .pipe(uglify()) <span class="comment">//调用压缩组件方法uglify(),对合并的文件进行压缩</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>)); <span class="comment">//输出到目标目录</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的css文件</span></span><br><span class="line">gulp.task(<span class="string">&quot;compressCss&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> option = &#123;</span><br><span class="line">        rebase: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">//advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]</span></span><br><span class="line">        compatibility: <span class="string">&quot;ie7&quot;</span> <span class="comment">//保留ie7及以下兼容写法 类型：String 默认：&#x27;&#x27;or&#x27;*&#x27; [启用兼容模式； &#x27;ie7&#x27;：IE7兼容模式，&#x27;ie8&#x27;：IE8兼容模式，&#x27;*&#x27;：IE9+兼容模式]</span></span><br><span class="line">        <span class="comment">//keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]</span></span><br><span class="line">        <span class="comment">//keepSpecialComments: &#x27;*&#x27; //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src([<span class="string">&quot;./public/**/*.css&quot;</span>, <span class="string">&quot;!./public/**/*.min.css&quot;</span>]) <span class="comment">//排除的css</span></span><br><span class="line">        .pipe(gulpif(!isScriptAll, changed(<span class="string">&quot;./public&quot;</span>)))</span><br><span class="line">        .pipe(gulpif(isDebug, debug(&#123; <span class="attr">title</span>: <span class="string">&quot;Compress CSS:&quot;</span> &#125;)))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(cleancss(option))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的html文件</span></span><br><span class="line">gulp.task(<span class="string">&quot;compressHtml&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> cleanOptions = &#123;</span><br><span class="line">        protect: <span class="regexp">/&lt;\!--%fooTemplate\b.*?%--&gt;/g</span>, <span class="comment">//忽略处理</span></span><br><span class="line">        unprotect: <span class="regexp">/&lt;script [^&gt;]*\btype=&quot;text\/x-handlebars-template&quot;[\s\S]+?&lt;\/script&gt;/gi</span> <span class="comment">//特殊处理</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> minOption = &#123;</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">//压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>, <span class="comment">//省略布尔属性的值 &lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">//删除所有空格作属性值 &lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">//删除&lt;script&gt;的type=&quot;text/javascript&quot;</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">//删除&lt;style&gt;和&lt;link&gt;的type=&quot;text/css&quot;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">//清除HTML注释</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">//压缩页面JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">//压缩页面CSS</span></span><br><span class="line">        minifyURLs: <span class="literal">true</span> <span class="comment">//替换页面URL</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">&quot;./public/**/*.html&quot;</span>)</span><br><span class="line">        .pipe(gulpif(isDebug, debug(&#123; <span class="attr">title</span>: <span class="string">&quot;Compress HTML:&quot;</span> &#125;)))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(htmlclean(cleanOptions))</span><br><span class="line">        .pipe(htmlmin(minOption))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 public/medias 目录内图片</span></span><br><span class="line">gulp.task(<span class="string">&quot;compressImage&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> option = &#123;</span><br><span class="line">        optimizationLevel: <span class="number">5</span>, <span class="comment">//类型：Number 默认：3 取值范围：0-7（优化等级）</span></span><br><span class="line">        progressive: <span class="literal">true</span>, <span class="comment">//类型：Boolean 默认：false 无损压缩jpg图片</span></span><br><span class="line">        interlaced: <span class="literal">false</span>, <span class="comment">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span></span><br><span class="line">        multipass: <span class="literal">false</span> <span class="comment">//类型：Boolean 默认：false 多次优化svg直到完全优化</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">&quot;./public/medias/**/*.*&quot;</span>)</span><br><span class="line">        .pipe(gulpif(!isScriptAll, changed(<span class="string">&quot;./public/medias&quot;</span>)))</span><br><span class="line">        .pipe(gulpif(isDebug, debug(&#123; <span class="attr">title</span>: <span class="string">&quot;Compress Images:&quot;</span> &#125;)))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(imagemin(option))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 执行顺序： 清除public目录 -&gt; 产生原始博客内容 -&gt; 执行压缩混淆 -&gt; 部署到服务器</span></span><br><span class="line">gulp.task(</span><br><span class="line">    <span class="string">&quot;build&quot;</span>,</span><br><span class="line">    gulp.series(</span><br><span class="line">        <span class="string">&quot;clean&quot;</span>,</span><br><span class="line">        <span class="string">&quot;generate&quot;</span>,</span><br><span class="line">        <span class="string">&quot;compressHtml&quot;</span>,</span><br><span class="line">        <span class="string">&quot;compressCss&quot;</span>,</span><br><span class="line">        <span class="string">&quot;compressJs&quot;</span>,</span><br><span class="line">        <span class="string">&quot;compressImage&quot;</span>,</span><br><span class="line">        gulp.parallel(<span class="string">&quot;deploy&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认任务</span></span><br><span class="line">gulp.task(</span><br><span class="line">    <span class="string">&quot;default&quot;</span>,</span><br><span class="line">    gulp.series(</span><br><span class="line">        <span class="string">&quot;clean&quot;</span>,</span><br><span class="line">        <span class="string">&quot;generate&quot;</span>,</span><br><span class="line">        gulp.parallel(<span class="string">&quot;compressHtml&quot;</span>, <span class="string">&quot;compressCss&quot;</span>, <span class="string">&quot;compressJs&quot;</span>,<span class="string">&quot;compressImage&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"><span class="comment">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span></span><br></pre></td></tr></table></figure></li><li><p>以后的执行方式有两种：</p><ol><li>直接在Hexo根目录执行 <code>gulp</code>或者 <code>gulp default</code> ，这个命令相当于 <code>hexo cl&amp;&amp;hexo g</code> 并且再把代码和图片压缩。</li><li>在Hexo根目录执行 <code>gulp build</code> ，这个命令与第1种相比是：在最后又加了个 <code>hexo d</code> ，等于说生成、压缩文件后又帮你自动部署了。</li></ol></li><li><p>值得注意的是：这个加入了图片压缩，如果不想用图片压缩可以把第154行的 <code>&quot;compressImage&quot;,</code> 和第165行的 <code>,&quot;compressImage&quot;</code> 去掉即可</p></li></ul><h4 id="hexo-neat插件实现代码压缩"><a href="#hexo-neat插件实现代码压缩" class="headerlink" title="hexo-neat插件实现代码压缩"></a>hexo-neat插件实现代码压缩</h4><ul><li><p>可能以上方法比较复杂，来介绍个简单的，<a href="https://github.com/rozbo/hexo-neat">hexo-neat</a>插件也是用来压缩代码的，底层也是通过gulp来实现的。</p></li><li><p>但是这个插件是有Bug的：</p><ul><li>压缩 md 文件会使 markdown 语法的代码块消失</li><li>会删除全角空格</li></ul></li><li><p>Hexo根目录执行安装代码：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure></li><li><p>在Hexo配置文件<code>_config.yml</code> 末尾加入以下配置：</p><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">neat_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">neat_html:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line"><span class="attr">neat_css:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*.min.css&#x27;</span></span><br><span class="line"><span class="attr">neat_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">output:</span></span><br><span class="line">  <span class="attr">compress:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*.min.js&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>然后直接 <code>hexo cl&amp;&amp;hexo g</code> 就可以了，会自动压缩文件 。</p></li><li><p><strong>补充</strong>：为了解决以上Bug，<strong>对于matery主题</strong>（其他主题自行解决）需要将以上默认配置修改为：</p><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）</span></span><br><span class="line"><span class="attr">neat_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">neat_html:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;**/*.md&#x27;</span></span><br><span class="line"><span class="attr">neat_css:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;**/*.min.css&#x27;</span></span><br><span class="line"><span class="attr">neat_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">output:</span></span><br><span class="line">  <span class="attr">compress:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;**/*.min.js&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;**/**/instantpage.js&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;**/matery.js&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="全站CDN加速"><a href="#全站CDN加速" class="headerlink" title="全站CDN加速"></a>全站CDN加速</h3><p>本节参考：<a href="https://removeif.github.io/2019/09/25/tools/github-page%E7%BD%91%E7%AB%99cdn%E4%BC%98%E5%8C%96%E5%8A%A0%E9%80%9F.html">github page网站cdn优化加速 - 辣椒の酱</a></p><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科</p><p>放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，<a href="https://www.jsdelivr.com/">jsDelivr</a> + Github便是免费且好用的CDN，非常适合博客网站使用。</p><p><strong>用法：</strong></p><p>http</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</span><br></pre></td></tr></table></figure><p><strong>例如：</strong></p><p>http</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/skyls03/skyls03.github.io/medias/loading.gif</span><br></pre></td></tr></table></figure><p>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源</p><p>还可以配合<code>PicGo</code>图床上传工具的<strong>自定义域名前缀</strong>来上传图片，使用极其方便。更多详细信息可参考我另一篇文章：<a href="https://blog.sky03.cn/posts/4873.html#toc-heading-6">超好用的软件插件网站集合</a></p><h4 id="重点（敲黑板！）"><a href="#重点（敲黑板！）" class="headerlink" title="重点（敲黑板！）"></a>重点（敲黑板！）</h4><hr><p><strong>这个不止可以作用于图片，可以像这样把所有的css、js等文件的加载路径都修改下，从而让全站使用CDN加速！具体怎么修改要根据主题的情况而定，比较麻烦，不过原理都是一样的，有能力的可以改改。</strong></p><p>这里我提供一个4.15M的图片文件，供大家测试：</p><p><code>腾讯</code>：<a href="https://blog.sky03.cn/medias/test.jpg">COS + CDN</a></p><p><code>GitHub</code>：<a href="https://cdn.jsdelivr.net/gh/skyls03/skyls03.github.io/medias/test.jpg">GitHub + jsDelivr</a></p><p><code>阿里</code>：<a href="https://sky03-blog-images.oss-cn-beijing.aliyuncs.com/blog-img/test.jpg">OSS</a></p><p>浏览器<code>打开</code>-&gt;<code>F12</code>-&gt;<code>Network</code>-&gt;<code>Ctrl + F5(强制刷新，即不使用缓存刷新)</code>，然后看加载时间多少。</p><p><strong>我的测试结果</strong>：</p><blockquote><p>每个人的网络情况不一样，测试数据仅供参考</p></blockquote><ul><li>阿里云的<code>OSS</code>：2.60s加载完成</li><li><code>jsDelivr + Github</code>：1.68s加载完成</li></ul><h2 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h2><hr><blockquote><p>SEO（Search Engine Optimization）：汉译为搜索引擎优化。是一种方式：利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。 ——百度百科</p></blockquote><h3 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h3><blockquote><p>在这之前，<strong>有个事情需要注意：</strong></p><p><code>GitHub</code>是不允许百度的<code>Spider</code>（蜘蛛）爬取<code>GitHub</code>上的内容的，所以任何部署在GitHub上的静态博客都是不能百度爬取到的！</p><p>解决方案：可以参考我另一篇文章 <a href="https://blog.sky03.cn/posts7974.html">关于百度无法爬取GitHub内容解决方案</a></p></blockquote><h4 id="让百度收录你的站点"><a href="#让百度收录你的站点" class="headerlink" title="让百度收录你的站点"></a>让百度收录你的站点</h4><p>首先来搞百度的，刚建完站在百度上是不可能搜索到我们的网站的，可以先在百度上搜索<code>site:&lt;你的域名&gt;</code>，一般是搜不到的，然后点击 <code>提交网址</code> 将自己的网站提交给百度。</p><p><img src="https://blog.sky03.cn/medias/loading.gif" alt="img"></p><h4 id="添加自己的站点到百度"><a href="#添加自己的站点到百度" class="headerlink" title="添加自己的站点到百度"></a>添加自己的站点到百度</h4><p>登录<a href="https://ziyuan.baidu.com/">百度搜索资源平台</a>， 只要是百度旗下的账号就可以， 登录成功之后在站点管理中点击<a href="https://ziyuan.baidu.com/site/siteadd">添加网站</a>，输入域名，三步走。</p><p><img src="https://blog.sky03.cn/medias/loading.gif" alt="img"></p><p>第三步验证网站的时候， 验证网站所有权的方式有三种：</p><ul><li>文件验证</li><li><code>HTML</code>标签验证</li><li><code>CNAME</code>解析验证<strong>（推荐使用）</strong></li></ul><p>同理，百度的spider是爬取不到GitHub的内容的，所以<code>HTML标签验证</code>方式也是不太可取的。</p><p><img src="https://blog.sky03.cn/medias/loading.gif" alt="img"></p><h4 id="向百度推送自己的资源"><a href="#向百度推送自己的资源" class="headerlink" title="向百度推送自己的资源"></a>向百度推送自己的资源</h4><p>经过以上步骤，百度已经知道有我们网站的存在了，但是百度还不知道我们的网站上有什么内容，所以要向百度推送我们的内容。</p><p>还是在百度资源搜索平台，找到数据引入-&gt;链接提交，可以看到向百度推送自己的内容有两个方式：</p><ol><li><p>```<br>自动提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">   （分三种）</span><br><span class="line"></span><br><span class="line">   - 主动推送</span><br><span class="line">   - 自动推送</span><br><span class="line">   - sitemap（站点地图）</span><br><span class="line"></span><br><span class="line">2. &#96;&#96;&#96;</span><br><span class="line">   手动提交</span><br></pre></td></tr></table></figure><ul><li>即手动地将链接一次性提交给百度</li></ul></li></ol><p>一般自动提交比手动提交效果好一点，自动提交又从效率上来说：</p><p><strong>主动推送&gt;自动推送&gt;sitemap</strong></p><p><strong>自动提交的三种方式</strong>：</p><ol><li><code>主动推送</code>：最为快速的提交方式。将站点当天新产出链接通过此方式推送给百度，以保证新链接可以及时被百度收录。</li><li><code>自动推送</code>：最为便捷的提交方式。将自动推送的JS代码部署在站点的每一个页面源代码中，当部署代码的页面在每次被浏览时，链接就会被自动推送给百度。可以与主动推送配合使用。</li><li><code>sitemap</code>：您可以定期将网站链接放到<code>sitemap文件</code>中，然后将<code>sitemap文件</code>提交给百度。百度会周期性的抓取检查您提交的<code>sitemap</code>，对其中的链接进行处理，但收录速度慢于主动推送。</li></ol><h5 id="使用sitemap方式推送"><a href="#使用sitemap方式推送" class="headerlink" title="使用sitemap方式推送"></a>使用sitemap方式推送</h5><p><strong>安装sitemap插件</strong></p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save </span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>这两个插件是用来生成 <code>Sitemap文件</code> 的插件，而 <code>Sitemap</code> 是用来告知搜索引擎我们的网站上有哪些可供抓取的网页的。</p><p><strong>注意一点：</strong><br><strong>hexo配置文件中的url一定要改成你的域名，这两个插件是根据你的url生成站点地图的。</strong></p><p>安装后直接执行<code>hexo cl&amp;&amp;hexo g</code>命令，然后就会在网站根目录生成<code>sitemap.xml</code>文件和<code>baidusitemap.xml文件</code>，其中<code>sitemap.xml</code>文件是搜索引擎通用的文件，<code>baidusitemap.xml</code>是百度专用的<code>sitemap</code>文件。</p><p>有<code>sitemap文件</code>之后，再将生成的<code>sitemap文件</code>提交给百度或者其他搜索引擎</p><p>百度方式：在自动提交的sitemap那里填写自己<code>sitemap文件</code>的URL地址即可</p><p>http</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://你的域名/baidusitemap.xml</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/fly-03/Sky03-Blog-Background/blog-img/20191116144150.png" alt="img"></p><p>提交后会有状态提示：</p><p><img src="https://blog.sky03.cn/medias/loading.gif" alt="img"></p><p>这里需要注意<strong>严格区分http和https</strong></p><blockquote><p>http和https是不一样的，刚添加的站点是HTTP协议的，如果你网站开启了 <code>强制https</code>，是会报301重定向错误的，也就是百度不能抓取到你的sitemap</p><p>如果想用https，可以在<code>数据监控</code>-&gt;<code>HTTPS认证</code>进行认证</p><p>这个认证有时会很慢，可以在你的站点只留一个首页的<code>简单HTML</code>，然后再去百度认证，这样应该会快一点。</p></blockquote><p>如果是其他的搜索引擎，一般是在填写sitemap的地方，填写以下内容即可</p><p>http</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://你的域名/sitemap.xml</span><br></pre></td></tr></table></figure><h5 id="自动推送方式"><a href="#自动推送方式" class="headerlink" title="自动推送方式"></a>自动推送方式</h5><p>只要每个需要被百度爬取的HTML页面中加入一段JS代码即可：</p><p>js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">&#x27;https&#x27;</span>) &#123;</span><br><span class="line">        bp.src = <span class="string">&#x27;https://zz.bdstatic.com/linksubmit/push.js&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        bp.src = <span class="string">&#x27;http://push.zhanzhang.baidu.com/push.js&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;script&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>我所使用的matery主题可以自动给每个页面加上这段代码，只需在主题配置文件中配置：</p><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 百度搜索资源平台提交链接</span></span><br><span class="line"><span class="attr">baiduPush:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>即可！</p><p>其他主题一般都有这个功能的实现，如果没有的话，想办法在每个页面加入以上JS代码即可，原理是一样。</p><h5 id="主动推送方式"><a href="#主动推送方式" class="headerlink" title="主动推送方式"></a>主动推送方式</h5><p>安装主动推送插件：<a href="https://github.com/huiwang/hexo-baidu-url-submit">hexo-baidu-url-submit</a></p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><p>然后打开<code>hexo配置文件</code>，在末尾加入以下配置：</p><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-baidu-url-submit  百度主动推送</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">80</span> <span class="comment"># 提交最新的一个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">blog.sky03.cn</span> <span class="comment"># 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">xxxxxxx</span> <span class="comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure><p>密匙的获取是在百度的自动提交的主动推送那里。</p><p><img src="https://blog.sky03.cn/medias/loading.gif" alt="img"></p><p>再加入新的<code>deploy</code>：</p><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span></span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="https://cdn.jsdelivr.net/gh/fly-03/Sky03-Blog-Background/blog-img/20191116131427.png" alt="img"></p><p>这样每次执行 <code>hexo d</code> 的时候，新的链接就会被推送了。<br>推送成功时,会有如下终端提示!</p><p><img src="https://cdn.jsdelivr.net/gh/fly-03/Sky03-Blog-Background/blog-img/20191116133413.png" alt="img"></p><p>各种不同的推送反馈字段说明<a href="https://ziyuan.baidu.com/college/courseinfo?id=267&page=2#h2_article_title12">点我</a>查看，一般来说，推送失败基本都是地址不相符造成的，我们只需对比<code>baidu_url_submit</code>在<code>public</code>中生成的<code>baidu_urls.txt</code>的地址,与自己填写在<code>host</code>字段中的地址对比看是否一样即可。</p><h3 id="谷歌收录"><a href="#谷歌收录" class="headerlink" title="谷歌收录"></a>谷歌收录</h3><p>相比于百度，google的效率实在不能更快，貌似一天左右站点就被收录了，其实方法是和百度是一样的。</p><ul><li><p>登录<a href="https://www.google.com/webmasters/">谷歌站长平台</a>，添加自己的域名</p><p><img src="https://blog.sky03.cn/medias/loading.gif" alt="img"></p></li><li><p><code>DNS验证</code>（就是验证下网站是不是你的）就是域名解析那里添加一条TXT解析记录</p><p><img src="https://blog.sky03.cn/medias/loading.gif" alt="img"></p></li><li><p>然后点击验证即可</p></li><li><p>再到谷歌的<a href="https://search.google.com/search-console/">Search Console</a>，添加自己的<code>sitemap</code>地址</p><p><img src="https://blog.sky03.cn/medias/loading.gif" alt="img"></p></li><li><p>接下来，等就是了</p></li></ul><h3 id="提交-robots-txt"><a href="#提交-robots-txt" class="headerlink" title="提交 robots.txt"></a>提交 robots.txt</h3><h4 id="robots-txt是干嘛的？"><a href="#robots-txt是干嘛的？" class="headerlink" title="robots.txt是干嘛的？"></a>robots.txt是干嘛的？</h4><p><code>robots.txt</code> 是一种存放于网站根目录下的 <code>ASCII</code> 编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。<br><code>robots.txt</code> 要放在 <code>Hexo根目录</code> 下的 <code>source</code> 文件夹中。</p><p>每个人站点目录可能不太一样，可以参考下我的 <code>robots.txt</code> 文件，内容如下：</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">User-agent:</span> <span class="string">*</span></span><br><span class="line"><span class="attr">Allow:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">Allow:</span> <span class="string">/posts/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/about/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/archives/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/js/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/css/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/contact/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/fonts/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/friends/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/libs/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/medias/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/page/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/tags/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/categories/</span></span><br></pre></td></tr></table></figure><p>更多关于 <code>robots.txt</code> 的写法参见 <a href="https://blog.csdn.net/fanghua_vip/article/details/79535639">https://blog.csdn.net/fanghua_vip/article/details/79535639</a></p><p>编写完以上内容再重新部署一下，然后到百度资源平台的<code>数据监控</code>-&gt;<code>Robots</code>点击<code>检测并更新</code> 看能不能检测到。<br>同样注意：刚添加的站点没有进行 <code>HTTPS认证</code>，直接检测有可能会报301错误。</p><h3 id="配置-Nofollow"><a href="#配置-Nofollow" class="headerlink" title="配置 Nofollow"></a>配置 Nofollow</h3><ul><li>nofollow 是HTML页面中 <code>a标签</code> 的 属性值。</li><li>这个属性的作用是：告诉搜索引擎的爬虫不要追踪该链接，为了对抗博客垃圾留言信息</li></ul><h3 id="URL优化"><a href="#URL优化" class="headerlink" title="URL优化"></a>URL优化</h3><p>一般来说，SEO搜索引擎优化认为，网站的最佳结构是 <strong>用户从首页点击三次就可以到达任何一个页面</strong>，但是我们使用<code>Hexo</code>编译的站点结构的<code>URL</code>是：<code>域名/年/月/日/文章标题</code>四层的结构，这样的<code>URL</code>结构很不利于<code>SEO</code>，爬虫就会经常爬不到我们的文章，于是，我们需要优化一下网站文章的<code>URL</code></p><p><strong>方案一</strong>：</p><p>直接改成<code>域名/文章标题</code>的形式，在<code>Hexo配置文件</code>中修改<code>permalink</code>如下：</p><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://blog.sky03.cn</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:title.html</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br></pre></td></tr></table></figure><p><strong>这个方式有个不好的地方：</strong></p><p>直接以<code>文章的标题</code>作为URL，而我们所写的文章的标题一般都是中文，但是URL只能用字母数字和标点符号表示，所以中文的URL只能被转义成一堆符号，而且还特别长。</p><p><strong>方案二</strong>：</p><p>安装固定链接插件：<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a></p><p>插件作用：自动为每篇文章生成一串数字作每篇文章的URI地址。每篇文章的<code>Front-matter</code>中会自动增加一个配置项：<code>abbrlink: xxxxx</code>，该项的值就是当前文章的URI地址。</p><ol><li><p>Hexo根目录执行：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure></li><li><p><code>Hexo配置文件</code>末尾加入以下配置：</p><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-abbrlink config 、固定文章地址插件</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc16</span>  <span class="comment">#算法选项：crc16、crc32，区别见之前的文章，这里默认为crc16丨crc32比crc16复杂一点，长一点</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span>    <span class="comment">#输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</span></span><br></pre></td></tr></table></figure></li><li><p><code>Hexo配置文件</code>中修改<code>permalink</code>如下：</p><p>yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://blog.sky03.cn</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br></pre></td></tr></table></figure></li></ol><p>这样站点结构就变成了：<code>域名/posts/xxx.html</code></p><h2 id="优化小技巧"><a href="#优化小技巧" class="headerlink" title="优化小技巧"></a>优化小技巧</h2><h3 id="异步加载JS"><a href="#异步加载JS" class="headerlink" title="异步加载JS"></a>异步加载JS</h3><p><strong>方法</strong>：将JS文件的引入，放到HTML的body结束标签的上方</p><p><strong>例</strong>：</p><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        xxxxx....</span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;xx/xx.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>原理</strong>：首先要明白，HTML的加载是从上往下一行一行解释执行的，把js文件的引入放到下面，这样就会先把HTML页面展示出来，然后再加载js。这样看起来的效果就是，大体的页面先出来，而js让它慢慢加载执行，如果你把js放到网页的上方，效果就是必须要加载完js才能继续展示网页，体验极差。</p><p><strong>注意</strong>：原主题的js文件尽量不要动，我们只需将自己增加的一些js按照异步加载的方式做即可，比如一些音乐js插件、实时在线聊天js插件等放到最后即可！因为这些文件要加载的东西很多。</p><h3 id="字蛛"><a href="#字蛛" class="headerlink" title="字蛛"></a>字蛛</h3><p><a href="http://font-spider.org/">官网</a> <a href="https://github.com/aui/font-spider">GitHub</a></p><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><p>你的网站中需要自定义字体（额外添加一些普通电脑中没有的字体），但是一般字体是包含很多字符的，这就导致字体文件的体积很大</p><h4 id="字蛛作用"><a href="#字蛛作用" class="headerlink" title="字蛛作用"></a>字蛛作用</h4><p>字蛛就是自动检测网站的 CSS 与 HTML 文件中的自定义字体（额外加的字体），并将网站中<strong>用到的文字</strong>重新打包成一个新的字体文件，并自动引入；</p><p>而<strong>没用到的文字</strong>就会删除，从而达到压缩字体文件体积的作用。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install font-spider -g</span><br></pre></td></tr></table></figure><h4 id="在-CSS-中使用-WebFont："><a href="#在-CSS-中使用-WebFont：" class="headerlink" title="在 CSS 中使用 WebFont："></a>在 CSS 中使用 WebFont：</h4><p>css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*声明 WebFont*/</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;pinghei&#x27;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;../font/pinghei.eot&#x27;</span>);</span><br><span class="line">  <span class="attribute">src</span>:</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&#x27;../font/pinghei.eot?#font-spider&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&#x27;../font/pinghei.woff&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&#x27;../font/pinghei.ttf&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&#x27;../font/pinghei.svg&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用选择器指定字体*/</span></span><br><span class="line"><span class="selector-class">.home</span> <span class="selector-tag">h1</span>, <span class="selector-class">.demo</span> &gt; <span class="selector-class">.test</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;pinghei&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol><li>@font-face 中的 src 定义的 .ttf 文件必须存在，其余的格式将由工具自动生成</li><li>开发阶段请使用相对路径的 CSS 与 WebFont</li></ol></blockquote><h4 id="运行-font-spider-命令："><a href="#运行-font-spider-命令：" class="headerlink" title="运行 font-spider 命令："></a>运行 font-spider 命令：</h4><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-spider ./demo/*.html</span><br></pre></td></tr></table></figure><blockquote><p>页面依赖的字体将会自动压缩好，原 .ttf 字体会备份</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客自定义域名实现HTTPS协议</title>
      <link href="2020/08/14/fu-wu-qi-pei-zhi-https-xie-yi/"/>
      <url>2020/08/14/fu-wu-qi-pei-zhi-https-xie-yi/</url>
      
        <content type="html"><![CDATA[<p>由于默认采用的是http协议，可以导致博客在部署使用的时候加密功能失效。原因在于未使用https协议，所以在此通过下列操作实现域名访问时自动使用https协议，从而完整实现hexo-blog-encrypt插件的功能</p><h1 id="一、使用免费证书"><a href="#一、使用免费证书" class="headerlink" title="一、使用免费证书"></a>一、使用免费证书</h1><p>1、登录阿里云，选择SSL证书</p><p><img src="%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEHTTPS%E5%8D%8F%E8%AE%AE/image-20200814165729391.png" alt="image-20200814165729391"></p><p>2、如下选择并支付</p><p><img src="%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEHTTPS%E5%8D%8F%E8%AE%AE/image-20200814165747946.png" alt="image-20200814165747946"></p><p>3、点击证书申请</p><p><img src="%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEHTTPS%E5%8D%8F%E8%AE%AE/image-20200814165904979.png" alt="image-20200814165904979"></p><p>4、按实际填写</p><p><img src="%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEHTTPS%E5%8D%8F%E8%AE%AE/image-20200814170238382.png" alt="image-20200814170238382"></p><p>5、显示如下，验证后将自动在对应域名中添加相关记录</p><p><img src="%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEHTTPS%E5%8D%8F%E8%AE%AE/image-20200814170340199.png" alt="image-20200814170340199"></p><p>6、签收成功后，去Github的项目仓库中找到Setting中的如果地方勾选即可</p><p><img src="%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEHTTPS%E5%8D%8F%E8%AE%AE/image-20200814171958519.png" alt="image-20200814171958519"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> HTTPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用说明</title>
      <link href="2020/08/14/shi-yong-shuo-ming/"/>
      <url>2020/08/14/shi-yong-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;blinkfox&#x2F;hexo-theme-matery.git</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2018-09-30 17:25:30</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2018-09-30 18:23:38</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: about</span><br><span class="line">date: 2018-09-30 17:25:30</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">layout: &quot;about&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;contact&quot;</span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: contact</span><br><span class="line">date: 2018-09-30 17:25:30</span><br><span class="line">type: &quot;contact&quot;</span><br><span class="line">layout: &quot;contact&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;friends&quot;</span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: friends</span><br><span class="line">date: 2018-12-12 21:25:30</span><br><span class="line">type: &quot;friends&quot;</span><br><span class="line">layout: &quot;friends&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;1_qq_27922023.jpg&quot;,</span><br><span class="line">    &quot;name&quot;: &quot;码酱&quot;,</span><br><span class="line">    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,</span><br><span class="line">    &quot;url&quot;: &quot;http:&#x2F;&#x2F;luokangyuan.com&#x2F;&quot;,</span><br><span class="line">    &quot;title&quot;: &quot;前去学习&quot;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;4027734.jpeg&quot;,</span><br><span class="line">    &quot;name&quot;: &quot;闪烁之狐&quot;,</span><br><span class="line">    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,</span><br><span class="line">    &quot;url&quot;: &quot;https:&#x2F;&#x2F;blinkfox.github.io&#x2F;&quot;,</span><br><span class="line">    &quot;title&quot;: &quot;前去学习&quot;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;avatar.jpg&quot;,</span><br><span class="line">    &quot;name&quot;: &quot;ja_rome&quot;,</span><br><span class="line">    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,</span><br><span class="line">    &quot;url&quot;: &quot;https:&#x2F;&#x2F;me.csdn.net&#x2F;jlh912008548&quot;,</span><br><span class="line">    &quot;title&quot;: &quot;前去学习&quot;</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p><p>编辑你刚刚新建的页面文件 <code>/source/404.md</code>，至少需要以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404</span><br><span class="line">date: 2018-09-30 17:25:30</span><br><span class="line">type: &quot;404&quot;</span><br><span class="line">layout: &quot;404&quot;</span><br><span class="line">description: &quot;Oops～，我崩溃了！找不到你想要的页面 :(&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>) 2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Index:</span><br><span class="line">    url: &#x2F;</span><br><span class="line">    icon: fas fa-home</span><br><span class="line">  Tags:</span><br><span class="line">    url: &#x2F;tags</span><br><span class="line">    icon: fas fa-tags</span><br><span class="line">  Categories:</span><br><span class="line">    url: &#x2F;categories</span><br><span class="line">    icon: fas fa-bookmark</span><br><span class="line">  Archives:</span><br><span class="line">    url: &#x2F;archives</span><br><span class="line">    icon: fas fa-archive</span><br><span class="line">  About:</span><br><span class="line">    url: &#x2F;about</span><br><span class="line">    icon: fas fa-user-circle</span><br><span class="line">  Friends:</span><br><span class="line">    url: &#x2F;friends</span><br><span class="line">    icon: fas fa-address-book</span><br></pre></td></tr></table></figure><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作<br>1.在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)<br>2.在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.<br>3.注意每个二级菜单模块前要加 <code>-</code>.<br>4.注意缩进格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Index:</span><br><span class="line">    url: &#x2F;</span><br><span class="line">    icon: fas fa-home</span><br><span class="line">  Tags:</span><br><span class="line">    url: &#x2F;tags</span><br><span class="line">    icon: fas fa-tags</span><br><span class="line">  Categories:</span><br><span class="line">    url: &#x2F;categories</span><br><span class="line">    icon: fas fa-bookmark</span><br><span class="line">  Archives:</span><br><span class="line">    url: &#x2F;archives</span><br><span class="line">    icon: fas fa-archive</span><br><span class="line">  About:</span><br><span class="line">    url: &#x2F;about</span><br><span class="line">    icon: fas fa-user-circle-o</span><br><span class="line">  Friends:</span><br><span class="line">    url: &#x2F;friends</span><br><span class="line">    icon: fas fa-address-book</span><br><span class="line">  Medias:</span><br><span class="line">    icon: fas fa-list</span><br><span class="line">    children:</span><br><span class="line">      - name: Musics</span><br><span class="line">        url: &#x2F;musics</span><br><span class="line">        icon: fas fa-music</span><br><span class="line">      - name: Movies</span><br><span class="line">        url: &#x2F;movies</span><br><span class="line">        icon: fas fa-film</span><br><span class="line">      - name: Books</span><br><span class="line">        url: &#x2F;books</span><br><span class="line">        icon: fas fa-book</span><br><span class="line">      - name: Galleries</span><br><span class="line">        url: &#x2F;galleries</span><br><span class="line">        icon: fas fa-image</span><br></pre></td></tr></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S hexo-prism-plugin</span><br></pre></td></tr></table></figure><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: false</span><br><span class="line"></span><br><span class="line">prism_plugin:</span><br><span class="line">  mode: &#39;preprocess&#39;    # realtime&#x2F;preprocess</span><br><span class="line">  theme: &#39;tomorrow&#39;</span><br><span class="line">  line_number: false    # default false</span><br><span class="line">  custom_css:</span><br></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br></pre></td></tr></table></figure><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">permalink_pinyin:</span><br><span class="line">  enable: true</span><br><span class="line">  separator: &#39;-&#39; # default: &#39;-&#39;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">postInfo:</span><br><span class="line">  date: true</span><br><span class="line">  update: false</span><br><span class="line">  wordCount: false # 设置文章字数统计为 true.</span><br><span class="line">  totalCount: false # 设置站点文章总字数统计为 true.</span><br><span class="line">  min2read: false # 阅读时长.</span><br><span class="line">  readCount: false # 阅读次数.</span><br></pre></td></tr></table></figure><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">githubEmojis:</span><br><span class="line">  enable: true</span><br><span class="line">  className: github-emoji</span><br><span class="line">  inject: true</span><br><span class="line">  styles:</span><br><span class="line">  customEmojis:</span><br></pre></td></tr></table></figure><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br><span class="line">  content_limit: 140</span><br><span class="line">  content_limit_delim: &#39; &#39;</span><br><span class="line">  order_by: -date</span><br></pre></td></tr></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.socialLink.github) &#123; %&gt;</span><br><span class="line">    &lt;a href&#x3D;&quot;&lt;%&#x3D; theme.socialLink.github %&gt;&quot; class&#x3D;&quot;tooltipped&quot; target&#x3D;&quot;_blank&quot; data-tooltip&#x3D;&quot;访问我的GitHub&quot; data-position&#x3D;&quot;top&quot; data-delay&#x3D;&quot;50&quot;&gt;</span><br><span class="line">        &lt;i class&#x3D;&quot;fab fa-github&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;&#x2F;a&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 是否在首页显示音乐</span><br><span class="line">music:</span><br><span class="line">  enable: true</span><br><span class="line">  title:         # 非吸底模式有效</span><br><span class="line">    enable: true</span><br><span class="line">    show: 听听音乐</span><br><span class="line">  server: netease   # require music platform: netease, tencent, kugou, xiami, baidu</span><br><span class="line">  type: playlist    # require song, playlist, album, search, artist</span><br><span class="line">  id: 503838841     # require song id &#x2F; playlist id &#x2F; album id &#x2F; search keyword</span><br><span class="line">  fixed: false      # 开启吸底模式</span><br><span class="line">  autoplay: false   # 是否自动播放</span><br><span class="line">  theme: &#39;#42b983&#39;</span><br><span class="line">  loop: &#39;all&#39;       # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;</span><br><span class="line">  order: &#39;random&#39;   # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;</span><br><span class="line">  preload: &#39;auto&#39;   # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;</span><br><span class="line">  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span><br><span class="line">  listFolded: true  # 列表默认折叠</span><br></pre></td></tr></table></figure><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#96;获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，&#96;playlist&#96;的&#96;id</span><br></pre></td></tr></table></figure><p>即为这串数字。</p></blockquote><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code>中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code>中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code>选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: typora-vue-theme主题介绍</span><br><span class="line">date: 2018-09-07 09:25:00</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: typora-vue-theme主题介绍</span><br><span class="line">date: 2018-09-07 09:25:00</span><br><span class="line">author: 赵奇</span><br><span class="line">img: &#x2F;source&#x2F;images&#x2F;xxx.jpg</span><br><span class="line">top: true</span><br><span class="line">cover: true</span><br><span class="line">coverImg: &#x2F;images&#x2F;1.jpg</span><br><span class="line">password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span><br><span class="line">toc: false</span><br><span class="line">mathjax: false</span><br><span class="line">summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><br><span class="line">categories: Markdown</span><br><span class="line">tags:</span><br><span class="line">  - Typora</span><br><span class="line">  - Markdown</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. *&#x2F;</span><br><span class="line">.bg-color &#123;</span><br><span class="line">    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-webkit-keyframes rainbow &#123;</span><br><span class="line">   &#x2F;* 动态切换背景颜色. *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes rainbow &#123;</span><br><span class="line">    &#x2F;* 动态切换背景颜色. *&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code>文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&#x2F;medias&#x2F;banner&#x2F;&#39; + new Date().getDay() + &#39;.jpg)&#39;);</span><br></pre></td></tr></table></figure><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>]]></content>
      
      
      <categories>
          
          <category> 使用说明 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 使用说明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是一篇测试文章</title>
      <link href="2020/08/14/zhe-shi-yi-pian-ce-shi-wen-zhang/"/>
      <url>2020/08/14/zhe-shi-yi-pian-ce-shi-wen-zhang/</url>
      
        <content type="html"><![CDATA[<p>当你看到这条消息时，你的这次测试就成功了！！！</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code>中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code>中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code>选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Github Pages+Hexo搭建博客</title>
      <link href="2020/08/14/shi-yong-github-pages-hexo-da-jian-bo-ke/"/>
      <url>2020/08/14/shi-yong-github-pages-hexo-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Github Pages</p></blockquote><p>Github Pages可以被认为是用户编写的、托管在github上的静态网页。使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。</p><blockquote><p>Hexo </p></blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><ul><li><strong>安装Node.js</strong></li></ul><p><a href="http://nodejs.cn/">官网</a> 按需下载</p><ul><li><strong>安装Git</strong></li></ul><p><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git">官网</a> 按需下载</p><p>资料参考：</p><p><a href="https://www.cnblogs.com/jytx/p/5602927.html">《如何在windows中安装Git》</a></p><p><a href="http://git.oschina.net/progit/">《Pro Git中文版》</a></p><ul><li><strong>检测软件是否安装成功</strong></li></ul><p>在cmd中输入下列命令，若显示版本信息，则表示安装成功。否则卸载重新安装。Git安装成功后在桌面右键查看是否有Git GUI Here（图形界面的Git操作） 和 Git Bash Here（命令行） 选项</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112502.png" alt="image-20200814103011890" style="zoom:200%;" /><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112503.png" alt="image-20200814103038368" style="zoom: 150%;" /><ul><li><strong>Hexo 安装</strong></li></ul><p>新建文件夹（eg：E:\HBlog），博客相关的文件均存储在此文件夹下，在该文件夹下右键，选择Git Bash Here，输入下列命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g#表示安装hexo</span><br><span class="line">npm install hexo-deployer-git --save#表示安装hexo部署到git page 的deployer</span><br></pre></td></tr></table></figure><p>安装时有警告无伤大雅</p><ul><li><strong>Hexo初始化配置</strong></li></ul><p>新建文件夹（eg：E:\HBlog\Hexo）。进入该文件夹右键Git Bah Here，输入下列命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>hexo安装完毕后会自动生成下列文件（个别出入无伤大雅）</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112504.png" alt="image-20200814104022259"></p><ul><li><strong>本地预览</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>执行完毕后访问<code>localhost:4000</code> 即可预览  也可以使用<code>hexo g</code> <code>hexo s</code>命令</p><p>显示如下则成功</p><p><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112505.png" alt="image-20200814104501125"></p><ul><li><strong>部署博客到Github Pages中</strong></li></ul><p>首先肯定是需要一个Github账号啊</p><p>一、注册Github<a href="https://github.com/">账号注册</a>，有则忽略</p><p>二、创建项目代码库，点击 new repositories创建</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112506.png" alt="image-20200814105019137"></p><p>三、配置SSH密钥： 只有配置SSH密钥后，才可以通过git操作实现本地代码库与Github代码库同步，在E:\HBlog\Hexo中使用Git Bash Here</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your email@xx.com&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">填写你的Github的注册邮箱</span></span><br></pre></td></tr></table></figure><p>接下来出现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):</span><br><span class="line">//到这里可以直接回车将密钥按默认文件进行存储</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">&#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line">Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">这里是各种字母数字组成的字符串，结尾是你的邮箱</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">这里也是各种字母数字符号组成的字符串</span><br></pre></td></tr></table></figure><p>运行下列命令，将公钥的内容复制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure><p>四、在Github中添加你的公钥</p><p>1、登录Github，进入Setting</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112507.png" alt="image-20200814111128020"></p><p>2、点击SSH and GPG Keys</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112508.png" alt="image-20200814111157044"></p><p>3、 点击New SSH key</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112509.png" alt="image-20200814111223117"></p><p>4、粘贴密钥</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112510.png" alt="image-20200814111300239"></p><p>五、测试</p><p>输入下列命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>有下列显示则成功，可以中途需要输入<code>yes</code></p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112511.png" alt="image-20200814111430254"></p><p>六、配置Git个人信息</p><p>Git会根据用户的名字和邮箱来记录提交，同时也是使用这些信息来做权限的处理，输入下列命令进行个人信息设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name#替换为你的用户名，建议与Github一致，当然也可自定义</span><br><span class="line">git config --global user.email#填写你的邮箱，建议与Github一致</span><br></pre></td></tr></table></figure><p><strong>至此，本机已可成功连接Github</strong></p><ul><li><strong>将本地的Hexo文件更新之Github仓库中</strong></li></ul><p>一、打开自己的Github项目，选择<code>Use SSH</code>，复制地址</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112512.png" alt="image-20200814111911153"></p><p>二、打开E:\HBlog\Hexo，即Hexo根目录下的_config.yml文件，并按图修改如下</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112513.png" alt="image-20200814112237253"></p><p>三、在Hexo文件夹中执行下列命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>或者<code>hexo g -d</code></p><p>首次执行时会让你输入Github的账号与密码</p><p>若产生下列报错</p><p><code>ERROR Deployer not found: git</code></p><p>说明你的deployer未安装成功，需要重新安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后执行<code>hexo g -d</code>即可部署到Github中</p><p>七、访问</p><p>博客地址就是<a href="https://xx.giithub.io/">https://xx.giithub.io</a></p><ul><li><strong>如何在博客中发表文章</strong></li></ul><p>在Hexo的根目录下Git Bash Here，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;文章标题&quot;</span><br></pre></td></tr></table></figure><p>即在Hexo/source/_posts下新建<code>文章标题.md</code></p><p>推荐使用 Typora 或者 vscode</p><ul><li><strong>如何为博客更换主题</strong></li></ul><p>Hexo<a href="https://hexo.io/themes/">主题官网</a></p><p>一、找寻一个喜欢的主题，polk为例</p><p>二、找到主题的github地址，复制</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112514.png" alt="image-20200814113408772"></p><p>三、在/Hexo/themes/中Git Bash Here，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 输入刚才复制的主题地址</span><br></pre></td></tr></table></figure><p>四、下载完毕后，/Hexo/themes/ 会增加一个主题的文件夹</p><p>五、打开Hexo根目录下的_config.yml 修改下列参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme： XXXXX#xxxx是你的主题名称</span><br></pre></td></tr></table></figure><p>六、完毕后，在Hexo根目录下<code>hexo g -s</code>预览</p><p>七、效果如果满意则继续部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清除缓存，以防主题未更新</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><ul><li><strong>为博客配置一个域名</strong></li></ul><p>当然也可以不配置，直接使用 xx.github.io 访问也可以</p><p>一、<a href="https://www.aliyun.com/">购买域名</a> 推荐阿里云吧</p><p>二、为域名添加记录</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112515.png" alt="image-20200814114338837"></p><p>三、在你的Github仓库的Setting中，添加上你购买的域名</p><p><img src="https://cdn.jsdelivr.net/gh/Hmouren/tuchuang/img/20201230112516.png" alt="image-20200814114535023"></p><p>四、然后会在你的仓库中生成一个 CNAME 进入后如果显示了你的域名，则表示成功</p><p>五、接下来就可以通过你的自定义域名进行访问了</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Hexo博客不显示图片</title>
      <link href="2020/08/13/jie-jue-hexo-bo-ke-bu-xian-shi-tu-pian/"/>
      <url>2020/08/13/jie-jue-hexo-bo-ke-bu-xian-shi-tu-pian/</url>
      
        <content type="html"><![CDATA[<p>使用hexo搭建的博客在初期可能会遇到一个问题：在一个<code>.md</code>中添加的图片并无法预览显示,下面介绍一种解决的方法:</p><p>1.修改博客的配置</p><p>2.安装插件</p><h3 id="修改博客配置"><a href="#修改博客配置" class="headerlink" title="修改博客配置"></a>修改博客配置</h3><p>修改博客根目录下的<code>_config.yml</code>文件中的配置项<code>post_asset_folder</code>为true</p><p>完成此配置后,当你通过<code>hexo n 文件名</code>新建博客后,会产生一个和文件同名的文件夹.</p><p><img src="%E8%A7%A3%E5%86%B3Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/image-20200813194501991.png" alt="image-20200813194501991"></p><h3 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h3><p>在博客的根目录下使用npm安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>当文章需要添加图片时,将所需的图片放到同名的文件夹中,同时通过相对路径索引到该图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![示例1](.&#x2F;解决Hexo博客不显示图片&#x2F;123.jpg)</span><br></pre></td></tr></table></figure><p>使用<code>hexo g -s</code>可以在本地预览</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>如果使用的是Typora,可以在偏好设置中进行如下配置</p><p><img src="%E8%A7%A3%E5%86%B3Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/image-20200813194924154.png" alt="image-20200813194924154"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastDFS文件上传成功，但是访问404可能的原因</title>
      <link href="2020/08/13/fastdfs-wen-jian-shang-chuan-cheng-gong-dan-shi-fang-wen-404-ke-neng-de-yuan-yin/"/>
      <url>2020/08/13/fastdfs-wen-jian-shang-chuan-cheng-gong-dan-shi-fang-wen-404-ke-neng-de-yuan-yin/</url>
      
        <content type="html"><![CDATA[<h1 id="一、检查文件是否存在"><a href="#一、检查文件是否存在" class="headerlink" title="一、检查文件是否存在"></a>一、检查文件是否存在</h1><p>文件上传后的真实路径<code>/fastdfs/storage/data/M00/00/00</code></p><h1 id="二、检查nginx能否正常启动"><a href="#二、检查nginx能否正常启动" class="headerlink" title="二、检查nginx能否正常启动"></a>二、检查nginx能否正常启动</h1><h2 id="1、检查nginx的主配置文件（nginx-conf）"><a href="#1、检查nginx的主配置文件（nginx-conf）" class="headerlink" title="1、检查nginx的主配置文件（nginx.conf）"></a>1、检查nginx的主配置文件（nginx.conf）</h2><p><img src="FastDFS%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%88%90%E5%8A%9F%EF%BC%8C%E4%BD%86%E6%98%AF%E8%AE%BF%E9%97%AE404%E5%8F%AF%E8%83%BD%E7%9A%84%E5%8E%9F%E5%9B%A0/image-20200813170920987.png" alt="image-20200813170920987"></p><h1 id="三、检查FastDFS"><a href="#三、检查FastDFS" class="headerlink" title="三、检查FastDFS"></a>三、检查FastDFS</h1><h2 id="1、检测FastDFS中的配置文件"><a href="#1、检测FastDFS中的配置文件" class="headerlink" title="1、检测FastDFS中的配置文件"></a>1、检测FastDFS中的配置文件</h2><p>storage.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">group_name=group1     </span><br><span class="line"> </span><br><span class="line">base_path=/fastdfs/storage   </span><br><span class="line"> </span><br><span class="line">store_path0=/fastdfs/storage   </span><br><span class="line"> </span><br><span class="line">tracker_server=192.168.59.131:22122    </span><br><span class="line"> </span><br><span class="line">http.server_port=80     建议改成80</span><br></pre></td></tr></table></figure><p>tracker.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">base_path&#x3D;&#x2F;fastdfs&#x2F;tracker   </span><br><span class="line"> </span><br><span class="line">tracker_server&#x3D;192.168.59.131:22122   </span><br><span class="line"> </span><br><span class="line">http.tracker_server_port&#x3D;80   </span><br></pre></td></tr></table></figure><p>client.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">base_path&#x3D;&#x2F;fastdfs&#x2F;tracker   </span><br><span class="line"> </span><br><span class="line">tracker_server&#x3D;192.168.59.131:22122   </span><br><span class="line"> </span><br><span class="line">http.tracker_server_port&#x3D;80   </span><br></pre></td></tr></table></figure><h2 id="2、检查mod-fastdfs-conf"><a href="#2、检查mod-fastdfs-conf" class="headerlink" title="2、检查mod_fastdfs.conf"></a>2、检查mod_fastdfs.conf</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tracker_server&#x3D;192.168.59.131:22122   </span><br><span class="line"> </span><br><span class="line">url_have_group_name &#x3D; true    </span><br><span class="line"> </span><br><span class="line">store_path0&#x3D;&#x2F;fastdfs&#x2F;storage    </span><br></pre></td></tr></table></figure><h1 id="四、检查访问路径是否正确"><a href="#四、检查访问路径是否正确" class="headerlink" title="四、检查访问路径是否正确"></a>四、检查访问路径是否正确</h1>]]></content>
      
      
      <categories>
          
          <category> 乐优商城学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> FastDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux7.5安装使用FastDFS</title>
      <link href="2020/08/13/linux-centos7.5-an-zhuang-shi-yong-fastdfs/"/>
      <url>2020/08/13/linux-centos7.5-an-zhuang-shi-yong-fastdfs/</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装FastDFS"><a href="#一、安装FastDFS" class="headerlink" title="一、安装FastDFS"></a>一、安装FastDFS</h1><p>new</p><h2 id="1、安装编译工具以及库文件"><a href="#1、安装编译工具以及库文件" class="headerlink" title="1、安装编译工具以及库文件"></a>1、安装编译工具以及库文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel</span><br></pre></td></tr></table></figure><h2 id="2、上传所需文件到linux虚拟机中"><a href="#2、上传所需文件到linux虚拟机中" class="headerlink" title="2、上传所需文件到linux虚拟机中"></a>2、上传所需文件到linux虚拟机中</h2><p>此处放于/usr/local/leyou</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以使用xftp工具或者npm install -y lrzsz</span><br></pre></td></tr></table></figure><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/%E8%BD%AF%E4%BB%B6%E7%89%88%E6%9C%AC.png" alt="所需软件版本"></p><h3 style="color:red">建议版本与上述推荐一致，避免不必要的错误</h3><h2 id="3、安装libfastcommon"><a href="#3、安装libfastcommon" class="headerlink" title="3、安装libfastcommon"></a>3、安装libfastcommon</h2><p><b>    此处！建议使用libfastcommon-master-zip版本，其余版本eglibfastcommon_v1.04.tar.gz可能在编译安装完成之后，再去FastDFS中编译安装会报错，缺少文件</b></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1mkdir -p /usr/local/leyou</span><br><span class="line">2cd /usr/local/leyou</span><br><span class="line">3unzip libfastcommon-master.zip    #解压到当前文件夹</span><br><span class="line">4cd ./libfastcommon-master</span><br><span class="line">5./make.sh &amp;&amp; ./make.sh install    #是c语言写的，实现编译与安装</span><br></pre></td></tr></table></figure><p>编译安装后，发现libfastcommon默认安装到/usr/lib64/中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls | grep libfastcommon.so   #可以通过此命令在/usr/lib64和/usr/lib目录均查看</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1cd /usr/lib</span><br><span class="line">2ls | grep libfastcommon.so</span><br><span class="line"></span><br><span class="line">3cd /usr/lib64/</span><br><span class="line">4ls | grep libfastcommon.so</span><br></pre></td></tr></table></figure><p>创建软连接，由于FastDFS主程序设置的目录为/usr/local/lib，所以需要创建/usr/lib64/下的一些核心执行程序的软连接文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1cd /usr/local/lib  #如果不存在则手动创建</span><br><span class="line"><span class="meta">#</span><span class="bash">建立软连接</span></span><br><span class="line">2ln -s /usr/lib64/libfastcommon.so /usr/local/lib/libfastcommon.so</span><br><span class="line"> </span><br><span class="line">3ln -s /usr/lib64/libfastcommon.so /usr/lib/libfastcommon.so  </span><br><span class="line"> </span><br><span class="line">4ln -s /usr/lib64/libfdfsclient.so /usr/local/lib/libfdfsclient.so </span><br><span class="line"> </span><br><span class="line">5ln -s /usr/lib64/libfdfsclient.so /usr/lib/libfdfsclient.so</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">如果是FastDFS5.0.8，在创建时，可能有的会提示已存在（无所谓，下面不做特殊说明，均用5.08版本）</span></span><br></pre></td></tr></table></figure><h2 id="4、安装FastDFS"><a href="#4、安装FastDFS" class="headerlink" title="4、安装FastDFS"></a>4、安装FastDFS</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1cd /usr/local/leyou</span><br><span class="line">2tar -zxvf FastDFS_v5.08.tar.gz</span><br><span class="line">3cd ./FastDFS</span><br><span class="line">4./make.sh &amp;&amp; ./make.sh install</span><br></pre></td></tr></table></figure><p>如果编译安装成功,显示如图</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1cd /etc/init.d/</span><br><span class="line">2ll</span><br><span class="line">3cd /etc/fdfs/</span><br><span class="line">4ll</span><br></pre></td></tr></table></figure><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813160212569.png" alt="image-20200813160212569"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/bin &amp;&amp; ls | grep fdfs#进入/usr/bin目录下，且显示fdfs的所有执行脚本</span><br></pre></td></tr></table></figure><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813160429865.png" alt="image-20200813160429865"></p><p><b style="color:red">这里提一下，5.05版本需要更改，5.08默认是/usr/bin</b></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1#因为FastDFS服务脚本设置的bin目录为/usr/local/bin/下,但是实际我们安装在了/usr/bin/下面。所以我们需要修改FastDFS配置文件中的路径，也就是需要修改两个配置文件</span><br><span class="line">2yum install -y vim</span><br><span class="line">3vim /etc/init.d/fdfs_storaged</span><br><span class="line">4:%s+/usr/local/bin+/usr/bin #然后回车，执行全局替换命令，:wq!保存退出</span><br><span class="line">5vim /etc/init.d/fdfs_trackerd</span><br><span class="line">6:%s+/usr/local/bin+/usr/bin #然后回车，执行全局替换命令，:wq!保存退出</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1cd /etc/fdfs/</span><br><span class="line">2cp storage.conf.sample storage.conf</span><br><span class="line">3cp client.conf.sample client.conf</span><br><span class="line">4cp tracker.conf.sample tracker.conf</span><br></pre></td></tr></table></figure><p><strong>编辑tracker.conf：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1vim /etc/fdfs/tracker.conf</span><br><span class="line"></span><br><span class="line">2base_path=/fastdfs/tracker</span><br><span class="line"></span><br><span class="line">3mkdir -p /fastdfs/tracker</span><br></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>启动tracker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">第一种方式</span></span><br><span class="line">1/etc/init.d/fdfs_trackerd start</span><br><span class="line">2/etc/init.d/fdfs_trackerd stop</span><br><span class="line"><span class="meta">#</span><span class="bash">第二种方式</span></span><br><span class="line">3/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf start #启动tracker命令</span><br><span class="line">4/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf stop #关闭tracker命令</span><br></pre></td></tr></table></figure><p>如果启动成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1ps -ef | grep fdfs#会出现三个进程</span><br><span class="line">2cd /fastdfs/tracker/ &amp;&amp; ll#会生成data和logs文件夹</span><br></pre></td></tr></table></figure><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813161734515.png" alt="image-20200813161734515"></p><p><strong>修改client.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1vim /etc/fdfs/client.conf</span><br><span class="line"></span><br><span class="line">2base_path=/fastdfs/tracker</span><br><span class="line">3tracker_server=192.168.77.131:22122   #如果是主机连接虚拟机，则填写虚拟机的ip</span><br><span class="line">4http.tracker_server_port=80#端口统一</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1vim /etc/fdfs/storage.conf</span><br><span class="line"></span><br><span class="line">2#修改内容如下</span><br><span class="line">3base_path=/fastdfs/storage </span><br><span class="line">4store_path0=/fastdfs/storage </span><br><span class="line">5tracker_server=192.168.77.131:22122 ##改成自己的虚拟机IP地址</span><br><span class="line">6http.server_port=80</span><br></pre></td></tr></table></figure><p><strong>启动storaged</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">第一种方法</span></span><br><span class="line">1/etc/init.d/fdfs_storaged start  #启动storaged </span><br><span class="line">2/etc/init.d/fdfs_storaged stop #关闭storaged</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">第二种方法</span></span><br><span class="line">3/usr/bin/fdfs_storaged /etc/fdfs/storage.conf start    #启动storaged</span><br><span class="line">4   /usr/bin/fdfs_storaged  /etc/fdfs/storage.conf stop    #关闭storaged</span><br></pre></td></tr></table></figure><p>如果成功启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1cd /fastdfs/storage/data &amp;&amp; ls</span><br></pre></td></tr></table></figure><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813162619756.png" alt="image-20200813162619756"></p><p>设置服务开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1vim /etc/rc.d/rc.local</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">加入下列配置</span></span><br><span class="line">2/etc/init.d/fdfs_trackerd start</span><br><span class="line">3/etc/init.d/fdfs_storaged start</span><br></pre></td></tr></table></figure><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813162903213.png" alt="image-20200813162903213" style="zoom:150%;" /><h2 id="5、测试FastDFS"><a href="#5、测试FastDFS" class="headerlink" title="5、测试FastDFS"></a>5、测试FastDFS</h2><p>原本/fastdfs/storage/data/00/00为空，并没有文件。</p><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813163203429.png" alt="image-20200813163203429"></p><p>接下来我们进行上传操作，比如将/usr/local/leyou/中的一个照片上传到FastDFS系统中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/fdfs_upload_file /etc/fdfs/client.conf /usr/local/leyou/picture1.jpg</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813163503747.png" alt="image-20200813163503747"></p><h2 style="color:red">注：</h2><p>这生成的group1/M00/00/00/wKhNgl80y26ALvZBAAdhomzfHGU319.jpg就是我们访问路径的一部分，完整路径是192.168.77.131/group1/M00/00/00/wKhNgl80y26ALvZBAAdhomzfHGU319.jpg</p><h1 id="二、安装nginx"><a href="#二、安装nginx" class="headerlink" title="二、安装nginx"></a>二、安装nginx</h1><p>·此处建议不用yum方式安装nginx，因为需要添加模块，没有./configure</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1cd /usr/local/leyou</span><br><span class="line">2tar -zxvf nginx-1.14.1.tar.gz -C /usr/local</span><br></pre></td></tr></table></figure><p>安装pcre：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">可以直接下载安装包解压，也可以使用wget</span></span><br><span class="line">1cd /usr/local/leyou</span><br><span class="line">2yum install -y wget</span><br><span class="line">3wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz #安装pcre</span><br><span class="line">4 tar -zxvf pcre-8.35.tar.gz -C /usr/local #解压到/usr/local</span><br><span class="line">5cd /usr/local/pcre-8.35</span><br><span class="line">6./configure</span><br><span class="line">7make &amp;&amp; make install</span><br><span class="line">8pcre-config --version #查看版本号</span><br></pre></td></tr></table></figure><p>进入nginx安装目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1cd /usr/local/nginx-1.14.1</span><br><span class="line">2./configure --prefix=/usr/local/nginx --with-http_stub_status_module</span><br><span class="line">3make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>启动nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">可以看到四个文件夹</span></span><br><span class="line"><span class="meta">#</span><span class="bash">conf配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">html网页文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">logs日志文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">sbin主要二进制程序</span></span><br><span class="line"><span class="meta">#</span><span class="bash">启动nginx</span></span><br><span class="line">./sbin/nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">查看进程</span></span><br><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><p>现在可以在主机的浏览器中输入你的ip地址，效果如下：</p><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813164541418.png" alt="image-20200813164541418"></p><h1 id="三、FastDFS与Nginx整合"><a href="#三、FastDFS与Nginx整合" class="headerlink" title="三、FastDFS与Nginx整合"></a>三、FastDFS与Nginx整合</h1><p>首先需要安装fastdfs-nginx-module</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1cd /usr/local/leyou/ &amp;&amp; ll</span><br><span class="line"></span><br><span class="line">2tar ./fastdfs-nginx-module_v1.16.tar.gz</span><br><span class="line">3cd ./fastdfs-nginx-module/src/</span><br><span class="line">4vim ./config</span><br><span class="line">5:%s+/usr/local+/usr #将config文件中的/usr/local替换成/usr</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1cd /usr/local/</span><br><span class="line">2rm -rf nginx</span><br><span class="line">3cd ./nginx-1.14.1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">编译时要添加模块</span></span><br><span class="line">./configure --prefix=/usr/local/nginx --add-module=/usr/fastdfs-nginx-module/src</span><br><span class="line"><span class="meta">#</span><span class="bash">这一步可能会报错，直接看下面的错误解决</span></span><br><span class="line"></span><br><span class="line">5make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">复制fastdfs-nginx-module中的配置文件，到etc/fdfs中</span></span><br><span class="line">1cp /usr/local/leyou/fastdfs-nginx-module/src/mod_fastdfs.conf /etc/fdfs/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">接下来在etc/fdfs中修改盖菜copy的mod_fastdfs.conf文件</span></span><br><span class="line">2vim /etc/fdfs/mod_fastdfs.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">修改内容如下</span></span><br><span class="line">3connect_timeout=10 </span><br><span class="line">4tracker_server=192.168.59.131:22122 </span><br><span class="line">5url_have_group_name = true </span><br><span class="line">6store_path0=/fastdfs/storage</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1cd /usr/local/leyou/FastDFS/conf</span><br><span class="line">2cp http.conf mime.types /etc/fdfs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#创建一个软连接，在/fastdfs/storage文件存储目录下创建软连接，将其链接到实际存放数据 的目录。</span></span> </span><br><span class="line">3cd /fastdfs/storage   #进入/fastdfs/storage目录下</span><br><span class="line"> </span><br><span class="line">4ln -s /fastdfs/storage/data/ /fastdfs/storage/data/M00</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1cd /usr/local/nginx/conf</span><br><span class="line">2vim nginx.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813165536252.png" alt="image-20200813165536252"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location ~/group([0-9])/M00 &#123;            </span><br><span class="line">        root  /fastdfs/storage/data;</span><br><span class="line">        ngx_fastdfs_module;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>注意：nginx里的端口要和配置FastDFS存储中的storage.conf文件配置一致， 也就是（http.server_port=80）</p><p><b style="color:red">注意</b></p><p>这里的nginx启动命令是：</p><p>关闭nginx命令：/usr/local/nginx/sbin/nginx -s stop</p><p>启动nginx命令：/usr/local/nginx/sbin/nginx </p><p>查看版本命令：/usr/local/nginx/sbin/nginx -v</p><p>如果直接用nginx -s stop，nginx -s reload,nginx -v    会报错：</p><p><b style="color:red">解决方法</b></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1vim /etc/profile</span><br><span class="line"></span><br><span class="line">2PATH=$PATH:/usr/local/nginx/sbin</span><br><span class="line"></span><br><span class="line">3source /etc/profile</span><br></pre></td></tr></table></figure><h1 id="四、最后一步测试"><a href="#四、最后一步测试" class="headerlink" title="四、最后一步测试"></a>四、最后一步测试</h1><p>开启storage、tracker、nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1/etc/init.d/fdfs_trackerd start</span><br><span class="line">2/etc/init.d/fdfs_storaged start</span><br><span class="line">3nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看是否启动成功</span></span><br><span class="line">4ps -ef | grep fdfs</span><br><span class="line">5ps -ef | grep nginx</span><br></pre></td></tr></table></figure><p>当主机访问<code>http://192.168.77.130/group1/M00/00/00/wKhNgl80y26ALvZBAAdhomzfHGU319.jpg</code>时，显示如下</p><p><img src="Linux%20Centos7.5%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8FastDFS/image-20200813170144920.png" alt="image-20200813170144920"></p><h1 id="五、可能出现的错误"><a href="#五、可能出现的错误" class="headerlink" title="五、可能出现的错误"></a>五、可能出现的错误</h1><h2 id="1、-usr-src-fastdfs-nginx-module-src-common-c-21-25-致命错误：fdfs-define-h：没有那个文件或目录-include"><a href="#1、-usr-src-fastdfs-nginx-module-src-common-c-21-25-致命错误：fdfs-define-h：没有那个文件或目录-include" class="headerlink" title="1、/usr/src/fastdfs-nginx-module/src/common.c:21:25:致命错误：fdfs_define.h：没有那个文件或目录 #include"></a>1、/usr/src/fastdfs-nginx-module/src/common.c:21:25:致命错误：fdfs_define.h：没有那个文件或目录 #include</h2><p>编译中断。<br>     原因：编译安装nginx的fastdfs插件的头文件没有找到，由于编译nginx时候系统会到／usr/local /include，</p><p>​            而编译安装fastdfs-nginx-module时则默认保存在了/usr/include目录。<br>​     修复：ln -s /usr/include/fast* /usr/local/include/</p>]]></content>
      
      
      <categories>
          
          <category> 乐优商城学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> FastDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法学习</title>
      <link href="2020/08/12/markdown-yu-fa-xue-xi/"/>
      <url>2020/08/12/markdown-yu-fa-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown标题使用"><a href="#Markdown标题使用" class="headerlink" title="Markdown标题使用"></a>Markdown标题使用</h1><h2 id="1、使用-号标记"><a href="#1、使用-号标记" class="headerlink" title="1、使用  # 号标记"></a>1、使用  # 号标记</h2><p>使用 # 号可以标记1-6级标题,一级标题对应#   ,二级标题对应## ,以此类推</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">……</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p>显示效果如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p>……</p><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="2、使用typora快捷键"><a href="#2、使用typora快捷键" class="headerlink" title="2、使用typora快捷键"></a>2、使用typora快捷键</h2><p><code>ctrl</code>+<code>1-6</code>即可</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
